// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Corporation.pb.h"
// @@protoc_insertion_point(imports)

@implementation CorporationRoot
static id<PBExtensionField> CorporationRoot_fetchCorporationReq = nil;
static id<PBExtensionField> CorporationRoot_fetchCorporationResp = nil;
static id<PBExtensionField> CorporationRoot_fetchChangedCorporationReq = nil;
static id<PBExtensionField> CorporationRoot_fetchChangedCorporationResp = nil;
static id<PBExtensionField> CorporationRoot_fetchCorporationByPassportIdReq = nil;
static id<PBExtensionField> CorporationRoot_fetchCorporationByPassportIdResp = nil;
static id<PBExtensionField> CorporationRoot_fetchCorporationStructReq = nil;
static id<PBExtensionField> CorporationRoot_fetchCorporationStructResp = nil;
static id<PBExtensionField> CorporationRoot_corporationChangedNotify = nil;
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [CorporationRoot class]) {
    CorporationRoot_fetchCorporationReq =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[PBFrame class]
                                       fieldNumber:400
                                      defaultValue:[PBFetchCorporationReq defaultInstance]
                               messageOrGroupClass:[PBFetchCorporationReq class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    CorporationRoot_fetchCorporationResp =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[PBFrame class]
                                       fieldNumber:401
                                      defaultValue:[PBFetchCorporationResp defaultInstance]
                               messageOrGroupClass:[PBFetchCorporationResp class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    CorporationRoot_fetchChangedCorporationReq =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[PBFrame class]
                                       fieldNumber:402
                                      defaultValue:[PBFetchChangedCorporationReq defaultInstance]
                               messageOrGroupClass:[PBFetchChangedCorporationReq class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    CorporationRoot_fetchChangedCorporationResp =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[PBFrame class]
                                       fieldNumber:403
                                      defaultValue:[PBFetchChangedCorporationResp defaultInstance]
                               messageOrGroupClass:[PBFetchChangedCorporationResp class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    CorporationRoot_fetchCorporationByPassportIdReq =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[PBFrame class]
                                       fieldNumber:404
                                      defaultValue:[PBFetchCorporationByPassportIdReq defaultInstance]
                               messageOrGroupClass:[PBFetchCorporationByPassportIdReq class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    CorporationRoot_fetchCorporationByPassportIdResp =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[PBFrame class]
                                       fieldNumber:405
                                      defaultValue:[PBFetchCorporationByPassportIdResp defaultInstance]
                               messageOrGroupClass:[PBFetchCorporationByPassportIdResp class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    CorporationRoot_fetchCorporationStructReq =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[PBFrame class]
                                       fieldNumber:406
                                      defaultValue:[PBFetchCorporationStructReq defaultInstance]
                               messageOrGroupClass:[PBFetchCorporationStructReq class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    CorporationRoot_fetchCorporationStructResp =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[PBFrame class]
                                       fieldNumber:407
                                      defaultValue:[PBFetchCorporationStructResp defaultInstance]
                               messageOrGroupClass:[PBFetchCorporationStructResp class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    CorporationRoot_corporationChangedNotify =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[PBFrame class]
                                       fieldNumber:450
                                      defaultValue:[PBCorporationChangedNotify defaultInstance]
                               messageOrGroupClass:[PBCorporationChangedNotify class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [FrameRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
  [registry addExtension:CorporationRoot_fetchCorporationReq];
  [registry addExtension:CorporationRoot_fetchCorporationResp];
  [registry addExtension:CorporationRoot_fetchChangedCorporationReq];
  [registry addExtension:CorporationRoot_fetchChangedCorporationResp];
  [registry addExtension:CorporationRoot_fetchCorporationByPassportIdReq];
  [registry addExtension:CorporationRoot_fetchCorporationByPassportIdResp];
  [registry addExtension:CorporationRoot_fetchCorporationStructReq];
  [registry addExtension:CorporationRoot_fetchCorporationStructResp];
  [registry addExtension:CorporationRoot_corporationChangedNotify];
}
+ (id<PBExtensionField>) fetchCorporationReq {
  return CorporationRoot_fetchCorporationReq;
}
+ (id<PBExtensionField>) fetchCorporationResp {
  return CorporationRoot_fetchCorporationResp;
}
+ (id<PBExtensionField>) fetchChangedCorporationReq {
  return CorporationRoot_fetchChangedCorporationReq;
}
+ (id<PBExtensionField>) fetchChangedCorporationResp {
  return CorporationRoot_fetchChangedCorporationResp;
}
+ (id<PBExtensionField>) fetchCorporationByPassportIdReq {
  return CorporationRoot_fetchCorporationByPassportIdReq;
}
+ (id<PBExtensionField>) fetchCorporationByPassportIdResp {
  return CorporationRoot_fetchCorporationByPassportIdResp;
}
+ (id<PBExtensionField>) fetchCorporationStructReq {
  return CorporationRoot_fetchCorporationStructReq;
}
+ (id<PBExtensionField>) fetchCorporationStructResp {
  return CorporationRoot_fetchCorporationStructResp;
}
+ (id<PBExtensionField>) corporationChangedNotify {
  return CorporationRoot_corporationChangedNotify;
}
@end

@interface PBCorporation ()
@property SInt64 id;
@property PBCorporationType type;
@property PBCorporationStatus status;
@property (strong) NSString* name;
@property (strong) NSString* alias;
@property SInt64 createdAt;
@property SInt64 updatedAt;
@end

@implementation PBCorporation

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value_ {
  hasType_ = !!value_;
}
@synthesize type;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasAlias {
  return !!hasAlias_;
}
- (void) setHasAlias:(BOOL) value_ {
  hasAlias_ = !!value_;
}
@synthesize alias;
- (BOOL) hasCreatedAt {
  return !!hasCreatedAt_;
}
- (void) setHasCreatedAt:(BOOL) value_ {
  hasCreatedAt_ = !!value_;
}
@synthesize createdAt;
- (BOOL) hasUpdatedAt {
  return !!hasUpdatedAt_;
}
- (void) setHasUpdatedAt:(BOOL) value_ {
  hasUpdatedAt_ = !!value_;
}
@synthesize updatedAt;
- (id) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.type = PBCorporationTypeTypeCorp;
    self.status = PBCorporationStatusStatusCommon;
    self.name = @"";
    self.alias = @"";
    self.createdAt = 0L;
    self.updatedAt = 0L;
  }
  return self;
}
static PBCorporation* defaultPBCorporationInstance = nil;
+ (void) initialize {
  if (self == [PBCorporation class]) {
    defaultPBCorporationInstance = [[PBCorporation alloc] init];
  }
}
+ (PBCorporation*) defaultInstance {
  return defaultPBCorporationInstance;
}
- (PBCorporation*) defaultInstance {
  return defaultPBCorporationInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeSInt64:1 value:self.id];
  }
  if (self.hasType) {
    [output writeEnum:2 value:self.type];
  }
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  if (self.hasName) {
    [output writeString:4 value:self.name];
  }
  if (self.hasAlias) {
    [output writeString:5 value:self.alias];
  }
  if (self.hasCreatedAt) {
    [output writeSInt64:6 value:self.createdAt];
  }
  if (self.hasUpdatedAt) {
    [output writeSInt64:7 value:self.updatedAt];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeSInt64Size(1, self.id);
  }
  if (self.hasType) {
    size_ += computeEnumSize(2, self.type);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(3, self.status);
  }
  if (self.hasName) {
    size_ += computeStringSize(4, self.name);
  }
  if (self.hasAlias) {
    size_ += computeStringSize(5, self.alias);
  }
  if (self.hasCreatedAt) {
    size_ += computeSInt64Size(6, self.createdAt);
  }
  if (self.hasUpdatedAt) {
    size_ += computeSInt64Size(7, self.updatedAt);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBCorporation*) parseFromData:(NSData*) data {
  return (PBCorporation*)[[[PBCorporation builder] mergeFromData:data] build];
}
+ (PBCorporation*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBCorporation*)[[[PBCorporation builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBCorporation*) parseFromInputStream:(NSInputStream*) input {
  return (PBCorporation*)[[[PBCorporation builder] mergeFromInputStream:input] build];
}
+ (PBCorporation*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBCorporation*)[[[PBCorporation builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBCorporation*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBCorporation*)[[[PBCorporation builder] mergeFromCodedInputStream:input] build];
}
+ (PBCorporation*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBCorporation*)[[[PBCorporation builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBCorporationBuilder*) builder {
  return [[PBCorporationBuilder alloc] init];
}
+ (PBCorporationBuilder*) builderWithPrototype:(PBCorporation*) prototype {
  return [[PBCorporation builder] mergeFrom:prototype];
}
- (PBCorporationBuilder*) builder {
  return [PBCorporation builder];
}
- (PBCorporationBuilder*) toBuilder {
  return [PBCorporation builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasAlias) {
    [output appendFormat:@"%@%@: %@\n", indent, @"alias", self.alias];
  }
  if (self.hasCreatedAt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createdAt", [NSNumber numberWithLongLong:self.createdAt]];
  }
  if (self.hasUpdatedAt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updatedAt", [NSNumber numberWithLongLong:self.updatedAt]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBCorporation class]]) {
    return NO;
  }
  PBCorporation *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasAlias == otherMessage.hasAlias &&
      (!self.hasAlias || [self.alias isEqual:otherMessage.alias]) &&
      self.hasCreatedAt == otherMessage.hasCreatedAt &&
      (!self.hasCreatedAt || self.createdAt == otherMessage.createdAt) &&
      self.hasUpdatedAt == otherMessage.hasUpdatedAt &&
      (!self.hasUpdatedAt || self.updatedAt == otherMessage.updatedAt) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasAlias) {
    hashCode = hashCode * 31 + [self.alias hash];
  }
  if (self.hasCreatedAt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createdAt] hash];
  }
  if (self.hasUpdatedAt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.updatedAt] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL PBCorporationTypeIsValidValue(PBCorporationType value) {
  switch (value) {
    case PBCorporationTypeTypeCorp:
    case PBCorporationTypeTypeOrg:
      return YES;
    default:
      return NO;
  }
}
BOOL PBCorporationStatusIsValidValue(PBCorporationStatus value) {
  switch (value) {
    case PBCorporationStatusStatusLock:
    case PBCorporationStatusStatusCommon:
      return YES;
    default:
      return NO;
  }
}
@interface PBCorporationBuilder()
@property (strong) PBCorporation* result;
@end

@implementation PBCorporationBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBCorporation alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBCorporationBuilder*) clear {
  self.result = [[PBCorporation alloc] init];
  return self;
}
- (PBCorporationBuilder*) clone {
  return [PBCorporation builderWithPrototype:result];
}
- (PBCorporation*) defaultInstance {
  return [PBCorporation defaultInstance];
}
- (PBCorporation*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBCorporation*) buildPartial {
  PBCorporation* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBCorporationBuilder*) mergeFrom:(PBCorporation*) other {
  if (other == [PBCorporation defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasAlias) {
    [self setAlias:other.alias];
  }
  if (other.hasCreatedAt) {
    [self setCreatedAt:other.createdAt];
  }
  if (other.hasUpdatedAt) {
    [self setUpdatedAt:other.updatedAt];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBCorporationBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBCorporationBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readSInt64]];
        break;
      }
      case 16: {
        PBCorporationType value = (PBCorporationType)[input readEnum];
        if (PBCorporationTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        PBCorporationStatus value = (PBCorporationStatus)[input readEnum];
        if (PBCorporationStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 34: {
        [self setName:[input readString]];
        break;
      }
      case 42: {
        [self setAlias:[input readString]];
        break;
      }
      case 48: {
        [self setCreatedAt:[input readSInt64]];
        break;
      }
      case 56: {
        [self setUpdatedAt:[input readSInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (SInt64) id {
  return result.id;
}
- (PBCorporationBuilder*) setId:(SInt64) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (PBCorporationBuilder*) clearId {
  result.hasId = NO;
  result.id = 0L;
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (PBCorporationType) type {
  return result.type;
}
- (PBCorporationBuilder*) setType:(PBCorporationType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (PBCorporationBuilder*) clearType {
  result.hasType = NO;
  result.type = PBCorporationTypeTypeCorp;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (PBCorporationStatus) status {
  return result.status;
}
- (PBCorporationBuilder*) setStatus:(PBCorporationStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (PBCorporationBuilder*) clearStatus {
  result.hasStatus = NO;
  result.status = PBCorporationStatusStatusCommon;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (PBCorporationBuilder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (PBCorporationBuilder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasAlias {
  return result.hasAlias;
}
- (NSString*) alias {
  return result.alias;
}
- (PBCorporationBuilder*) setAlias:(NSString*) value {
  result.hasAlias = YES;
  result.alias = value;
  return self;
}
- (PBCorporationBuilder*) clearAlias {
  result.hasAlias = NO;
  result.alias = @"";
  return self;
}
- (BOOL) hasCreatedAt {
  return result.hasCreatedAt;
}
- (SInt64) createdAt {
  return result.createdAt;
}
- (PBCorporationBuilder*) setCreatedAt:(SInt64) value {
  result.hasCreatedAt = YES;
  result.createdAt = value;
  return self;
}
- (PBCorporationBuilder*) clearCreatedAt {
  result.hasCreatedAt = NO;
  result.createdAt = 0L;
  return self;
}
- (BOOL) hasUpdatedAt {
  return result.hasUpdatedAt;
}
- (SInt64) updatedAt {
  return result.updatedAt;
}
- (PBCorporationBuilder*) setUpdatedAt:(SInt64) value {
  result.hasUpdatedAt = YES;
  result.updatedAt = value;
  return self;
}
- (PBCorporationBuilder*) clearUpdatedAt {
  result.hasUpdatedAt = NO;
  result.updatedAt = 0L;
  return self;
}
@end

@interface PBWorker ()
@property SInt64 id;
@property SInt64 passportId;
@property (strong) PBAppendableArray * departmentIdsArray;
@property SInt64 corporationId;
@property (strong) NSString* name;
@property PBWorkerStatus status;
@property (strong) NSString* position;
@property SInt64 createdAt;
@property SInt64 updatedAt;
@end

@implementation PBWorker

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasPassportId {
  return !!hasPassportId_;
}
- (void) setHasPassportId:(BOOL) value_ {
  hasPassportId_ = !!value_;
}
@synthesize passportId;
@synthesize departmentIdsArray;
@dynamic departmentIds;
- (BOOL) hasCorporationId {
  return !!hasCorporationId_;
}
- (void) setHasCorporationId:(BOOL) value_ {
  hasCorporationId_ = !!value_;
}
@synthesize corporationId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasPosition {
  return !!hasPosition_;
}
- (void) setHasPosition:(BOOL) value_ {
  hasPosition_ = !!value_;
}
@synthesize position;
- (BOOL) hasCreatedAt {
  return !!hasCreatedAt_;
}
- (void) setHasCreatedAt:(BOOL) value_ {
  hasCreatedAt_ = !!value_;
}
@synthesize createdAt;
- (BOOL) hasUpdatedAt {
  return !!hasUpdatedAt_;
}
- (void) setHasUpdatedAt:(BOOL) value_ {
  hasUpdatedAt_ = !!value_;
}
@synthesize updatedAt;
- (id) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.passportId = 0L;
    self.corporationId = 0L;
    self.name = @"";
    self.status = PBWorkerStatusStatusCommon;
    self.position = @"";
    self.createdAt = 0L;
    self.updatedAt = 0L;
  }
  return self;
}
static PBWorker* defaultPBWorkerInstance = nil;
+ (void) initialize {
  if (self == [PBWorker class]) {
    defaultPBWorkerInstance = [[PBWorker alloc] init];
  }
}
+ (PBWorker*) defaultInstance {
  return defaultPBWorkerInstance;
}
- (PBWorker*) defaultInstance {
  return defaultPBWorkerInstance;
}
- (PBArray *)departmentIds {
  return departmentIdsArray;
}
- (SInt64)departmentIdsAtIndex:(NSUInteger)index {
  return [departmentIdsArray int64AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeSInt64:1 value:self.id];
  }
  if (self.hasPassportId) {
    [output writeSInt64:2 value:self.passportId];
  }
  const NSUInteger departmentIdsArrayCount = self.departmentIdsArray.count;
  if (departmentIdsArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.departmentIdsArray.data;
    for (NSUInteger i = 0; i < departmentIdsArrayCount; ++i) {
      [output writeSInt64:3 value:values[i]];
    }
  }
  if (self.hasCorporationId) {
    [output writeSInt64:4 value:self.corporationId];
  }
  if (self.hasName) {
    [output writeString:5 value:self.name];
  }
  if (self.hasStatus) {
    [output writeEnum:6 value:self.status];
  }
  if (self.hasPosition) {
    [output writeString:7 value:self.position];
  }
  if (self.hasCreatedAt) {
    [output writeSInt64:8 value:self.createdAt];
  }
  if (self.hasUpdatedAt) {
    [output writeSInt64:9 value:self.updatedAt];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeSInt64Size(1, self.id);
  }
  if (self.hasPassportId) {
    size_ += computeSInt64Size(2, self.passportId);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.departmentIdsArray.count;
    const SInt64 *values = (const SInt64 *)self.departmentIdsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeSInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasCorporationId) {
    size_ += computeSInt64Size(4, self.corporationId);
  }
  if (self.hasName) {
    size_ += computeStringSize(5, self.name);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(6, self.status);
  }
  if (self.hasPosition) {
    size_ += computeStringSize(7, self.position);
  }
  if (self.hasCreatedAt) {
    size_ += computeSInt64Size(8, self.createdAt);
  }
  if (self.hasUpdatedAt) {
    size_ += computeSInt64Size(9, self.updatedAt);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBWorker*) parseFromData:(NSData*) data {
  return (PBWorker*)[[[PBWorker builder] mergeFromData:data] build];
}
+ (PBWorker*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBWorker*)[[[PBWorker builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBWorker*) parseFromInputStream:(NSInputStream*) input {
  return (PBWorker*)[[[PBWorker builder] mergeFromInputStream:input] build];
}
+ (PBWorker*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBWorker*)[[[PBWorker builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBWorker*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBWorker*)[[[PBWorker builder] mergeFromCodedInputStream:input] build];
}
+ (PBWorker*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBWorker*)[[[PBWorker builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBWorkerBuilder*) builder {
  return [[PBWorkerBuilder alloc] init];
}
+ (PBWorkerBuilder*) builderWithPrototype:(PBWorker*) prototype {
  return [[PBWorker builder] mergeFrom:prototype];
}
- (PBWorkerBuilder*) builder {
  return [PBWorker builder];
}
- (PBWorkerBuilder*) toBuilder {
  return [PBWorker builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasPassportId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"passportId", [NSNumber numberWithLongLong:self.passportId]];
  }
  [self.departmentIdsArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"departmentIds", obj];
  }];
  if (self.hasCorporationId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"corporationId", [NSNumber numberWithLongLong:self.corporationId]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasPosition) {
    [output appendFormat:@"%@%@: %@\n", indent, @"position", self.position];
  }
  if (self.hasCreatedAt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createdAt", [NSNumber numberWithLongLong:self.createdAt]];
  }
  if (self.hasUpdatedAt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updatedAt", [NSNumber numberWithLongLong:self.updatedAt]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBWorker class]]) {
    return NO;
  }
  PBWorker *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasPassportId == otherMessage.hasPassportId &&
      (!self.hasPassportId || self.passportId == otherMessage.passportId) &&
      [self.departmentIdsArray isEqualToArray:otherMessage.departmentIdsArray] &&
      self.hasCorporationId == otherMessage.hasCorporationId &&
      (!self.hasCorporationId || self.corporationId == otherMessage.corporationId) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasPosition == otherMessage.hasPosition &&
      (!self.hasPosition || [self.position isEqual:otherMessage.position]) &&
      self.hasCreatedAt == otherMessage.hasCreatedAt &&
      (!self.hasCreatedAt || self.createdAt == otherMessage.createdAt) &&
      self.hasUpdatedAt == otherMessage.hasUpdatedAt &&
      (!self.hasUpdatedAt || self.updatedAt == otherMessage.updatedAt) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasPassportId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.passportId] hash];
  }
  [self.departmentIdsArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  if (self.hasCorporationId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.corporationId] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasPosition) {
    hashCode = hashCode * 31 + [self.position hash];
  }
  if (self.hasCreatedAt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createdAt] hash];
  }
  if (self.hasUpdatedAt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.updatedAt] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL PBWorkerStatusIsValidValue(PBWorkerStatus value) {
  switch (value) {
    case PBWorkerStatusStatusLock:
    case PBWorkerStatusStatusUnbind:
    case PBWorkerStatusStatusCommon:
      return YES;
    default:
      return NO;
  }
}
@interface PBWorkerBuilder()
@property (strong) PBWorker* result;
@end

@implementation PBWorkerBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBWorker alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBWorkerBuilder*) clear {
  self.result = [[PBWorker alloc] init];
  return self;
}
- (PBWorkerBuilder*) clone {
  return [PBWorker builderWithPrototype:result];
}
- (PBWorker*) defaultInstance {
  return [PBWorker defaultInstance];
}
- (PBWorker*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBWorker*) buildPartial {
  PBWorker* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBWorkerBuilder*) mergeFrom:(PBWorker*) other {
  if (other == [PBWorker defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasPassportId) {
    [self setPassportId:other.passportId];
  }
  if (other.departmentIdsArray.count > 0) {
    if (result.departmentIdsArray == nil) {
      result.departmentIdsArray = [other.departmentIdsArray copy];
    } else {
      [result.departmentIdsArray appendArray:other.departmentIdsArray];
    }
  }
  if (other.hasCorporationId) {
    [self setCorporationId:other.corporationId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasPosition) {
    [self setPosition:other.position];
  }
  if (other.hasCreatedAt) {
    [self setCreatedAt:other.createdAt];
  }
  if (other.hasUpdatedAt) {
    [self setUpdatedAt:other.updatedAt];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBWorkerBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBWorkerBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readSInt64]];
        break;
      }
      case 16: {
        [self setPassportId:[input readSInt64]];
        break;
      }
      case 24: {
        [self addDepartmentIds:[input readSInt64]];
        break;
      }
      case 32: {
        [self setCorporationId:[input readSInt64]];
        break;
      }
      case 42: {
        [self setName:[input readString]];
        break;
      }
      case 48: {
        PBWorkerStatus value = (PBWorkerStatus)[input readEnum];
        if (PBWorkerStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:6 value:value];
        }
        break;
      }
      case 58: {
        [self setPosition:[input readString]];
        break;
      }
      case 64: {
        [self setCreatedAt:[input readSInt64]];
        break;
      }
      case 72: {
        [self setUpdatedAt:[input readSInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (SInt64) id {
  return result.id;
}
- (PBWorkerBuilder*) setId:(SInt64) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (PBWorkerBuilder*) clearId {
  result.hasId = NO;
  result.id = 0L;
  return self;
}
- (BOOL) hasPassportId {
  return result.hasPassportId;
}
- (SInt64) passportId {
  return result.passportId;
}
- (PBWorkerBuilder*) setPassportId:(SInt64) value {
  result.hasPassportId = YES;
  result.passportId = value;
  return self;
}
- (PBWorkerBuilder*) clearPassportId {
  result.hasPassportId = NO;
  result.passportId = 0L;
  return self;
}
- (PBAppendableArray *)departmentIds {
  return result.departmentIdsArray;
}
- (SInt64)departmentIdsAtIndex:(NSUInteger)index {
  return [result departmentIdsAtIndex:index];
}
- (PBWorkerBuilder *)addDepartmentIds:(SInt64)value {
  if (result.departmentIdsArray == nil) {
    result.departmentIdsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [result.departmentIdsArray addInt64:value];
  return self;
}
- (PBWorkerBuilder *)setDepartmentIdsArray:(NSArray *)array {
  result.departmentIdsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (PBWorkerBuilder *)setDepartmentIdsValues:(const SInt64 *)values count:(NSUInteger)count {
  result.departmentIdsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (PBWorkerBuilder *)clearDepartmentIds {
  result.departmentIdsArray = nil;
  return self;
}
- (BOOL) hasCorporationId {
  return result.hasCorporationId;
}
- (SInt64) corporationId {
  return result.corporationId;
}
- (PBWorkerBuilder*) setCorporationId:(SInt64) value {
  result.hasCorporationId = YES;
  result.corporationId = value;
  return self;
}
- (PBWorkerBuilder*) clearCorporationId {
  result.hasCorporationId = NO;
  result.corporationId = 0L;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (PBWorkerBuilder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (PBWorkerBuilder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (PBWorkerStatus) status {
  return result.status;
}
- (PBWorkerBuilder*) setStatus:(PBWorkerStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (PBWorkerBuilder*) clearStatus {
  result.hasStatus = NO;
  result.status = PBWorkerStatusStatusCommon;
  return self;
}
- (BOOL) hasPosition {
  return result.hasPosition;
}
- (NSString*) position {
  return result.position;
}
- (PBWorkerBuilder*) setPosition:(NSString*) value {
  result.hasPosition = YES;
  result.position = value;
  return self;
}
- (PBWorkerBuilder*) clearPosition {
  result.hasPosition = NO;
  result.position = @"";
  return self;
}
- (BOOL) hasCreatedAt {
  return result.hasCreatedAt;
}
- (SInt64) createdAt {
  return result.createdAt;
}
- (PBWorkerBuilder*) setCreatedAt:(SInt64) value {
  result.hasCreatedAt = YES;
  result.createdAt = value;
  return self;
}
- (PBWorkerBuilder*) clearCreatedAt {
  result.hasCreatedAt = NO;
  result.createdAt = 0L;
  return self;
}
- (BOOL) hasUpdatedAt {
  return result.hasUpdatedAt;
}
- (SInt64) updatedAt {
  return result.updatedAt;
}
- (PBWorkerBuilder*) setUpdatedAt:(SInt64) value {
  result.hasUpdatedAt = YES;
  result.updatedAt = value;
  return self;
}
- (PBWorkerBuilder*) clearUpdatedAt {
  result.hasUpdatedAt = NO;
  result.updatedAt = 0L;
  return self;
}
@end

@interface PBDepartment ()
@property SInt64 id;
@property (strong) NSString* name;
@property SInt64 corporationId;
@property PBDepartmentStatus status;
@property SInt64 parentDepartmentId;
@property SInt64 createdAt;
@property SInt64 updatedAt;
@end

@implementation PBDepartment

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasCorporationId {
  return !!hasCorporationId_;
}
- (void) setHasCorporationId:(BOOL) value_ {
  hasCorporationId_ = !!value_;
}
@synthesize corporationId;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasParentDepartmentId {
  return !!hasParentDepartmentId_;
}
- (void) setHasParentDepartmentId:(BOOL) value_ {
  hasParentDepartmentId_ = !!value_;
}
@synthesize parentDepartmentId;
- (BOOL) hasCreatedAt {
  return !!hasCreatedAt_;
}
- (void) setHasCreatedAt:(BOOL) value_ {
  hasCreatedAt_ = !!value_;
}
@synthesize createdAt;
- (BOOL) hasUpdatedAt {
  return !!hasUpdatedAt_;
}
- (void) setHasUpdatedAt:(BOOL) value_ {
  hasUpdatedAt_ = !!value_;
}
@synthesize updatedAt;
- (id) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.name = @"";
    self.corporationId = 0L;
    self.status = PBDepartmentStatusStatusCommon;
    self.parentDepartmentId = 0L;
    self.createdAt = 0L;
    self.updatedAt = 0L;
  }
  return self;
}
static PBDepartment* defaultPBDepartmentInstance = nil;
+ (void) initialize {
  if (self == [PBDepartment class]) {
    defaultPBDepartmentInstance = [[PBDepartment alloc] init];
  }
}
+ (PBDepartment*) defaultInstance {
  return defaultPBDepartmentInstance;
}
- (PBDepartment*) defaultInstance {
  return defaultPBDepartmentInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeSInt64:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasCorporationId) {
    [output writeSInt64:3 value:self.corporationId];
  }
  if (self.hasStatus) {
    [output writeEnum:4 value:self.status];
  }
  if (self.hasParentDepartmentId) {
    [output writeSInt64:5 value:self.parentDepartmentId];
  }
  if (self.hasCreatedAt) {
    [output writeSInt64:6 value:self.createdAt];
  }
  if (self.hasUpdatedAt) {
    [output writeSInt64:7 value:self.updatedAt];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeSInt64Size(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasCorporationId) {
    size_ += computeSInt64Size(3, self.corporationId);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(4, self.status);
  }
  if (self.hasParentDepartmentId) {
    size_ += computeSInt64Size(5, self.parentDepartmentId);
  }
  if (self.hasCreatedAt) {
    size_ += computeSInt64Size(6, self.createdAt);
  }
  if (self.hasUpdatedAt) {
    size_ += computeSInt64Size(7, self.updatedAt);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBDepartment*) parseFromData:(NSData*) data {
  return (PBDepartment*)[[[PBDepartment builder] mergeFromData:data] build];
}
+ (PBDepartment*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBDepartment*)[[[PBDepartment builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBDepartment*) parseFromInputStream:(NSInputStream*) input {
  return (PBDepartment*)[[[PBDepartment builder] mergeFromInputStream:input] build];
}
+ (PBDepartment*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBDepartment*)[[[PBDepartment builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBDepartment*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBDepartment*)[[[PBDepartment builder] mergeFromCodedInputStream:input] build];
}
+ (PBDepartment*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBDepartment*)[[[PBDepartment builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBDepartmentBuilder*) builder {
  return [[PBDepartmentBuilder alloc] init];
}
+ (PBDepartmentBuilder*) builderWithPrototype:(PBDepartment*) prototype {
  return [[PBDepartment builder] mergeFrom:prototype];
}
- (PBDepartmentBuilder*) builder {
  return [PBDepartment builder];
}
- (PBDepartmentBuilder*) toBuilder {
  return [PBDepartment builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasCorporationId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"corporationId", [NSNumber numberWithLongLong:self.corporationId]];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasParentDepartmentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentDepartmentId", [NSNumber numberWithLongLong:self.parentDepartmentId]];
  }
  if (self.hasCreatedAt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createdAt", [NSNumber numberWithLongLong:self.createdAt]];
  }
  if (self.hasUpdatedAt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updatedAt", [NSNumber numberWithLongLong:self.updatedAt]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBDepartment class]]) {
    return NO;
  }
  PBDepartment *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasCorporationId == otherMessage.hasCorporationId &&
      (!self.hasCorporationId || self.corporationId == otherMessage.corporationId) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasParentDepartmentId == otherMessage.hasParentDepartmentId &&
      (!self.hasParentDepartmentId || self.parentDepartmentId == otherMessage.parentDepartmentId) &&
      self.hasCreatedAt == otherMessage.hasCreatedAt &&
      (!self.hasCreatedAt || self.createdAt == otherMessage.createdAt) &&
      self.hasUpdatedAt == otherMessage.hasUpdatedAt &&
      (!self.hasUpdatedAt || self.updatedAt == otherMessage.updatedAt) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasCorporationId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.corporationId] hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasParentDepartmentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.parentDepartmentId] hash];
  }
  if (self.hasCreatedAt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createdAt] hash];
  }
  if (self.hasUpdatedAt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.updatedAt] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL PBDepartmentStatusIsValidValue(PBDepartmentStatus value) {
  switch (value) {
    case PBDepartmentStatusStatusCommon:
    case PBDepartmentStatusStatusLock:
    case PBDepartmentStatusStatusDeleted:
      return YES;
    default:
      return NO;
  }
}
@interface PBDepartmentBuilder()
@property (strong) PBDepartment* result;
@end

@implementation PBDepartmentBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBDepartment alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBDepartmentBuilder*) clear {
  self.result = [[PBDepartment alloc] init];
  return self;
}
- (PBDepartmentBuilder*) clone {
  return [PBDepartment builderWithPrototype:result];
}
- (PBDepartment*) defaultInstance {
  return [PBDepartment defaultInstance];
}
- (PBDepartment*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBDepartment*) buildPartial {
  PBDepartment* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBDepartmentBuilder*) mergeFrom:(PBDepartment*) other {
  if (other == [PBDepartment defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasCorporationId) {
    [self setCorporationId:other.corporationId];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasParentDepartmentId) {
    [self setParentDepartmentId:other.parentDepartmentId];
  }
  if (other.hasCreatedAt) {
    [self setCreatedAt:other.createdAt];
  }
  if (other.hasUpdatedAt) {
    [self setUpdatedAt:other.updatedAt];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBDepartmentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBDepartmentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readSInt64]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        [self setCorporationId:[input readSInt64]];
        break;
      }
      case 32: {
        PBDepartmentStatus value = (PBDepartmentStatus)[input readEnum];
        if (PBDepartmentStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        [self setParentDepartmentId:[input readSInt64]];
        break;
      }
      case 48: {
        [self setCreatedAt:[input readSInt64]];
        break;
      }
      case 56: {
        [self setUpdatedAt:[input readSInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (SInt64) id {
  return result.id;
}
- (PBDepartmentBuilder*) setId:(SInt64) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (PBDepartmentBuilder*) clearId {
  result.hasId = NO;
  result.id = 0L;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (PBDepartmentBuilder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (PBDepartmentBuilder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasCorporationId {
  return result.hasCorporationId;
}
- (SInt64) corporationId {
  return result.corporationId;
}
- (PBDepartmentBuilder*) setCorporationId:(SInt64) value {
  result.hasCorporationId = YES;
  result.corporationId = value;
  return self;
}
- (PBDepartmentBuilder*) clearCorporationId {
  result.hasCorporationId = NO;
  result.corporationId = 0L;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (PBDepartmentStatus) status {
  return result.status;
}
- (PBDepartmentBuilder*) setStatus:(PBDepartmentStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (PBDepartmentBuilder*) clearStatus {
  result.hasStatus = NO;
  result.status = PBDepartmentStatusStatusCommon;
  return self;
}
- (BOOL) hasParentDepartmentId {
  return result.hasParentDepartmentId;
}
- (SInt64) parentDepartmentId {
  return result.parentDepartmentId;
}
- (PBDepartmentBuilder*) setParentDepartmentId:(SInt64) value {
  result.hasParentDepartmentId = YES;
  result.parentDepartmentId = value;
  return self;
}
- (PBDepartmentBuilder*) clearParentDepartmentId {
  result.hasParentDepartmentId = NO;
  result.parentDepartmentId = 0L;
  return self;
}
- (BOOL) hasCreatedAt {
  return result.hasCreatedAt;
}
- (SInt64) createdAt {
  return result.createdAt;
}
- (PBDepartmentBuilder*) setCreatedAt:(SInt64) value {
  result.hasCreatedAt = YES;
  result.createdAt = value;
  return self;
}
- (PBDepartmentBuilder*) clearCreatedAt {
  result.hasCreatedAt = NO;
  result.createdAt = 0L;
  return self;
}
- (BOOL) hasUpdatedAt {
  return result.hasUpdatedAt;
}
- (SInt64) updatedAt {
  return result.updatedAt;
}
- (PBDepartmentBuilder*) setUpdatedAt:(SInt64) value {
  result.hasUpdatedAt = YES;
  result.updatedAt = value;
  return self;
}
- (PBDepartmentBuilder*) clearUpdatedAt {
  result.hasUpdatedAt = NO;
  result.updatedAt = 0L;
  return self;
}
@end

@interface PBCorporationStruct ()
@property (strong) PBCorporation* corp;
@property (strong) NSMutableArray * deptsArray;
@property (strong) NSMutableArray * workersArray;
@property (strong) PBAppendableArray * passportIdsArray;
@end

@implementation PBCorporationStruct

- (BOOL) hasCorp {
  return !!hasCorp_;
}
- (void) setHasCorp:(BOOL) value_ {
  hasCorp_ = !!value_;
}
@synthesize corp;
@synthesize deptsArray;
@dynamic depts;
@synthesize workersArray;
@dynamic workers;
@synthesize passportIdsArray;
@dynamic passportIds;
- (id) init {
  if ((self = [super init])) {
    self.corp = [PBCorporation defaultInstance];
  }
  return self;
}
static PBCorporationStruct* defaultPBCorporationStructInstance = nil;
+ (void) initialize {
  if (self == [PBCorporationStruct class]) {
    defaultPBCorporationStructInstance = [[PBCorporationStruct alloc] init];
  }
}
+ (PBCorporationStruct*) defaultInstance {
  return defaultPBCorporationStructInstance;
}
- (PBCorporationStruct*) defaultInstance {
  return defaultPBCorporationStructInstance;
}
- (NSArray *)depts {
  return deptsArray;
}
- (PBDepartment*)deptsAtIndex:(NSUInteger)index {
  return [deptsArray objectAtIndex:index];
}
- (NSArray *)workers {
  return workersArray;
}
- (PBWorker*)workersAtIndex:(NSUInteger)index {
  return [workersArray objectAtIndex:index];
}
- (PBArray *)passportIds {
  return passportIdsArray;
}
- (SInt64)passportIdsAtIndex:(NSUInteger)index {
  return [passportIdsArray int64AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCorp) {
    [output writeMessage:1 value:self.corp];
  }
  [self.deptsArray enumerateObjectsUsingBlock:^(PBDepartment *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.workersArray enumerateObjectsUsingBlock:^(PBWorker *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  const NSUInteger passportIdsArrayCount = self.passportIdsArray.count;
  if (passportIdsArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.passportIdsArray.data;
    for (NSUInteger i = 0; i < passportIdsArrayCount; ++i) {
      [output writeSInt64:4 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCorp) {
    size_ += computeMessageSize(1, self.corp);
  }
  [self.deptsArray enumerateObjectsUsingBlock:^(PBDepartment *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  [self.workersArray enumerateObjectsUsingBlock:^(PBWorker *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.passportIdsArray.count;
    const SInt64 *values = (const SInt64 *)self.passportIdsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeSInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBCorporationStruct*) parseFromData:(NSData*) data {
  return (PBCorporationStruct*)[[[PBCorporationStruct builder] mergeFromData:data] build];
}
+ (PBCorporationStruct*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBCorporationStruct*)[[[PBCorporationStruct builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBCorporationStruct*) parseFromInputStream:(NSInputStream*) input {
  return (PBCorporationStruct*)[[[PBCorporationStruct builder] mergeFromInputStream:input] build];
}
+ (PBCorporationStruct*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBCorporationStruct*)[[[PBCorporationStruct builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBCorporationStruct*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBCorporationStruct*)[[[PBCorporationStruct builder] mergeFromCodedInputStream:input] build];
}
+ (PBCorporationStruct*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBCorporationStruct*)[[[PBCorporationStruct builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBCorporationStructBuilder*) builder {
  return [[PBCorporationStructBuilder alloc] init];
}
+ (PBCorporationStructBuilder*) builderWithPrototype:(PBCorporationStruct*) prototype {
  return [[PBCorporationStruct builder] mergeFrom:prototype];
}
- (PBCorporationStructBuilder*) builder {
  return [PBCorporationStruct builder];
}
- (PBCorporationStructBuilder*) toBuilder {
  return [PBCorporationStruct builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCorp) {
    [output appendFormat:@"%@%@ {\n", indent, @"corp"];
    [self.corp writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.deptsArray enumerateObjectsUsingBlock:^(PBDepartment *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"depts"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.workersArray enumerateObjectsUsingBlock:^(PBWorker *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"workers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.passportIdsArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"passportIds", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBCorporationStruct class]]) {
    return NO;
  }
  PBCorporationStruct *otherMessage = other;
  return
      self.hasCorp == otherMessage.hasCorp &&
      (!self.hasCorp || [self.corp isEqual:otherMessage.corp]) &&
      [self.deptsArray isEqualToArray:otherMessage.deptsArray] &&
      [self.workersArray isEqualToArray:otherMessage.workersArray] &&
      [self.passportIdsArray isEqualToArray:otherMessage.passportIdsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCorp) {
    hashCode = hashCode * 31 + [self.corp hash];
  }
  [self.deptsArray enumerateObjectsUsingBlock:^(PBDepartment *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.workersArray enumerateObjectsUsingBlock:^(PBWorker *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.passportIdsArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBCorporationStructBuilder()
@property (strong) PBCorporationStruct* result;
@end

@implementation PBCorporationStructBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBCorporationStruct alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBCorporationStructBuilder*) clear {
  self.result = [[PBCorporationStruct alloc] init];
  return self;
}
- (PBCorporationStructBuilder*) clone {
  return [PBCorporationStruct builderWithPrototype:result];
}
- (PBCorporationStruct*) defaultInstance {
  return [PBCorporationStruct defaultInstance];
}
- (PBCorporationStruct*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBCorporationStruct*) buildPartial {
  PBCorporationStruct* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBCorporationStructBuilder*) mergeFrom:(PBCorporationStruct*) other {
  if (other == [PBCorporationStruct defaultInstance]) {
    return self;
  }
  if (other.hasCorp) {
    [self mergeCorp:other.corp];
  }
  if (other.deptsArray.count > 0) {
    if (result.deptsArray == nil) {
      result.deptsArray = [[NSMutableArray alloc] initWithArray:other.deptsArray];
    } else {
      [result.deptsArray addObjectsFromArray:other.deptsArray];
    }
  }
  if (other.workersArray.count > 0) {
    if (result.workersArray == nil) {
      result.workersArray = [[NSMutableArray alloc] initWithArray:other.workersArray];
    } else {
      [result.workersArray addObjectsFromArray:other.workersArray];
    }
  }
  if (other.passportIdsArray.count > 0) {
    if (result.passportIdsArray == nil) {
      result.passportIdsArray = [other.passportIdsArray copy];
    } else {
      [result.passportIdsArray appendArray:other.passportIdsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBCorporationStructBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBCorporationStructBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PBCorporationBuilder* subBuilder = [PBCorporation builder];
        if (self.hasCorp) {
          [subBuilder mergeFrom:self.corp];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCorp:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PBDepartmentBuilder* subBuilder = [PBDepartment builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDepts:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        PBWorkerBuilder* subBuilder = [PBWorker builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addWorkers:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self addPassportIds:[input readSInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasCorp {
  return result.hasCorp;
}
- (PBCorporation*) corp {
  return result.corp;
}
- (PBCorporationStructBuilder*) setCorp:(PBCorporation*) value {
  result.hasCorp = YES;
  result.corp = value;
  return self;
}
- (PBCorporationStructBuilder*) setCorpBuilder:(PBCorporationBuilder*) builderForValue {
  return [self setCorp:[builderForValue build]];
}
- (PBCorporationStructBuilder*) mergeCorp:(PBCorporation*) value {
  if (result.hasCorp &&
      result.corp != [PBCorporation defaultInstance]) {
    result.corp =
      [[[PBCorporation builderWithPrototype:result.corp] mergeFrom:value] buildPartial];
  } else {
    result.corp = value;
  }
  result.hasCorp = YES;
  return self;
}
- (PBCorporationStructBuilder*) clearCorp {
  result.hasCorp = NO;
  result.corp = [PBCorporation defaultInstance];
  return self;
}
- (NSMutableArray *)depts {
  return result.deptsArray;
}
- (PBDepartment*)deptsAtIndex:(NSUInteger)index {
  return [result deptsAtIndex:index];
}
- (PBCorporationStructBuilder *)addDepts:(PBDepartment*)value {
  if (result.deptsArray == nil) {
    result.deptsArray = [[NSMutableArray alloc]init];
  }
  [result.deptsArray addObject:value];
  return self;
}
- (PBCorporationStructBuilder *)setDeptsArray:(NSArray *)array {
  result.deptsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBCorporationStructBuilder *)clearDepts {
  result.deptsArray = nil;
  return self;
}
- (NSMutableArray *)workers {
  return result.workersArray;
}
- (PBWorker*)workersAtIndex:(NSUInteger)index {
  return [result workersAtIndex:index];
}
- (PBCorporationStructBuilder *)addWorkers:(PBWorker*)value {
  if (result.workersArray == nil) {
    result.workersArray = [[NSMutableArray alloc]init];
  }
  [result.workersArray addObject:value];
  return self;
}
- (PBCorporationStructBuilder *)setWorkersArray:(NSArray *)array {
  result.workersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBCorporationStructBuilder *)clearWorkers {
  result.workersArray = nil;
  return self;
}
- (PBAppendableArray *)passportIds {
  return result.passportIdsArray;
}
- (SInt64)passportIdsAtIndex:(NSUInteger)index {
  return [result passportIdsAtIndex:index];
}
- (PBCorporationStructBuilder *)addPassportIds:(SInt64)value {
  if (result.passportIdsArray == nil) {
    result.passportIdsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [result.passportIdsArray addInt64:value];
  return self;
}
- (PBCorporationStructBuilder *)setPassportIdsArray:(NSArray *)array {
  result.passportIdsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (PBCorporationStructBuilder *)setPassportIdsValues:(const SInt64 *)values count:(NSUInteger)count {
  result.passportIdsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (PBCorporationStructBuilder *)clearPassportIds {
  result.passportIdsArray = nil;
  return self;
}
@end

@interface PBFetchCorporationReq ()
@property (strong) PBAppendableArray * corporationIdsArray;
@property (strong) PBAppendableArray * departmentIdsArray;
@property (strong) PBAppendableArray * workerIdsArray;
@end

@implementation PBFetchCorporationReq

@synthesize corporationIdsArray;
@dynamic corporationIds;
@synthesize departmentIdsArray;
@dynamic departmentIds;
@synthesize workerIdsArray;
@dynamic workerIds;
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static PBFetchCorporationReq* defaultPBFetchCorporationReqInstance = nil;
+ (void) initialize {
  if (self == [PBFetchCorporationReq class]) {
    defaultPBFetchCorporationReqInstance = [[PBFetchCorporationReq alloc] init];
  }
}
+ (PBFetchCorporationReq*) defaultInstance {
  return defaultPBFetchCorporationReqInstance;
}
- (PBFetchCorporationReq*) defaultInstance {
  return defaultPBFetchCorporationReqInstance;
}
- (PBArray *)corporationIds {
  return corporationIdsArray;
}
- (SInt64)corporationIdsAtIndex:(NSUInteger)index {
  return [corporationIdsArray int64AtIndex:index];
}
- (PBArray *)departmentIds {
  return departmentIdsArray;
}
- (SInt64)departmentIdsAtIndex:(NSUInteger)index {
  return [departmentIdsArray int64AtIndex:index];
}
- (PBArray *)workerIds {
  return workerIdsArray;
}
- (SInt64)workerIdsAtIndex:(NSUInteger)index {
  return [workerIdsArray int64AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger corporationIdsArrayCount = self.corporationIdsArray.count;
  if (corporationIdsArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.corporationIdsArray.data;
    for (NSUInteger i = 0; i < corporationIdsArrayCount; ++i) {
      [output writeSInt64:1 value:values[i]];
    }
  }
  const NSUInteger departmentIdsArrayCount = self.departmentIdsArray.count;
  if (departmentIdsArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.departmentIdsArray.data;
    for (NSUInteger i = 0; i < departmentIdsArrayCount; ++i) {
      [output writeSInt64:2 value:values[i]];
    }
  }
  const NSUInteger workerIdsArrayCount = self.workerIdsArray.count;
  if (workerIdsArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.workerIdsArray.data;
    for (NSUInteger i = 0; i < workerIdsArrayCount; ++i) {
      [output writeSInt64:3 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.corporationIdsArray.count;
    const SInt64 *values = (const SInt64 *)self.corporationIdsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeSInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.departmentIdsArray.count;
    const SInt64 *values = (const SInt64 *)self.departmentIdsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeSInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.workerIdsArray.count;
    const SInt64 *values = (const SInt64 *)self.workerIdsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeSInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBFetchCorporationReq*) parseFromData:(NSData*) data {
  return (PBFetchCorporationReq*)[[[PBFetchCorporationReq builder] mergeFromData:data] build];
}
+ (PBFetchCorporationReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchCorporationReq*)[[[PBFetchCorporationReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBFetchCorporationReq*) parseFromInputStream:(NSInputStream*) input {
  return (PBFetchCorporationReq*)[[[PBFetchCorporationReq builder] mergeFromInputStream:input] build];
}
+ (PBFetchCorporationReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchCorporationReq*)[[[PBFetchCorporationReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchCorporationReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBFetchCorporationReq*)[[[PBFetchCorporationReq builder] mergeFromCodedInputStream:input] build];
}
+ (PBFetchCorporationReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchCorporationReq*)[[[PBFetchCorporationReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchCorporationReqBuilder*) builder {
  return [[PBFetchCorporationReqBuilder alloc] init];
}
+ (PBFetchCorporationReqBuilder*) builderWithPrototype:(PBFetchCorporationReq*) prototype {
  return [[PBFetchCorporationReq builder] mergeFrom:prototype];
}
- (PBFetchCorporationReqBuilder*) builder {
  return [PBFetchCorporationReq builder];
}
- (PBFetchCorporationReqBuilder*) toBuilder {
  return [PBFetchCorporationReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.corporationIdsArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"corporationIds", obj];
  }];
  [self.departmentIdsArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"departmentIds", obj];
  }];
  [self.workerIdsArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"workerIds", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBFetchCorporationReq class]]) {
    return NO;
  }
  PBFetchCorporationReq *otherMessage = other;
  return
      [self.corporationIdsArray isEqualToArray:otherMessage.corporationIdsArray] &&
      [self.departmentIdsArray isEqualToArray:otherMessage.departmentIdsArray] &&
      [self.workerIdsArray isEqualToArray:otherMessage.workerIdsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.corporationIdsArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  [self.departmentIdsArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  [self.workerIdsArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBFetchCorporationReqBuilder()
@property (strong) PBFetchCorporationReq* result;
@end

@implementation PBFetchCorporationReqBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBFetchCorporationReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBFetchCorporationReqBuilder*) clear {
  self.result = [[PBFetchCorporationReq alloc] init];
  return self;
}
- (PBFetchCorporationReqBuilder*) clone {
  return [PBFetchCorporationReq builderWithPrototype:result];
}
- (PBFetchCorporationReq*) defaultInstance {
  return [PBFetchCorporationReq defaultInstance];
}
- (PBFetchCorporationReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBFetchCorporationReq*) buildPartial {
  PBFetchCorporationReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBFetchCorporationReqBuilder*) mergeFrom:(PBFetchCorporationReq*) other {
  if (other == [PBFetchCorporationReq defaultInstance]) {
    return self;
  }
  if (other.corporationIdsArray.count > 0) {
    if (result.corporationIdsArray == nil) {
      result.corporationIdsArray = [other.corporationIdsArray copy];
    } else {
      [result.corporationIdsArray appendArray:other.corporationIdsArray];
    }
  }
  if (other.departmentIdsArray.count > 0) {
    if (result.departmentIdsArray == nil) {
      result.departmentIdsArray = [other.departmentIdsArray copy];
    } else {
      [result.departmentIdsArray appendArray:other.departmentIdsArray];
    }
  }
  if (other.workerIdsArray.count > 0) {
    if (result.workerIdsArray == nil) {
      result.workerIdsArray = [other.workerIdsArray copy];
    } else {
      [result.workerIdsArray appendArray:other.workerIdsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBFetchCorporationReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBFetchCorporationReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self addCorporationIds:[input readSInt64]];
        break;
      }
      case 16: {
        [self addDepartmentIds:[input readSInt64]];
        break;
      }
      case 24: {
        [self addWorkerIds:[input readSInt64]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)corporationIds {
  return result.corporationIdsArray;
}
- (SInt64)corporationIdsAtIndex:(NSUInteger)index {
  return [result corporationIdsAtIndex:index];
}
- (PBFetchCorporationReqBuilder *)addCorporationIds:(SInt64)value {
  if (result.corporationIdsArray == nil) {
    result.corporationIdsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [result.corporationIdsArray addInt64:value];
  return self;
}
- (PBFetchCorporationReqBuilder *)setCorporationIdsArray:(NSArray *)array {
  result.corporationIdsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (PBFetchCorporationReqBuilder *)setCorporationIdsValues:(const SInt64 *)values count:(NSUInteger)count {
  result.corporationIdsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (PBFetchCorporationReqBuilder *)clearCorporationIds {
  result.corporationIdsArray = nil;
  return self;
}
- (PBAppendableArray *)departmentIds {
  return result.departmentIdsArray;
}
- (SInt64)departmentIdsAtIndex:(NSUInteger)index {
  return [result departmentIdsAtIndex:index];
}
- (PBFetchCorporationReqBuilder *)addDepartmentIds:(SInt64)value {
  if (result.departmentIdsArray == nil) {
    result.departmentIdsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [result.departmentIdsArray addInt64:value];
  return self;
}
- (PBFetchCorporationReqBuilder *)setDepartmentIdsArray:(NSArray *)array {
  result.departmentIdsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (PBFetchCorporationReqBuilder *)setDepartmentIdsValues:(const SInt64 *)values count:(NSUInteger)count {
  result.departmentIdsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (PBFetchCorporationReqBuilder *)clearDepartmentIds {
  result.departmentIdsArray = nil;
  return self;
}
- (PBAppendableArray *)workerIds {
  return result.workerIdsArray;
}
- (SInt64)workerIdsAtIndex:(NSUInteger)index {
  return [result workerIdsAtIndex:index];
}
- (PBFetchCorporationReqBuilder *)addWorkerIds:(SInt64)value {
  if (result.workerIdsArray == nil) {
    result.workerIdsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [result.workerIdsArray addInt64:value];
  return self;
}
- (PBFetchCorporationReqBuilder *)setWorkerIdsArray:(NSArray *)array {
  result.workerIdsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (PBFetchCorporationReqBuilder *)setWorkerIdsValues:(const SInt64 *)values count:(NSUInteger)count {
  result.workerIdsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (PBFetchCorporationReqBuilder *)clearWorkerIds {
  result.workerIdsArray = nil;
  return self;
}
@end

@interface PBFetchCorporationResp ()
@property (strong) NSMutableArray * corporationsArray;
@property (strong) NSMutableArray * departmentsArray;
@property (strong) NSMutableArray * workersArray;
@end

@implementation PBFetchCorporationResp

@synthesize corporationsArray;
@dynamic corporations;
@synthesize departmentsArray;
@dynamic departments;
@synthesize workersArray;
@dynamic workers;
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static PBFetchCorporationResp* defaultPBFetchCorporationRespInstance = nil;
+ (void) initialize {
  if (self == [PBFetchCorporationResp class]) {
    defaultPBFetchCorporationRespInstance = [[PBFetchCorporationResp alloc] init];
  }
}
+ (PBFetchCorporationResp*) defaultInstance {
  return defaultPBFetchCorporationRespInstance;
}
- (PBFetchCorporationResp*) defaultInstance {
  return defaultPBFetchCorporationRespInstance;
}
- (NSArray *)corporations {
  return corporationsArray;
}
- (PBCorporation*)corporationsAtIndex:(NSUInteger)index {
  return [corporationsArray objectAtIndex:index];
}
- (NSArray *)departments {
  return departmentsArray;
}
- (PBDepartment*)departmentsAtIndex:(NSUInteger)index {
  return [departmentsArray objectAtIndex:index];
}
- (NSArray *)workers {
  return workersArray;
}
- (PBWorker*)workersAtIndex:(NSUInteger)index {
  return [workersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.corporationsArray enumerateObjectsUsingBlock:^(PBCorporation *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.departmentsArray enumerateObjectsUsingBlock:^(PBDepartment *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.workersArray enumerateObjectsUsingBlock:^(PBWorker *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.corporationsArray enumerateObjectsUsingBlock:^(PBCorporation *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  [self.departmentsArray enumerateObjectsUsingBlock:^(PBDepartment *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  [self.workersArray enumerateObjectsUsingBlock:^(PBWorker *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBFetchCorporationResp*) parseFromData:(NSData*) data {
  return (PBFetchCorporationResp*)[[[PBFetchCorporationResp builder] mergeFromData:data] build];
}
+ (PBFetchCorporationResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchCorporationResp*)[[[PBFetchCorporationResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBFetchCorporationResp*) parseFromInputStream:(NSInputStream*) input {
  return (PBFetchCorporationResp*)[[[PBFetchCorporationResp builder] mergeFromInputStream:input] build];
}
+ (PBFetchCorporationResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchCorporationResp*)[[[PBFetchCorporationResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchCorporationResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBFetchCorporationResp*)[[[PBFetchCorporationResp builder] mergeFromCodedInputStream:input] build];
}
+ (PBFetchCorporationResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchCorporationResp*)[[[PBFetchCorporationResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchCorporationRespBuilder*) builder {
  return [[PBFetchCorporationRespBuilder alloc] init];
}
+ (PBFetchCorporationRespBuilder*) builderWithPrototype:(PBFetchCorporationResp*) prototype {
  return [[PBFetchCorporationResp builder] mergeFrom:prototype];
}
- (PBFetchCorporationRespBuilder*) builder {
  return [PBFetchCorporationResp builder];
}
- (PBFetchCorporationRespBuilder*) toBuilder {
  return [PBFetchCorporationResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.corporationsArray enumerateObjectsUsingBlock:^(PBCorporation *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"corporations"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.departmentsArray enumerateObjectsUsingBlock:^(PBDepartment *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"departments"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.workersArray enumerateObjectsUsingBlock:^(PBWorker *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"workers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBFetchCorporationResp class]]) {
    return NO;
  }
  PBFetchCorporationResp *otherMessage = other;
  return
      [self.corporationsArray isEqualToArray:otherMessage.corporationsArray] &&
      [self.departmentsArray isEqualToArray:otherMessage.departmentsArray] &&
      [self.workersArray isEqualToArray:otherMessage.workersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.corporationsArray enumerateObjectsUsingBlock:^(PBCorporation *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.departmentsArray enumerateObjectsUsingBlock:^(PBDepartment *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.workersArray enumerateObjectsUsingBlock:^(PBWorker *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBFetchCorporationRespBuilder()
@property (strong) PBFetchCorporationResp* result;
@end

@implementation PBFetchCorporationRespBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBFetchCorporationResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBFetchCorporationRespBuilder*) clear {
  self.result = [[PBFetchCorporationResp alloc] init];
  return self;
}
- (PBFetchCorporationRespBuilder*) clone {
  return [PBFetchCorporationResp builderWithPrototype:result];
}
- (PBFetchCorporationResp*) defaultInstance {
  return [PBFetchCorporationResp defaultInstance];
}
- (PBFetchCorporationResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBFetchCorporationResp*) buildPartial {
  PBFetchCorporationResp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBFetchCorporationRespBuilder*) mergeFrom:(PBFetchCorporationResp*) other {
  if (other == [PBFetchCorporationResp defaultInstance]) {
    return self;
  }
  if (other.corporationsArray.count > 0) {
    if (result.corporationsArray == nil) {
      result.corporationsArray = [[NSMutableArray alloc] initWithArray:other.corporationsArray];
    } else {
      [result.corporationsArray addObjectsFromArray:other.corporationsArray];
    }
  }
  if (other.departmentsArray.count > 0) {
    if (result.departmentsArray == nil) {
      result.departmentsArray = [[NSMutableArray alloc] initWithArray:other.departmentsArray];
    } else {
      [result.departmentsArray addObjectsFromArray:other.departmentsArray];
    }
  }
  if (other.workersArray.count > 0) {
    if (result.workersArray == nil) {
      result.workersArray = [[NSMutableArray alloc] initWithArray:other.workersArray];
    } else {
      [result.workersArray addObjectsFromArray:other.workersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBFetchCorporationRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBFetchCorporationRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PBCorporationBuilder* subBuilder = [PBCorporation builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCorporations:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PBDepartmentBuilder* subBuilder = [PBDepartment builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDepartments:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        PBWorkerBuilder* subBuilder = [PBWorker builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addWorkers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)corporations {
  return result.corporationsArray;
}
- (PBCorporation*)corporationsAtIndex:(NSUInteger)index {
  return [result corporationsAtIndex:index];
}
- (PBFetchCorporationRespBuilder *)addCorporations:(PBCorporation*)value {
  if (result.corporationsArray == nil) {
    result.corporationsArray = [[NSMutableArray alloc]init];
  }
  [result.corporationsArray addObject:value];
  return self;
}
- (PBFetchCorporationRespBuilder *)setCorporationsArray:(NSArray *)array {
  result.corporationsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBFetchCorporationRespBuilder *)clearCorporations {
  result.corporationsArray = nil;
  return self;
}
- (NSMutableArray *)departments {
  return result.departmentsArray;
}
- (PBDepartment*)departmentsAtIndex:(NSUInteger)index {
  return [result departmentsAtIndex:index];
}
- (PBFetchCorporationRespBuilder *)addDepartments:(PBDepartment*)value {
  if (result.departmentsArray == nil) {
    result.departmentsArray = [[NSMutableArray alloc]init];
  }
  [result.departmentsArray addObject:value];
  return self;
}
- (PBFetchCorporationRespBuilder *)setDepartmentsArray:(NSArray *)array {
  result.departmentsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBFetchCorporationRespBuilder *)clearDepartments {
  result.departmentsArray = nil;
  return self;
}
- (NSMutableArray *)workers {
  return result.workersArray;
}
- (PBWorker*)workersAtIndex:(NSUInteger)index {
  return [result workersAtIndex:index];
}
- (PBFetchCorporationRespBuilder *)addWorkers:(PBWorker*)value {
  if (result.workersArray == nil) {
    result.workersArray = [[NSMutableArray alloc]init];
  }
  [result.workersArray addObject:value];
  return self;
}
- (PBFetchCorporationRespBuilder *)setWorkersArray:(NSArray *)array {
  result.workersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBFetchCorporationRespBuilder *)clearWorkers {
  result.workersArray = nil;
  return self;
}
@end

@interface PBFetchCorporationByPassportIdReq ()
@property SInt64 passportId;
@end

@implementation PBFetchCorporationByPassportIdReq

- (BOOL) hasPassportId {
  return !!hasPassportId_;
}
- (void) setHasPassportId:(BOOL) value_ {
  hasPassportId_ = !!value_;
}
@synthesize passportId;
- (id) init {
  if ((self = [super init])) {
    self.passportId = 0L;
  }
  return self;
}
static PBFetchCorporationByPassportIdReq* defaultPBFetchCorporationByPassportIdReqInstance = nil;
+ (void) initialize {
  if (self == [PBFetchCorporationByPassportIdReq class]) {
    defaultPBFetchCorporationByPassportIdReqInstance = [[PBFetchCorporationByPassportIdReq alloc] init];
  }
}
+ (PBFetchCorporationByPassportIdReq*) defaultInstance {
  return defaultPBFetchCorporationByPassportIdReqInstance;
}
- (PBFetchCorporationByPassportIdReq*) defaultInstance {
  return defaultPBFetchCorporationByPassportIdReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPassportId) {
    [output writeSInt64:1 value:self.passportId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPassportId) {
    size_ += computeSInt64Size(1, self.passportId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBFetchCorporationByPassportIdReq*) parseFromData:(NSData*) data {
  return (PBFetchCorporationByPassportIdReq*)[[[PBFetchCorporationByPassportIdReq builder] mergeFromData:data] build];
}
+ (PBFetchCorporationByPassportIdReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchCorporationByPassportIdReq*)[[[PBFetchCorporationByPassportIdReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBFetchCorporationByPassportIdReq*) parseFromInputStream:(NSInputStream*) input {
  return (PBFetchCorporationByPassportIdReq*)[[[PBFetchCorporationByPassportIdReq builder] mergeFromInputStream:input] build];
}
+ (PBFetchCorporationByPassportIdReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchCorporationByPassportIdReq*)[[[PBFetchCorporationByPassportIdReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchCorporationByPassportIdReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBFetchCorporationByPassportIdReq*)[[[PBFetchCorporationByPassportIdReq builder] mergeFromCodedInputStream:input] build];
}
+ (PBFetchCorporationByPassportIdReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchCorporationByPassportIdReq*)[[[PBFetchCorporationByPassportIdReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchCorporationByPassportIdReqBuilder*) builder {
  return [[PBFetchCorporationByPassportIdReqBuilder alloc] init];
}
+ (PBFetchCorporationByPassportIdReqBuilder*) builderWithPrototype:(PBFetchCorporationByPassportIdReq*) prototype {
  return [[PBFetchCorporationByPassportIdReq builder] mergeFrom:prototype];
}
- (PBFetchCorporationByPassportIdReqBuilder*) builder {
  return [PBFetchCorporationByPassportIdReq builder];
}
- (PBFetchCorporationByPassportIdReqBuilder*) toBuilder {
  return [PBFetchCorporationByPassportIdReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPassportId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"passportId", [NSNumber numberWithLongLong:self.passportId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBFetchCorporationByPassportIdReq class]]) {
    return NO;
  }
  PBFetchCorporationByPassportIdReq *otherMessage = other;
  return
      self.hasPassportId == otherMessage.hasPassportId &&
      (!self.hasPassportId || self.passportId == otherMessage.passportId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPassportId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.passportId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBFetchCorporationByPassportIdReqBuilder()
@property (strong) PBFetchCorporationByPassportIdReq* result;
@end

@implementation PBFetchCorporationByPassportIdReqBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBFetchCorporationByPassportIdReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBFetchCorporationByPassportIdReqBuilder*) clear {
  self.result = [[PBFetchCorporationByPassportIdReq alloc] init];
  return self;
}
- (PBFetchCorporationByPassportIdReqBuilder*) clone {
  return [PBFetchCorporationByPassportIdReq builderWithPrototype:result];
}
- (PBFetchCorporationByPassportIdReq*) defaultInstance {
  return [PBFetchCorporationByPassportIdReq defaultInstance];
}
- (PBFetchCorporationByPassportIdReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBFetchCorporationByPassportIdReq*) buildPartial {
  PBFetchCorporationByPassportIdReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBFetchCorporationByPassportIdReqBuilder*) mergeFrom:(PBFetchCorporationByPassportIdReq*) other {
  if (other == [PBFetchCorporationByPassportIdReq defaultInstance]) {
    return self;
  }
  if (other.hasPassportId) {
    [self setPassportId:other.passportId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBFetchCorporationByPassportIdReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBFetchCorporationByPassportIdReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPassportId:[input readSInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasPassportId {
  return result.hasPassportId;
}
- (SInt64) passportId {
  return result.passportId;
}
- (PBFetchCorporationByPassportIdReqBuilder*) setPassportId:(SInt64) value {
  result.hasPassportId = YES;
  result.passportId = value;
  return self;
}
- (PBFetchCorporationByPassportIdReqBuilder*) clearPassportId {
  result.hasPassportId = NO;
  result.passportId = 0L;
  return self;
}
@end

@interface PBFetchCorporationByPassportIdResp ()
@property (strong) NSMutableArray * corporationsArray;
@end

@implementation PBFetchCorporationByPassportIdResp

@synthesize corporationsArray;
@dynamic corporations;
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static PBFetchCorporationByPassportIdResp* defaultPBFetchCorporationByPassportIdRespInstance = nil;
+ (void) initialize {
  if (self == [PBFetchCorporationByPassportIdResp class]) {
    defaultPBFetchCorporationByPassportIdRespInstance = [[PBFetchCorporationByPassportIdResp alloc] init];
  }
}
+ (PBFetchCorporationByPassportIdResp*) defaultInstance {
  return defaultPBFetchCorporationByPassportIdRespInstance;
}
- (PBFetchCorporationByPassportIdResp*) defaultInstance {
  return defaultPBFetchCorporationByPassportIdRespInstance;
}
- (NSArray *)corporations {
  return corporationsArray;
}
- (PBCorporation*)corporationsAtIndex:(NSUInteger)index {
  return [corporationsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.corporationsArray enumerateObjectsUsingBlock:^(PBCorporation *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.corporationsArray enumerateObjectsUsingBlock:^(PBCorporation *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBFetchCorporationByPassportIdResp*) parseFromData:(NSData*) data {
  return (PBFetchCorporationByPassportIdResp*)[[[PBFetchCorporationByPassportIdResp builder] mergeFromData:data] build];
}
+ (PBFetchCorporationByPassportIdResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchCorporationByPassportIdResp*)[[[PBFetchCorporationByPassportIdResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBFetchCorporationByPassportIdResp*) parseFromInputStream:(NSInputStream*) input {
  return (PBFetchCorporationByPassportIdResp*)[[[PBFetchCorporationByPassportIdResp builder] mergeFromInputStream:input] build];
}
+ (PBFetchCorporationByPassportIdResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchCorporationByPassportIdResp*)[[[PBFetchCorporationByPassportIdResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchCorporationByPassportIdResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBFetchCorporationByPassportIdResp*)[[[PBFetchCorporationByPassportIdResp builder] mergeFromCodedInputStream:input] build];
}
+ (PBFetchCorporationByPassportIdResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchCorporationByPassportIdResp*)[[[PBFetchCorporationByPassportIdResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchCorporationByPassportIdRespBuilder*) builder {
  return [[PBFetchCorporationByPassportIdRespBuilder alloc] init];
}
+ (PBFetchCorporationByPassportIdRespBuilder*) builderWithPrototype:(PBFetchCorporationByPassportIdResp*) prototype {
  return [[PBFetchCorporationByPassportIdResp builder] mergeFrom:prototype];
}
- (PBFetchCorporationByPassportIdRespBuilder*) builder {
  return [PBFetchCorporationByPassportIdResp builder];
}
- (PBFetchCorporationByPassportIdRespBuilder*) toBuilder {
  return [PBFetchCorporationByPassportIdResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.corporationsArray enumerateObjectsUsingBlock:^(PBCorporation *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"corporations"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBFetchCorporationByPassportIdResp class]]) {
    return NO;
  }
  PBFetchCorporationByPassportIdResp *otherMessage = other;
  return
      [self.corporationsArray isEqualToArray:otherMessage.corporationsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.corporationsArray enumerateObjectsUsingBlock:^(PBCorporation *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBFetchCorporationByPassportIdRespBuilder()
@property (strong) PBFetchCorporationByPassportIdResp* result;
@end

@implementation PBFetchCorporationByPassportIdRespBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBFetchCorporationByPassportIdResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBFetchCorporationByPassportIdRespBuilder*) clear {
  self.result = [[PBFetchCorporationByPassportIdResp alloc] init];
  return self;
}
- (PBFetchCorporationByPassportIdRespBuilder*) clone {
  return [PBFetchCorporationByPassportIdResp builderWithPrototype:result];
}
- (PBFetchCorporationByPassportIdResp*) defaultInstance {
  return [PBFetchCorporationByPassportIdResp defaultInstance];
}
- (PBFetchCorporationByPassportIdResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBFetchCorporationByPassportIdResp*) buildPartial {
  PBFetchCorporationByPassportIdResp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBFetchCorporationByPassportIdRespBuilder*) mergeFrom:(PBFetchCorporationByPassportIdResp*) other {
  if (other == [PBFetchCorporationByPassportIdResp defaultInstance]) {
    return self;
  }
  if (other.corporationsArray.count > 0) {
    if (result.corporationsArray == nil) {
      result.corporationsArray = [[NSMutableArray alloc] initWithArray:other.corporationsArray];
    } else {
      [result.corporationsArray addObjectsFromArray:other.corporationsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBFetchCorporationByPassportIdRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBFetchCorporationByPassportIdRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PBCorporationBuilder* subBuilder = [PBCorporation builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCorporations:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)corporations {
  return result.corporationsArray;
}
- (PBCorporation*)corporationsAtIndex:(NSUInteger)index {
  return [result corporationsAtIndex:index];
}
- (PBFetchCorporationByPassportIdRespBuilder *)addCorporations:(PBCorporation*)value {
  if (result.corporationsArray == nil) {
    result.corporationsArray = [[NSMutableArray alloc]init];
  }
  [result.corporationsArray addObject:value];
  return self;
}
- (PBFetchCorporationByPassportIdRespBuilder *)setCorporationsArray:(NSArray *)array {
  result.corporationsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBFetchCorporationByPassportIdRespBuilder *)clearCorporations {
  result.corporationsArray = nil;
  return self;
}
@end

@interface PBCorporationsOfUser ()
@property (strong) NSMutableArray * corporationsArray;
@end

@implementation PBCorporationsOfUser

@synthesize corporationsArray;
@dynamic corporations;
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static PBCorporationsOfUser* defaultPBCorporationsOfUserInstance = nil;
+ (void) initialize {
  if (self == [PBCorporationsOfUser class]) {
    defaultPBCorporationsOfUserInstance = [[PBCorporationsOfUser alloc] init];
  }
}
+ (PBCorporationsOfUser*) defaultInstance {
  return defaultPBCorporationsOfUserInstance;
}
- (PBCorporationsOfUser*) defaultInstance {
  return defaultPBCorporationsOfUserInstance;
}
- (NSArray *)corporations {
  return corporationsArray;
}
- (PBCorporation*)corporationsAtIndex:(NSUInteger)index {
  return [corporationsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.corporationsArray enumerateObjectsUsingBlock:^(PBCorporation *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.corporationsArray enumerateObjectsUsingBlock:^(PBCorporation *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBCorporationsOfUser*) parseFromData:(NSData*) data {
  return (PBCorporationsOfUser*)[[[PBCorporationsOfUser builder] mergeFromData:data] build];
}
+ (PBCorporationsOfUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBCorporationsOfUser*)[[[PBCorporationsOfUser builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBCorporationsOfUser*) parseFromInputStream:(NSInputStream*) input {
  return (PBCorporationsOfUser*)[[[PBCorporationsOfUser builder] mergeFromInputStream:input] build];
}
+ (PBCorporationsOfUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBCorporationsOfUser*)[[[PBCorporationsOfUser builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBCorporationsOfUser*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBCorporationsOfUser*)[[[PBCorporationsOfUser builder] mergeFromCodedInputStream:input] build];
}
+ (PBCorporationsOfUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBCorporationsOfUser*)[[[PBCorporationsOfUser builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBCorporationsOfUserBuilder*) builder {
  return [[PBCorporationsOfUserBuilder alloc] init];
}
+ (PBCorporationsOfUserBuilder*) builderWithPrototype:(PBCorporationsOfUser*) prototype {
  return [[PBCorporationsOfUser builder] mergeFrom:prototype];
}
- (PBCorporationsOfUserBuilder*) builder {
  return [PBCorporationsOfUser builder];
}
- (PBCorporationsOfUserBuilder*) toBuilder {
  return [PBCorporationsOfUser builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.corporationsArray enumerateObjectsUsingBlock:^(PBCorporation *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"corporations"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBCorporationsOfUser class]]) {
    return NO;
  }
  PBCorporationsOfUser *otherMessage = other;
  return
      [self.corporationsArray isEqualToArray:otherMessage.corporationsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.corporationsArray enumerateObjectsUsingBlock:^(PBCorporation *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBCorporationsOfUserBuilder()
@property (strong) PBCorporationsOfUser* result;
@end

@implementation PBCorporationsOfUserBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBCorporationsOfUser alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBCorporationsOfUserBuilder*) clear {
  self.result = [[PBCorporationsOfUser alloc] init];
  return self;
}
- (PBCorporationsOfUserBuilder*) clone {
  return [PBCorporationsOfUser builderWithPrototype:result];
}
- (PBCorporationsOfUser*) defaultInstance {
  return [PBCorporationsOfUser defaultInstance];
}
- (PBCorporationsOfUser*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBCorporationsOfUser*) buildPartial {
  PBCorporationsOfUser* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBCorporationsOfUserBuilder*) mergeFrom:(PBCorporationsOfUser*) other {
  if (other == [PBCorporationsOfUser defaultInstance]) {
    return self;
  }
  if (other.corporationsArray.count > 0) {
    if (result.corporationsArray == nil) {
      result.corporationsArray = [[NSMutableArray alloc] initWithArray:other.corporationsArray];
    } else {
      [result.corporationsArray addObjectsFromArray:other.corporationsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBCorporationsOfUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBCorporationsOfUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PBCorporationBuilder* subBuilder = [PBCorporation builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCorporations:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)corporations {
  return result.corporationsArray;
}
- (PBCorporation*)corporationsAtIndex:(NSUInteger)index {
  return [result corporationsAtIndex:index];
}
- (PBCorporationsOfUserBuilder *)addCorporations:(PBCorporation*)value {
  if (result.corporationsArray == nil) {
    result.corporationsArray = [[NSMutableArray alloc]init];
  }
  [result.corporationsArray addObject:value];
  return self;
}
- (PBCorporationsOfUserBuilder *)setCorporationsArray:(NSArray *)array {
  result.corporationsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBCorporationsOfUserBuilder *)clearCorporations {
  result.corporationsArray = nil;
  return self;
}
@end

@interface PBFetchChangedCorporationReq ()
@property SInt64 myPassportId;
@property SInt64 maxUpdatedAt;
@end

@implementation PBFetchChangedCorporationReq

- (BOOL) hasMyPassportId {
  return !!hasMyPassportId_;
}
- (void) setHasMyPassportId:(BOOL) value_ {
  hasMyPassportId_ = !!value_;
}
@synthesize myPassportId;
- (BOOL) hasMaxUpdatedAt {
  return !!hasMaxUpdatedAt_;
}
- (void) setHasMaxUpdatedAt:(BOOL) value_ {
  hasMaxUpdatedAt_ = !!value_;
}
@synthesize maxUpdatedAt;
- (id) init {
  if ((self = [super init])) {
    self.myPassportId = 0L;
    self.maxUpdatedAt = 0L;
  }
  return self;
}
static PBFetchChangedCorporationReq* defaultPBFetchChangedCorporationReqInstance = nil;
+ (void) initialize {
  if (self == [PBFetchChangedCorporationReq class]) {
    defaultPBFetchChangedCorporationReqInstance = [[PBFetchChangedCorporationReq alloc] init];
  }
}
+ (PBFetchChangedCorporationReq*) defaultInstance {
  return defaultPBFetchChangedCorporationReqInstance;
}
- (PBFetchChangedCorporationReq*) defaultInstance {
  return defaultPBFetchChangedCorporationReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMyPassportId) {
    [output writeSInt64:1 value:self.myPassportId];
  }
  if (self.hasMaxUpdatedAt) {
    [output writeSInt64:2 value:self.maxUpdatedAt];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMyPassportId) {
    size_ += computeSInt64Size(1, self.myPassportId);
  }
  if (self.hasMaxUpdatedAt) {
    size_ += computeSInt64Size(2, self.maxUpdatedAt);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBFetchChangedCorporationReq*) parseFromData:(NSData*) data {
  return (PBFetchChangedCorporationReq*)[[[PBFetchChangedCorporationReq builder] mergeFromData:data] build];
}
+ (PBFetchChangedCorporationReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchChangedCorporationReq*)[[[PBFetchChangedCorporationReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBFetchChangedCorporationReq*) parseFromInputStream:(NSInputStream*) input {
  return (PBFetchChangedCorporationReq*)[[[PBFetchChangedCorporationReq builder] mergeFromInputStream:input] build];
}
+ (PBFetchChangedCorporationReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchChangedCorporationReq*)[[[PBFetchChangedCorporationReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchChangedCorporationReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBFetchChangedCorporationReq*)[[[PBFetchChangedCorporationReq builder] mergeFromCodedInputStream:input] build];
}
+ (PBFetchChangedCorporationReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchChangedCorporationReq*)[[[PBFetchChangedCorporationReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchChangedCorporationReqBuilder*) builder {
  return [[PBFetchChangedCorporationReqBuilder alloc] init];
}
+ (PBFetchChangedCorporationReqBuilder*) builderWithPrototype:(PBFetchChangedCorporationReq*) prototype {
  return [[PBFetchChangedCorporationReq builder] mergeFrom:prototype];
}
- (PBFetchChangedCorporationReqBuilder*) builder {
  return [PBFetchChangedCorporationReq builder];
}
- (PBFetchChangedCorporationReqBuilder*) toBuilder {
  return [PBFetchChangedCorporationReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMyPassportId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"myPassportId", [NSNumber numberWithLongLong:self.myPassportId]];
  }
  if (self.hasMaxUpdatedAt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxUpdatedAt", [NSNumber numberWithLongLong:self.maxUpdatedAt]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBFetchChangedCorporationReq class]]) {
    return NO;
  }
  PBFetchChangedCorporationReq *otherMessage = other;
  return
      self.hasMyPassportId == otherMessage.hasMyPassportId &&
      (!self.hasMyPassportId || self.myPassportId == otherMessage.myPassportId) &&
      self.hasMaxUpdatedAt == otherMessage.hasMaxUpdatedAt &&
      (!self.hasMaxUpdatedAt || self.maxUpdatedAt == otherMessage.maxUpdatedAt) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMyPassportId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.myPassportId] hash];
  }
  if (self.hasMaxUpdatedAt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxUpdatedAt] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBFetchChangedCorporationReqBuilder()
@property (strong) PBFetchChangedCorporationReq* result;
@end

@implementation PBFetchChangedCorporationReqBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBFetchChangedCorporationReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBFetchChangedCorporationReqBuilder*) clear {
  self.result = [[PBFetchChangedCorporationReq alloc] init];
  return self;
}
- (PBFetchChangedCorporationReqBuilder*) clone {
  return [PBFetchChangedCorporationReq builderWithPrototype:result];
}
- (PBFetchChangedCorporationReq*) defaultInstance {
  return [PBFetchChangedCorporationReq defaultInstance];
}
- (PBFetchChangedCorporationReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBFetchChangedCorporationReq*) buildPartial {
  PBFetchChangedCorporationReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBFetchChangedCorporationReqBuilder*) mergeFrom:(PBFetchChangedCorporationReq*) other {
  if (other == [PBFetchChangedCorporationReq defaultInstance]) {
    return self;
  }
  if (other.hasMyPassportId) {
    [self setMyPassportId:other.myPassportId];
  }
  if (other.hasMaxUpdatedAt) {
    [self setMaxUpdatedAt:other.maxUpdatedAt];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBFetchChangedCorporationReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBFetchChangedCorporationReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMyPassportId:[input readSInt64]];
        break;
      }
      case 16: {
        [self setMaxUpdatedAt:[input readSInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasMyPassportId {
  return result.hasMyPassportId;
}
- (SInt64) myPassportId {
  return result.myPassportId;
}
- (PBFetchChangedCorporationReqBuilder*) setMyPassportId:(SInt64) value {
  result.hasMyPassportId = YES;
  result.myPassportId = value;
  return self;
}
- (PBFetchChangedCorporationReqBuilder*) clearMyPassportId {
  result.hasMyPassportId = NO;
  result.myPassportId = 0L;
  return self;
}
- (BOOL) hasMaxUpdatedAt {
  return result.hasMaxUpdatedAt;
}
- (SInt64) maxUpdatedAt {
  return result.maxUpdatedAt;
}
- (PBFetchChangedCorporationReqBuilder*) setMaxUpdatedAt:(SInt64) value {
  result.hasMaxUpdatedAt = YES;
  result.maxUpdatedAt = value;
  return self;
}
- (PBFetchChangedCorporationReqBuilder*) clearMaxUpdatedAt {
  result.hasMaxUpdatedAt = NO;
  result.maxUpdatedAt = 0L;
  return self;
}
@end

@interface PBFetchChangedCorporationResp ()
@property (strong) NSMutableArray * corporationsArray;
@property (strong) NSMutableArray * departmentsArray;
@property (strong) NSMutableArray * workersArray;
@end

@implementation PBFetchChangedCorporationResp

@synthesize corporationsArray;
@dynamic corporations;
@synthesize departmentsArray;
@dynamic departments;
@synthesize workersArray;
@dynamic workers;
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static PBFetchChangedCorporationResp* defaultPBFetchChangedCorporationRespInstance = nil;
+ (void) initialize {
  if (self == [PBFetchChangedCorporationResp class]) {
    defaultPBFetchChangedCorporationRespInstance = [[PBFetchChangedCorporationResp alloc] init];
  }
}
+ (PBFetchChangedCorporationResp*) defaultInstance {
  return defaultPBFetchChangedCorporationRespInstance;
}
- (PBFetchChangedCorporationResp*) defaultInstance {
  return defaultPBFetchChangedCorporationRespInstance;
}
- (NSArray *)corporations {
  return corporationsArray;
}
- (PBCorporation*)corporationsAtIndex:(NSUInteger)index {
  return [corporationsArray objectAtIndex:index];
}
- (NSArray *)departments {
  return departmentsArray;
}
- (PBDepartment*)departmentsAtIndex:(NSUInteger)index {
  return [departmentsArray objectAtIndex:index];
}
- (NSArray *)workers {
  return workersArray;
}
- (PBWorker*)workersAtIndex:(NSUInteger)index {
  return [workersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.corporationsArray enumerateObjectsUsingBlock:^(PBCorporation *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.departmentsArray enumerateObjectsUsingBlock:^(PBDepartment *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.workersArray enumerateObjectsUsingBlock:^(PBWorker *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.corporationsArray enumerateObjectsUsingBlock:^(PBCorporation *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  [self.departmentsArray enumerateObjectsUsingBlock:^(PBDepartment *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  [self.workersArray enumerateObjectsUsingBlock:^(PBWorker *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBFetchChangedCorporationResp*) parseFromData:(NSData*) data {
  return (PBFetchChangedCorporationResp*)[[[PBFetchChangedCorporationResp builder] mergeFromData:data] build];
}
+ (PBFetchChangedCorporationResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchChangedCorporationResp*)[[[PBFetchChangedCorporationResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBFetchChangedCorporationResp*) parseFromInputStream:(NSInputStream*) input {
  return (PBFetchChangedCorporationResp*)[[[PBFetchChangedCorporationResp builder] mergeFromInputStream:input] build];
}
+ (PBFetchChangedCorporationResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchChangedCorporationResp*)[[[PBFetchChangedCorporationResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchChangedCorporationResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBFetchChangedCorporationResp*)[[[PBFetchChangedCorporationResp builder] mergeFromCodedInputStream:input] build];
}
+ (PBFetchChangedCorporationResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchChangedCorporationResp*)[[[PBFetchChangedCorporationResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchChangedCorporationRespBuilder*) builder {
  return [[PBFetchChangedCorporationRespBuilder alloc] init];
}
+ (PBFetchChangedCorporationRespBuilder*) builderWithPrototype:(PBFetchChangedCorporationResp*) prototype {
  return [[PBFetchChangedCorporationResp builder] mergeFrom:prototype];
}
- (PBFetchChangedCorporationRespBuilder*) builder {
  return [PBFetchChangedCorporationResp builder];
}
- (PBFetchChangedCorporationRespBuilder*) toBuilder {
  return [PBFetchChangedCorporationResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.corporationsArray enumerateObjectsUsingBlock:^(PBCorporation *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"corporations"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.departmentsArray enumerateObjectsUsingBlock:^(PBDepartment *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"departments"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.workersArray enumerateObjectsUsingBlock:^(PBWorker *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"workers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBFetchChangedCorporationResp class]]) {
    return NO;
  }
  PBFetchChangedCorporationResp *otherMessage = other;
  return
      [self.corporationsArray isEqualToArray:otherMessage.corporationsArray] &&
      [self.departmentsArray isEqualToArray:otherMessage.departmentsArray] &&
      [self.workersArray isEqualToArray:otherMessage.workersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.corporationsArray enumerateObjectsUsingBlock:^(PBCorporation *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.departmentsArray enumerateObjectsUsingBlock:^(PBDepartment *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.workersArray enumerateObjectsUsingBlock:^(PBWorker *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBFetchChangedCorporationRespBuilder()
@property (strong) PBFetchChangedCorporationResp* result;
@end

@implementation PBFetchChangedCorporationRespBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBFetchChangedCorporationResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBFetchChangedCorporationRespBuilder*) clear {
  self.result = [[PBFetchChangedCorporationResp alloc] init];
  return self;
}
- (PBFetchChangedCorporationRespBuilder*) clone {
  return [PBFetchChangedCorporationResp builderWithPrototype:result];
}
- (PBFetchChangedCorporationResp*) defaultInstance {
  return [PBFetchChangedCorporationResp defaultInstance];
}
- (PBFetchChangedCorporationResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBFetchChangedCorporationResp*) buildPartial {
  PBFetchChangedCorporationResp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBFetchChangedCorporationRespBuilder*) mergeFrom:(PBFetchChangedCorporationResp*) other {
  if (other == [PBFetchChangedCorporationResp defaultInstance]) {
    return self;
  }
  if (other.corporationsArray.count > 0) {
    if (result.corporationsArray == nil) {
      result.corporationsArray = [[NSMutableArray alloc] initWithArray:other.corporationsArray];
    } else {
      [result.corporationsArray addObjectsFromArray:other.corporationsArray];
    }
  }
  if (other.departmentsArray.count > 0) {
    if (result.departmentsArray == nil) {
      result.departmentsArray = [[NSMutableArray alloc] initWithArray:other.departmentsArray];
    } else {
      [result.departmentsArray addObjectsFromArray:other.departmentsArray];
    }
  }
  if (other.workersArray.count > 0) {
    if (result.workersArray == nil) {
      result.workersArray = [[NSMutableArray alloc] initWithArray:other.workersArray];
    } else {
      [result.workersArray addObjectsFromArray:other.workersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBFetchChangedCorporationRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBFetchChangedCorporationRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PBCorporationBuilder* subBuilder = [PBCorporation builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCorporations:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PBDepartmentBuilder* subBuilder = [PBDepartment builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDepartments:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        PBWorkerBuilder* subBuilder = [PBWorker builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addWorkers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)corporations {
  return result.corporationsArray;
}
- (PBCorporation*)corporationsAtIndex:(NSUInteger)index {
  return [result corporationsAtIndex:index];
}
- (PBFetchChangedCorporationRespBuilder *)addCorporations:(PBCorporation*)value {
  if (result.corporationsArray == nil) {
    result.corporationsArray = [[NSMutableArray alloc]init];
  }
  [result.corporationsArray addObject:value];
  return self;
}
- (PBFetchChangedCorporationRespBuilder *)setCorporationsArray:(NSArray *)array {
  result.corporationsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBFetchChangedCorporationRespBuilder *)clearCorporations {
  result.corporationsArray = nil;
  return self;
}
- (NSMutableArray *)departments {
  return result.departmentsArray;
}
- (PBDepartment*)departmentsAtIndex:(NSUInteger)index {
  return [result departmentsAtIndex:index];
}
- (PBFetchChangedCorporationRespBuilder *)addDepartments:(PBDepartment*)value {
  if (result.departmentsArray == nil) {
    result.departmentsArray = [[NSMutableArray alloc]init];
  }
  [result.departmentsArray addObject:value];
  return self;
}
- (PBFetchChangedCorporationRespBuilder *)setDepartmentsArray:(NSArray *)array {
  result.departmentsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBFetchChangedCorporationRespBuilder *)clearDepartments {
  result.departmentsArray = nil;
  return self;
}
- (NSMutableArray *)workers {
  return result.workersArray;
}
- (PBWorker*)workersAtIndex:(NSUInteger)index {
  return [result workersAtIndex:index];
}
- (PBFetchChangedCorporationRespBuilder *)addWorkers:(PBWorker*)value {
  if (result.workersArray == nil) {
    result.workersArray = [[NSMutableArray alloc]init];
  }
  [result.workersArray addObject:value];
  return self;
}
- (PBFetchChangedCorporationRespBuilder *)setWorkersArray:(NSArray *)array {
  result.workersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBFetchChangedCorporationRespBuilder *)clearWorkers {
  result.workersArray = nil;
  return self;
}
@end

@interface PBFetchCorporationStructReq ()
@property SInt64 corporationId;
@end

@implementation PBFetchCorporationStructReq

- (BOOL) hasCorporationId {
  return !!hasCorporationId_;
}
- (void) setHasCorporationId:(BOOL) value_ {
  hasCorporationId_ = !!value_;
}
@synthesize corporationId;
- (id) init {
  if ((self = [super init])) {
    self.corporationId = 0L;
  }
  return self;
}
static PBFetchCorporationStructReq* defaultPBFetchCorporationStructReqInstance = nil;
+ (void) initialize {
  if (self == [PBFetchCorporationStructReq class]) {
    defaultPBFetchCorporationStructReqInstance = [[PBFetchCorporationStructReq alloc] init];
  }
}
+ (PBFetchCorporationStructReq*) defaultInstance {
  return defaultPBFetchCorporationStructReqInstance;
}
- (PBFetchCorporationStructReq*) defaultInstance {
  return defaultPBFetchCorporationStructReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCorporationId) {
    [output writeSInt64:1 value:self.corporationId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCorporationId) {
    size_ += computeSInt64Size(1, self.corporationId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBFetchCorporationStructReq*) parseFromData:(NSData*) data {
  return (PBFetchCorporationStructReq*)[[[PBFetchCorporationStructReq builder] mergeFromData:data] build];
}
+ (PBFetchCorporationStructReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchCorporationStructReq*)[[[PBFetchCorporationStructReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBFetchCorporationStructReq*) parseFromInputStream:(NSInputStream*) input {
  return (PBFetchCorporationStructReq*)[[[PBFetchCorporationStructReq builder] mergeFromInputStream:input] build];
}
+ (PBFetchCorporationStructReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchCorporationStructReq*)[[[PBFetchCorporationStructReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchCorporationStructReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBFetchCorporationStructReq*)[[[PBFetchCorporationStructReq builder] mergeFromCodedInputStream:input] build];
}
+ (PBFetchCorporationStructReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchCorporationStructReq*)[[[PBFetchCorporationStructReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchCorporationStructReqBuilder*) builder {
  return [[PBFetchCorporationStructReqBuilder alloc] init];
}
+ (PBFetchCorporationStructReqBuilder*) builderWithPrototype:(PBFetchCorporationStructReq*) prototype {
  return [[PBFetchCorporationStructReq builder] mergeFrom:prototype];
}
- (PBFetchCorporationStructReqBuilder*) builder {
  return [PBFetchCorporationStructReq builder];
}
- (PBFetchCorporationStructReqBuilder*) toBuilder {
  return [PBFetchCorporationStructReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCorporationId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"corporationId", [NSNumber numberWithLongLong:self.corporationId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBFetchCorporationStructReq class]]) {
    return NO;
  }
  PBFetchCorporationStructReq *otherMessage = other;
  return
      self.hasCorporationId == otherMessage.hasCorporationId &&
      (!self.hasCorporationId || self.corporationId == otherMessage.corporationId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCorporationId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.corporationId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBFetchCorporationStructReqBuilder()
@property (strong) PBFetchCorporationStructReq* result;
@end

@implementation PBFetchCorporationStructReqBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBFetchCorporationStructReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBFetchCorporationStructReqBuilder*) clear {
  self.result = [[PBFetchCorporationStructReq alloc] init];
  return self;
}
- (PBFetchCorporationStructReqBuilder*) clone {
  return [PBFetchCorporationStructReq builderWithPrototype:result];
}
- (PBFetchCorporationStructReq*) defaultInstance {
  return [PBFetchCorporationStructReq defaultInstance];
}
- (PBFetchCorporationStructReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBFetchCorporationStructReq*) buildPartial {
  PBFetchCorporationStructReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBFetchCorporationStructReqBuilder*) mergeFrom:(PBFetchCorporationStructReq*) other {
  if (other == [PBFetchCorporationStructReq defaultInstance]) {
    return self;
  }
  if (other.hasCorporationId) {
    [self setCorporationId:other.corporationId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBFetchCorporationStructReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBFetchCorporationStructReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCorporationId:[input readSInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasCorporationId {
  return result.hasCorporationId;
}
- (SInt64) corporationId {
  return result.corporationId;
}
- (PBFetchCorporationStructReqBuilder*) setCorporationId:(SInt64) value {
  result.hasCorporationId = YES;
  result.corporationId = value;
  return self;
}
- (PBFetchCorporationStructReqBuilder*) clearCorporationId {
  result.hasCorporationId = NO;
  result.corporationId = 0L;
  return self;
}
@end

@interface PBFetchCorporationStructResp ()
@property (strong) PBCorporation* corporation;
@property (strong) NSMutableArray * departmentsArray;
@property (strong) NSMutableArray * workersArray;
@end

@implementation PBFetchCorporationStructResp

- (BOOL) hasCorporation {
  return !!hasCorporation_;
}
- (void) setHasCorporation:(BOOL) value_ {
  hasCorporation_ = !!value_;
}
@synthesize corporation;
@synthesize departmentsArray;
@dynamic departments;
@synthesize workersArray;
@dynamic workers;
- (id) init {
  if ((self = [super init])) {
    self.corporation = [PBCorporation defaultInstance];
  }
  return self;
}
static PBFetchCorporationStructResp* defaultPBFetchCorporationStructRespInstance = nil;
+ (void) initialize {
  if (self == [PBFetchCorporationStructResp class]) {
    defaultPBFetchCorporationStructRespInstance = [[PBFetchCorporationStructResp alloc] init];
  }
}
+ (PBFetchCorporationStructResp*) defaultInstance {
  return defaultPBFetchCorporationStructRespInstance;
}
- (PBFetchCorporationStructResp*) defaultInstance {
  return defaultPBFetchCorporationStructRespInstance;
}
- (NSArray *)departments {
  return departmentsArray;
}
- (PBDepartment*)departmentsAtIndex:(NSUInteger)index {
  return [departmentsArray objectAtIndex:index];
}
- (NSArray *)workers {
  return workersArray;
}
- (PBWorker*)workersAtIndex:(NSUInteger)index {
  return [workersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCorporation) {
    [output writeMessage:1 value:self.corporation];
  }
  [self.departmentsArray enumerateObjectsUsingBlock:^(PBDepartment *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.workersArray enumerateObjectsUsingBlock:^(PBWorker *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCorporation) {
    size_ += computeMessageSize(1, self.corporation);
  }
  [self.departmentsArray enumerateObjectsUsingBlock:^(PBDepartment *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  [self.workersArray enumerateObjectsUsingBlock:^(PBWorker *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBFetchCorporationStructResp*) parseFromData:(NSData*) data {
  return (PBFetchCorporationStructResp*)[[[PBFetchCorporationStructResp builder] mergeFromData:data] build];
}
+ (PBFetchCorporationStructResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchCorporationStructResp*)[[[PBFetchCorporationStructResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBFetchCorporationStructResp*) parseFromInputStream:(NSInputStream*) input {
  return (PBFetchCorporationStructResp*)[[[PBFetchCorporationStructResp builder] mergeFromInputStream:input] build];
}
+ (PBFetchCorporationStructResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchCorporationStructResp*)[[[PBFetchCorporationStructResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchCorporationStructResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBFetchCorporationStructResp*)[[[PBFetchCorporationStructResp builder] mergeFromCodedInputStream:input] build];
}
+ (PBFetchCorporationStructResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchCorporationStructResp*)[[[PBFetchCorporationStructResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchCorporationStructRespBuilder*) builder {
  return [[PBFetchCorporationStructRespBuilder alloc] init];
}
+ (PBFetchCorporationStructRespBuilder*) builderWithPrototype:(PBFetchCorporationStructResp*) prototype {
  return [[PBFetchCorporationStructResp builder] mergeFrom:prototype];
}
- (PBFetchCorporationStructRespBuilder*) builder {
  return [PBFetchCorporationStructResp builder];
}
- (PBFetchCorporationStructRespBuilder*) toBuilder {
  return [PBFetchCorporationStructResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCorporation) {
    [output appendFormat:@"%@%@ {\n", indent, @"corporation"];
    [self.corporation writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.departmentsArray enumerateObjectsUsingBlock:^(PBDepartment *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"departments"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.workersArray enumerateObjectsUsingBlock:^(PBWorker *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"workers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBFetchCorporationStructResp class]]) {
    return NO;
  }
  PBFetchCorporationStructResp *otherMessage = other;
  return
      self.hasCorporation == otherMessage.hasCorporation &&
      (!self.hasCorporation || [self.corporation isEqual:otherMessage.corporation]) &&
      [self.departmentsArray isEqualToArray:otherMessage.departmentsArray] &&
      [self.workersArray isEqualToArray:otherMessage.workersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCorporation) {
    hashCode = hashCode * 31 + [self.corporation hash];
  }
  [self.departmentsArray enumerateObjectsUsingBlock:^(PBDepartment *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.workersArray enumerateObjectsUsingBlock:^(PBWorker *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBFetchCorporationStructRespBuilder()
@property (strong) PBFetchCorporationStructResp* result;
@end

@implementation PBFetchCorporationStructRespBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBFetchCorporationStructResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBFetchCorporationStructRespBuilder*) clear {
  self.result = [[PBFetchCorporationStructResp alloc] init];
  return self;
}
- (PBFetchCorporationStructRespBuilder*) clone {
  return [PBFetchCorporationStructResp builderWithPrototype:result];
}
- (PBFetchCorporationStructResp*) defaultInstance {
  return [PBFetchCorporationStructResp defaultInstance];
}
- (PBFetchCorporationStructResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBFetchCorporationStructResp*) buildPartial {
  PBFetchCorporationStructResp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBFetchCorporationStructRespBuilder*) mergeFrom:(PBFetchCorporationStructResp*) other {
  if (other == [PBFetchCorporationStructResp defaultInstance]) {
    return self;
  }
  if (other.hasCorporation) {
    [self mergeCorporation:other.corporation];
  }
  if (other.departmentsArray.count > 0) {
    if (result.departmentsArray == nil) {
      result.departmentsArray = [[NSMutableArray alloc] initWithArray:other.departmentsArray];
    } else {
      [result.departmentsArray addObjectsFromArray:other.departmentsArray];
    }
  }
  if (other.workersArray.count > 0) {
    if (result.workersArray == nil) {
      result.workersArray = [[NSMutableArray alloc] initWithArray:other.workersArray];
    } else {
      [result.workersArray addObjectsFromArray:other.workersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBFetchCorporationStructRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBFetchCorporationStructRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PBCorporationBuilder* subBuilder = [PBCorporation builder];
        if (self.hasCorporation) {
          [subBuilder mergeFrom:self.corporation];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCorporation:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PBDepartmentBuilder* subBuilder = [PBDepartment builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDepartments:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        PBWorkerBuilder* subBuilder = [PBWorker builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addWorkers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCorporation {
  return result.hasCorporation;
}
- (PBCorporation*) corporation {
  return result.corporation;
}
- (PBFetchCorporationStructRespBuilder*) setCorporation:(PBCorporation*) value {
  result.hasCorporation = YES;
  result.corporation = value;
  return self;
}
- (PBFetchCorporationStructRespBuilder*) setCorporationBuilder:(PBCorporationBuilder*) builderForValue {
  return [self setCorporation:[builderForValue build]];
}
- (PBFetchCorporationStructRespBuilder*) mergeCorporation:(PBCorporation*) value {
  if (result.hasCorporation &&
      result.corporation != [PBCorporation defaultInstance]) {
    result.corporation =
      [[[PBCorporation builderWithPrototype:result.corporation] mergeFrom:value] buildPartial];
  } else {
    result.corporation = value;
  }
  result.hasCorporation = YES;
  return self;
}
- (PBFetchCorporationStructRespBuilder*) clearCorporation {
  result.hasCorporation = NO;
  result.corporation = [PBCorporation defaultInstance];
  return self;
}
- (NSMutableArray *)departments {
  return result.departmentsArray;
}
- (PBDepartment*)departmentsAtIndex:(NSUInteger)index {
  return [result departmentsAtIndex:index];
}
- (PBFetchCorporationStructRespBuilder *)addDepartments:(PBDepartment*)value {
  if (result.departmentsArray == nil) {
    result.departmentsArray = [[NSMutableArray alloc]init];
  }
  [result.departmentsArray addObject:value];
  return self;
}
- (PBFetchCorporationStructRespBuilder *)setDepartmentsArray:(NSArray *)array {
  result.departmentsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBFetchCorporationStructRespBuilder *)clearDepartments {
  result.departmentsArray = nil;
  return self;
}
- (NSMutableArray *)workers {
  return result.workersArray;
}
- (PBWorker*)workersAtIndex:(NSUInteger)index {
  return [result workersAtIndex:index];
}
- (PBFetchCorporationStructRespBuilder *)addWorkers:(PBWorker*)value {
  if (result.workersArray == nil) {
    result.workersArray = [[NSMutableArray alloc]init];
  }
  [result.workersArray addObject:value];
  return self;
}
- (PBFetchCorporationStructRespBuilder *)setWorkersArray:(NSArray *)array {
  result.workersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBFetchCorporationStructRespBuilder *)clearWorkers {
  result.workersArray = nil;
  return self;
}
@end

@interface PBCorporationChangedNotify ()
@property (strong) NSMutableArray * corporationsArray;
@property (strong) NSMutableArray * departmentsArray;
@property (strong) NSMutableArray * workersArray;
@end

@implementation PBCorporationChangedNotify

@synthesize corporationsArray;
@dynamic corporations;
@synthesize departmentsArray;
@dynamic departments;
@synthesize workersArray;
@dynamic workers;
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static PBCorporationChangedNotify* defaultPBCorporationChangedNotifyInstance = nil;
+ (void) initialize {
  if (self == [PBCorporationChangedNotify class]) {
    defaultPBCorporationChangedNotifyInstance = [[PBCorporationChangedNotify alloc] init];
  }
}
+ (PBCorporationChangedNotify*) defaultInstance {
  return defaultPBCorporationChangedNotifyInstance;
}
- (PBCorporationChangedNotify*) defaultInstance {
  return defaultPBCorporationChangedNotifyInstance;
}
- (NSArray *)corporations {
  return corporationsArray;
}
- (PBCorporation*)corporationsAtIndex:(NSUInteger)index {
  return [corporationsArray objectAtIndex:index];
}
- (NSArray *)departments {
  return departmentsArray;
}
- (PBDepartment*)departmentsAtIndex:(NSUInteger)index {
  return [departmentsArray objectAtIndex:index];
}
- (NSArray *)workers {
  return workersArray;
}
- (PBWorker*)workersAtIndex:(NSUInteger)index {
  return [workersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.corporationsArray enumerateObjectsUsingBlock:^(PBCorporation *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.departmentsArray enumerateObjectsUsingBlock:^(PBDepartment *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.workersArray enumerateObjectsUsingBlock:^(PBWorker *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.corporationsArray enumerateObjectsUsingBlock:^(PBCorporation *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  [self.departmentsArray enumerateObjectsUsingBlock:^(PBDepartment *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  [self.workersArray enumerateObjectsUsingBlock:^(PBWorker *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBCorporationChangedNotify*) parseFromData:(NSData*) data {
  return (PBCorporationChangedNotify*)[[[PBCorporationChangedNotify builder] mergeFromData:data] build];
}
+ (PBCorporationChangedNotify*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBCorporationChangedNotify*)[[[PBCorporationChangedNotify builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBCorporationChangedNotify*) parseFromInputStream:(NSInputStream*) input {
  return (PBCorporationChangedNotify*)[[[PBCorporationChangedNotify builder] mergeFromInputStream:input] build];
}
+ (PBCorporationChangedNotify*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBCorporationChangedNotify*)[[[PBCorporationChangedNotify builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBCorporationChangedNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBCorporationChangedNotify*)[[[PBCorporationChangedNotify builder] mergeFromCodedInputStream:input] build];
}
+ (PBCorporationChangedNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBCorporationChangedNotify*)[[[PBCorporationChangedNotify builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBCorporationChangedNotifyBuilder*) builder {
  return [[PBCorporationChangedNotifyBuilder alloc] init];
}
+ (PBCorporationChangedNotifyBuilder*) builderWithPrototype:(PBCorporationChangedNotify*) prototype {
  return [[PBCorporationChangedNotify builder] mergeFrom:prototype];
}
- (PBCorporationChangedNotifyBuilder*) builder {
  return [PBCorporationChangedNotify builder];
}
- (PBCorporationChangedNotifyBuilder*) toBuilder {
  return [PBCorporationChangedNotify builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.corporationsArray enumerateObjectsUsingBlock:^(PBCorporation *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"corporations"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.departmentsArray enumerateObjectsUsingBlock:^(PBDepartment *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"departments"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.workersArray enumerateObjectsUsingBlock:^(PBWorker *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"workers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBCorporationChangedNotify class]]) {
    return NO;
  }
  PBCorporationChangedNotify *otherMessage = other;
  return
      [self.corporationsArray isEqualToArray:otherMessage.corporationsArray] &&
      [self.departmentsArray isEqualToArray:otherMessage.departmentsArray] &&
      [self.workersArray isEqualToArray:otherMessage.workersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.corporationsArray enumerateObjectsUsingBlock:^(PBCorporation *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.departmentsArray enumerateObjectsUsingBlock:^(PBDepartment *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.workersArray enumerateObjectsUsingBlock:^(PBWorker *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBCorporationChangedNotifyBuilder()
@property (strong) PBCorporationChangedNotify* result;
@end

@implementation PBCorporationChangedNotifyBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBCorporationChangedNotify alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBCorporationChangedNotifyBuilder*) clear {
  self.result = [[PBCorporationChangedNotify alloc] init];
  return self;
}
- (PBCorporationChangedNotifyBuilder*) clone {
  return [PBCorporationChangedNotify builderWithPrototype:result];
}
- (PBCorporationChangedNotify*) defaultInstance {
  return [PBCorporationChangedNotify defaultInstance];
}
- (PBCorporationChangedNotify*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBCorporationChangedNotify*) buildPartial {
  PBCorporationChangedNotify* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBCorporationChangedNotifyBuilder*) mergeFrom:(PBCorporationChangedNotify*) other {
  if (other == [PBCorporationChangedNotify defaultInstance]) {
    return self;
  }
  if (other.corporationsArray.count > 0) {
    if (result.corporationsArray == nil) {
      result.corporationsArray = [[NSMutableArray alloc] initWithArray:other.corporationsArray];
    } else {
      [result.corporationsArray addObjectsFromArray:other.corporationsArray];
    }
  }
  if (other.departmentsArray.count > 0) {
    if (result.departmentsArray == nil) {
      result.departmentsArray = [[NSMutableArray alloc] initWithArray:other.departmentsArray];
    } else {
      [result.departmentsArray addObjectsFromArray:other.departmentsArray];
    }
  }
  if (other.workersArray.count > 0) {
    if (result.workersArray == nil) {
      result.workersArray = [[NSMutableArray alloc] initWithArray:other.workersArray];
    } else {
      [result.workersArray addObjectsFromArray:other.workersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBCorporationChangedNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBCorporationChangedNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PBCorporationBuilder* subBuilder = [PBCorporation builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCorporations:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PBDepartmentBuilder* subBuilder = [PBDepartment builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDepartments:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        PBWorkerBuilder* subBuilder = [PBWorker builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addWorkers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)corporations {
  return result.corporationsArray;
}
- (PBCorporation*)corporationsAtIndex:(NSUInteger)index {
  return [result corporationsAtIndex:index];
}
- (PBCorporationChangedNotifyBuilder *)addCorporations:(PBCorporation*)value {
  if (result.corporationsArray == nil) {
    result.corporationsArray = [[NSMutableArray alloc]init];
  }
  [result.corporationsArray addObject:value];
  return self;
}
- (PBCorporationChangedNotifyBuilder *)setCorporationsArray:(NSArray *)array {
  result.corporationsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBCorporationChangedNotifyBuilder *)clearCorporations {
  result.corporationsArray = nil;
  return self;
}
- (NSMutableArray *)departments {
  return result.departmentsArray;
}
- (PBDepartment*)departmentsAtIndex:(NSUInteger)index {
  return [result departmentsAtIndex:index];
}
- (PBCorporationChangedNotifyBuilder *)addDepartments:(PBDepartment*)value {
  if (result.departmentsArray == nil) {
    result.departmentsArray = [[NSMutableArray alloc]init];
  }
  [result.departmentsArray addObject:value];
  return self;
}
- (PBCorporationChangedNotifyBuilder *)setDepartmentsArray:(NSArray *)array {
  result.departmentsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBCorporationChangedNotifyBuilder *)clearDepartments {
  result.departmentsArray = nil;
  return self;
}
- (NSMutableArray *)workers {
  return result.workersArray;
}
- (PBWorker*)workersAtIndex:(NSUInteger)index {
  return [result workersAtIndex:index];
}
- (PBCorporationChangedNotifyBuilder *)addWorkers:(PBWorker*)value {
  if (result.workersArray == nil) {
    result.workersArray = [[NSMutableArray alloc]init];
  }
  [result.workersArray addObject:value];
  return self;
}
- (PBCorporationChangedNotifyBuilder *)setWorkersArray:(NSArray *)array {
  result.workersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBCorporationChangedNotifyBuilder *)clearWorkers {
  result.workersArray = nil;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
