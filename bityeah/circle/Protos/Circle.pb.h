// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "Frame.pb.h"
// @@protoc_insertion_point(imports)

@class Int64Array;
@class Int64ArrayBuilder;
@class PBDeleteWaveCommentReq;
@class PBDeleteWaveCommentReqBuilder;
@class PBDeleteWaveCommentResp;
@class PBDeleteWaveCommentRespBuilder;
@class PBDeleteWaveReq;
@class PBDeleteWaveReqBuilder;
@class PBDeleteWaveResp;
@class PBDeleteWaveRespBuilder;
@class PBFetchAllWavesReq;
@class PBFetchAllWavesReqBuilder;
@class PBFetchAllWavesResp;
@class PBFetchAllWavesRespBuilder;
@class PBFetchRedPacketCountReq;
@class PBFetchRedPacketCountReqBuilder;
@class PBFetchRedPacketCountResp;
@class PBFetchRedPacketCountRespBuilder;
@class PBFetchRedPacketMyTicketCountReq;
@class PBFetchRedPacketMyTicketCountReqBuilder;
@class PBFetchRedPacketMyTicketCountResp;
@class PBFetchRedPacketMyTicketCountRespBuilder;
@class PBFetchRedPacketReq;
@class PBFetchRedPacketReqBuilder;
@class PBFetchRedPacketResp;
@class PBFetchRedPacketRespBuilder;
@class PBFetchRedPacketTicketReq;
@class PBFetchRedPacketTicketReqBuilder;
@class PBFetchRedPacketTicketResp;
@class PBFetchRedPacketTicketRespBuilder;
@class PBFetchRedPacketsReq;
@class PBFetchRedPacketsReqBuilder;
@class PBFetchRedPacketsResp;
@class PBFetchRedPacketsRespBuilder;
@class PBFetchUserWaveCountReq;
@class PBFetchUserWaveCountReqBuilder;
@class PBFetchUserWaveCountReqUserStamp;
@class PBFetchUserWaveCountReqUserStampBuilder;
@class PBFetchUserWaveCountResp;
@class PBFetchUserWaveCountRespBuilder;
@class PBFetchUserWaveCountRespUserWaveCount;
@class PBFetchUserWaveCountRespUserWaveCountBuilder;
@class PBFetchWaveCommentIdsReq;
@class PBFetchWaveCommentIdsReqBuilder;
@class PBFetchWaveCommentIdsResp;
@class PBFetchWaveCommentIdsRespBuilder;
@class PBFetchWaveCommentReq;
@class PBFetchWaveCommentReqBuilder;
@class PBFetchWaveCommentResp;
@class PBFetchWaveCommentRespBuilder;
@class PBFetchWaveIdsReq;
@class PBFetchWaveIdsReqBuilder;
@class PBFetchWaveIdsResp;
@class PBFetchWaveIdsRespBuilder;
@class PBFetchWaveIdsRespPBWaveAbstract;
@class PBFetchWaveIdsRespPBWaveAbstractBuilder;
@class PBFetchWavesAndComentsReq;
@class PBFetchWavesAndComentsReqBuilder;
@class PBFetchWavesAndComentsResp;
@class PBFetchWavesAndComentsRespBuilder;
@class PBFetchWavesAndComentsRespPBWaveAbstract;
@class PBFetchWavesAndComentsRespPBWaveAbstractBuilder;
@class PBFetchWavesReq;
@class PBFetchWavesReqBuilder;
@class PBFetchWavesResp;
@class PBFetchWavesRespBuilder;
@class PBFrame;
@class PBFrameBuilder;
@class PBMoneyRedPacket;
@class PBMoneyRedPacketBuilder;
@class PBOrgAttr;
@class PBOrgAttrBuilder;
@class PBRedPacket;
@class PBRedPacketBuilder;
@class PBRedPacketPhysicalItem;
@class PBRedPacketPhysicalItemBuilder;
@class PBRedPacketTicket;
@class PBRedPacketTicketBuilder;
@class PBRobRedPacketReq;
@class PBRobRedPacketReqBuilder;
@class PBRobRedPacketResp;
@class PBRobRedPacketRespBuilder;
@class PBSendRedPacketReq;
@class PBSendRedPacketReqBuilder;
@class PBSendRedPacketResp;
@class PBSendRedPacketRespBuilder;
@class PBSendWaveCommentReq;
@class PBSendWaveCommentReqBuilder;
@class PBSendWaveCommentResp;
@class PBSendWaveCommentRespBuilder;
@class PBSendWaveReq;
@class PBSendWaveReqBuilder;
@class PBSendWaveResp;
@class PBSendWaveRespBuilder;
@class PBSetRedPacketTicketReceivedReq;
@class PBSetRedPacketTicketReceivedReqBuilder;
@class PBSetRedPacketTicketReceivedResp;
@class PBSetRedPacketTicketReceivedRespBuilder;
@class PBSystemSender;
@class PBSystemSenderBuilder;
@class PBWave;
@class PBWaveBody;
@class PBWaveBodyBuilder;
@class PBWaveBodyItem;
@class PBWaveBodyItemBuilder;
@class PBWaveBodyItemLink;
@class PBWaveBodyItemLinkBuilder;
@class PBWaveBodyItemPicture;
@class PBWaveBodyItemPictureBuilder;
@class PBWaveBodyItemVideo;
@class PBWaveBodyItemVideoBuilder;
@class PBWaveBodyItemVoice;
@class PBWaveBodyItemVoiceBuilder;
@class PBWaveBuilder;
@class PBWaveComment;
@class PBWaveCommentBuilder;
@class PBWaveCommentIds;
@class PBWaveCommentIdsBuilder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef NS_ENUM(SInt32, PBRedPacketType) {
  PBRedPacketTypeRedPacketTypeNil = 0,
  PBRedPacketTypeRedPacketTypeMoney = 1,
  PBRedPacketTypeRedPacketTypePhysical = 2,
};

BOOL PBRedPacketTypeIsValidValue(PBRedPacketType value);

typedef NS_ENUM(SInt32, PBWaveBodyItemType) {
  PBWaveBodyItemTypeTypeText = 1,
  PBWaveBodyItemTypeTypePicture = 2,
  PBWaveBodyItemTypeTypeExpression = 3,
  PBWaveBodyItemTypeTypeVoice = 4,
  PBWaveBodyItemTypeTypeVideo = 5,
  PBWaveBodyItemTypeTypeLink = 6,
};

BOOL PBWaveBodyItemTypeIsValidValue(PBWaveBodyItemType value);

typedef NS_ENUM(SInt32, PBWaveBodyItemLinkType) {
  PBWaveBodyItemLinkTypeTypeCommon = 1,
  PBWaveBodyItemLinkTypeTypeBigPicture = 2,
};

BOOL PBWaveBodyItemLinkTypeIsValidValue(PBWaveBodyItemLinkType value);

typedef NS_ENUM(SInt32, PBOrgAttrOrgType) {
  PBOrgAttrOrgTypeOrgTypeCorp = 1,
  PBOrgAttrOrgTypeOrgTypePark = 2,
};

BOOL PBOrgAttrOrgTypeIsValidValue(PBOrgAttrOrgType value);

typedef NS_ENUM(SInt32, PBSystemSenderType) {
  PBSystemSenderTypeTypeCommon = 1,
  PBSystemSenderTypeTypePark = 2,
  PBSystemSenderTypeTypePlatform = 3,
};

BOOL PBSystemSenderTypeIsValidValue(PBSystemSenderType value);

typedef NS_ENUM(SInt32, PBWaveType) {
  PBWaveTypeTypeNil = -1,
  PBWaveTypeTypeCommon = 0,
  PBWaveTypeTypeNews = 1,
  PBWaveTypeTypeRedPacket = 2,
  PBWaveTypeTypeNotice = 3,
  PBWaveTypeTypeActivity = 4,
  PBWaveTypeTypeLink = 5,
};

BOOL PBWaveTypeIsValidValue(PBWaveType value);

typedef NS_ENUM(SInt32, PBWaveCommentType) {
  PBWaveCommentTypeTypeLike = 1,
  PBWaveCommentTypeTypeComment = 2,
};

BOOL PBWaveCommentTypeIsValidValue(PBWaveCommentType value);

typedef NS_ENUM(SInt32, PBFetchRedPacketReqRedPacketStatus) {
  PBFetchRedPacketReqRedPacketStatusRedPacketStatusNil = 0,
  PBFetchRedPacketReqRedPacketStatusRedPacketStatusRobbing = 1,
  PBFetchRedPacketReqRedPacketStatusRedPacketStatusRobbingOut = 2,
  PBFetchRedPacketReqRedPacketStatusRedPacketStatusWaitRob = 3,
};

BOOL PBFetchRedPacketReqRedPacketStatusIsValidValue(PBFetchRedPacketReqRedPacketStatus value);

typedef NS_ENUM(SInt32, PBFetchRedPacketMyTicketCountReqRedPacketStatus) {
  PBFetchRedPacketMyTicketCountReqRedPacketStatusRedPacketStatusNil = 0,
  PBFetchRedPacketMyTicketCountReqRedPacketStatusRedPacketStatusRobbing = 1,
  PBFetchRedPacketMyTicketCountReqRedPacketStatusRedPacketStatusRobbingOut = 2,
  PBFetchRedPacketMyTicketCountReqRedPacketStatusRedPacketStatusWaitRob = 3,
};

BOOL PBFetchRedPacketMyTicketCountReqRedPacketStatusIsValidValue(PBFetchRedPacketMyTicketCountReqRedPacketStatus value);

typedef NS_ENUM(SInt32, PBFetchRedPacketCountReqClientType) {
  PBFetchRedPacketCountReqClientTypeTypePhp = 1,
  PBFetchRedPacketCountReqClientTypeTypeMobile = 2,
};

BOOL PBFetchRedPacketCountReqClientTypeIsValidValue(PBFetchRedPacketCountReqClientType value);

typedef NS_ENUM(SInt32, PBFetchAllWavesReqPublishType) {
  PBFetchAllWavesReqPublishTypeTypeAll = 1,
  PBFetchAllWavesReqPublishTypeTypeNews = 2,
  PBFetchAllWavesReqPublishTypeTypeWave = 3,
  PBFetchAllWavesReqPublishTypeTypeRedPacket = 4,
  PBFetchAllWavesReqPublishTypeTypeNotice = 5,
};

BOOL PBFetchAllWavesReqPublishTypeIsValidValue(PBFetchAllWavesReqPublishType value);

typedef NS_ENUM(SInt32, PBFetchAllWavesReqOrderType) {
  PBFetchAllWavesReqOrderTypeTypeTime = 1,
  PBFetchAllWavesReqOrderTypeTypeComment = 2,
  PBFetchAllWavesReqOrderTypeTypeLike = 3,
};

BOOL PBFetchAllWavesReqOrderTypeIsValidValue(PBFetchAllWavesReqOrderType value);


@interface CircleRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
+ (id<PBExtensionField>) sendWaveReq;
+ (id<PBExtensionField>) sendWaveResp;
+ (id<PBExtensionField>) sendWaveCommentReq;
+ (id<PBExtensionField>) sendWaveCommentResp;
+ (id<PBExtensionField>) fetchWaveCommentReq;
+ (id<PBExtensionField>) fetchWaveCommentResp;
+ (id<PBExtensionField>) deleteWaveReq;
+ (id<PBExtensionField>) deleteWaveResp;
+ (id<PBExtensionField>) deleteWaveCommentReq;
+ (id<PBExtensionField>) deleteWaveCommentResp;
+ (id<PBExtensionField>) fetchWavesReq;
+ (id<PBExtensionField>) fetchWavesResp;
+ (id<PBExtensionField>) fetchWaveIdsReq;
+ (id<PBExtensionField>) fetchWaveIdsResp;
+ (id<PBExtensionField>) fetchWaveCommentIdsReq;
+ (id<PBExtensionField>) fetchWaveCommentIdsResp;
+ (id<PBExtensionField>) fetchUserWaveCountReq;
+ (id<PBExtensionField>) fetchUserWaveCountResp;
+ (id<PBExtensionField>) fetchWavesAndComentsReq;
+ (id<PBExtensionField>) fetchWavesAndComentsResp;
+ (id<PBExtensionField>) sendRedPacketReq;
+ (id<PBExtensionField>) sendRedPacketResp;
+ (id<PBExtensionField>) robRedPacketReq;
+ (id<PBExtensionField>) robRedPacketResp;
+ (id<PBExtensionField>) fetchRedPacketReq;
+ (id<PBExtensionField>) fetchRedPacketResp;
+ (id<PBExtensionField>) fetchRedPacketTicketReq;
+ (id<PBExtensionField>) fetchRedPacketTicketResp;
+ (id<PBExtensionField>) setRedPacketTicketReceivedReq;
+ (id<PBExtensionField>) setRedPacketTicketReceivedResp;
+ (id<PBExtensionField>) fetchRedPacketsReq;
+ (id<PBExtensionField>) fetchRedPacketsResp;
+ (id<PBExtensionField>) fetchRedPacketsCountReq;
+ (id<PBExtensionField>) fetchRedPacketCountResp;
+ (id<PBExtensionField>) fetchAllWavesReq;
+ (id<PBExtensionField>) fetchAllWavesResp;
+ (id<PBExtensionField>) fetchRedPacketMyTicketCountReq;
+ (id<PBExtensionField>) fetchRedPacketMyTicketCountResp;
@end

@interface PBWaveBody : PBGeneratedMessage {
@private
  NSMutableArray * itemsArray;
}
@property (readonly, strong) NSArray * items;
- (PBWaveBodyItem*)itemsAtIndex:(NSUInteger)index;

+ (PBWaveBody*) defaultInstance;
- (PBWaveBody*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBWaveBodyBuilder*) builder;
+ (PBWaveBodyBuilder*) builder;
+ (PBWaveBodyBuilder*) builderWithPrototype:(PBWaveBody*) prototype;
- (PBWaveBodyBuilder*) toBuilder;

+ (PBWaveBody*) parseFromData:(NSData*) data;
+ (PBWaveBody*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBWaveBody*) parseFromInputStream:(NSInputStream*) input;
+ (PBWaveBody*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBWaveBody*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBWaveBody*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBWaveBodyItem : PBGeneratedMessage {
@private
  BOOL hasText_:1;
  BOOL hasPictureUrl_:1;
  BOOL hasVoice_:1;
  BOOL hasVideo_:1;
  BOOL hasLink_:1;
  BOOL hasPicture_:1;
  BOOL hasType_:1;
  BOOL hasIndex_:1;
  BOOL hasExpressionId_:1;
  NSString* text;
  NSString* pictureUrl;
  PBWaveBodyItemVoice* voice;
  PBWaveBodyItemVideo* video;
  PBWaveBodyItemLink* link;
  PBWaveBodyItemPicture* picture;
  PBWaveBodyItemType type;
  SInt32 index;
  SInt32 expressionId;
}
- (BOOL) hasIndex;
- (BOOL) hasType;
- (BOOL) hasText;
- (BOOL) hasPictureUrl;
- (BOOL) hasExpressionId;
- (BOOL) hasVoice;
- (BOOL) hasVideo;
- (BOOL) hasLink;
- (BOOL) hasPicture;
@property (readonly) SInt32 index;
@property (readonly) PBWaveBodyItemType type;
@property (readonly, strong) NSString* text;
@property (readonly, strong) NSString* pictureUrl;
@property (readonly) SInt32 expressionId;
@property (readonly, strong) PBWaveBodyItemVoice* voice;
@property (readonly, strong) PBWaveBodyItemVideo* video;
@property (readonly, strong) PBWaveBodyItemLink* link;
@property (readonly, strong) PBWaveBodyItemPicture* picture;

+ (PBWaveBodyItem*) defaultInstance;
- (PBWaveBodyItem*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBWaveBodyItemBuilder*) builder;
+ (PBWaveBodyItemBuilder*) builder;
+ (PBWaveBodyItemBuilder*) builderWithPrototype:(PBWaveBodyItem*) prototype;
- (PBWaveBodyItemBuilder*) toBuilder;

+ (PBWaveBodyItem*) parseFromData:(NSData*) data;
+ (PBWaveBodyItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBWaveBodyItem*) parseFromInputStream:(NSInputStream*) input;
+ (PBWaveBodyItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBWaveBodyItem*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBWaveBodyItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBWaveBodyItemVoice : PBGeneratedMessage {
@private
  BOOL hasUrl_:1;
  BOOL hasDuration_:1;
  NSString* url;
  SInt32 duration;
}
- (BOOL) hasUrl;
- (BOOL) hasDuration;
@property (readonly, strong) NSString* url;
@property (readonly) SInt32 duration;

+ (PBWaveBodyItemVoice*) defaultInstance;
- (PBWaveBodyItemVoice*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBWaveBodyItemVoiceBuilder*) builder;
+ (PBWaveBodyItemVoiceBuilder*) builder;
+ (PBWaveBodyItemVoiceBuilder*) builderWithPrototype:(PBWaveBodyItemVoice*) prototype;
- (PBWaveBodyItemVoiceBuilder*) toBuilder;

+ (PBWaveBodyItemVoice*) parseFromData:(NSData*) data;
+ (PBWaveBodyItemVoice*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBWaveBodyItemVoice*) parseFromInputStream:(NSInputStream*) input;
+ (PBWaveBodyItemVoice*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBWaveBodyItemVoice*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBWaveBodyItemVoice*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBWaveBodyItemVoiceBuilder : PBGeneratedMessageBuilder {
@private
  PBWaveBodyItemVoice* result;
}

- (PBWaveBodyItemVoice*) defaultInstance;

- (PBWaveBodyItemVoiceBuilder*) clear;
- (PBWaveBodyItemVoiceBuilder*) clone;

- (PBWaveBodyItemVoice*) build;
- (PBWaveBodyItemVoice*) buildPartial;

- (PBWaveBodyItemVoiceBuilder*) mergeFrom:(PBWaveBodyItemVoice*) other;
- (PBWaveBodyItemVoiceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBWaveBodyItemVoiceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUrl;
- (NSString*) url;
- (PBWaveBodyItemVoiceBuilder*) setUrl:(NSString*) value;
- (PBWaveBodyItemVoiceBuilder*) clearUrl;

- (BOOL) hasDuration;
- (SInt32) duration;
- (PBWaveBodyItemVoiceBuilder*) setDuration:(SInt32) value;
- (PBWaveBodyItemVoiceBuilder*) clearDuration;
@end

@interface PBWaveBodyItemVideo : PBGeneratedMessage {
@private
  BOOL hasUrl_:1;
  BOOL hasDuration_:1;
  NSString* url;
  SInt32 duration;
}
- (BOOL) hasUrl;
- (BOOL) hasDuration;
@property (readonly, strong) NSString* url;
@property (readonly) SInt32 duration;

+ (PBWaveBodyItemVideo*) defaultInstance;
- (PBWaveBodyItemVideo*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBWaveBodyItemVideoBuilder*) builder;
+ (PBWaveBodyItemVideoBuilder*) builder;
+ (PBWaveBodyItemVideoBuilder*) builderWithPrototype:(PBWaveBodyItemVideo*) prototype;
- (PBWaveBodyItemVideoBuilder*) toBuilder;

+ (PBWaveBodyItemVideo*) parseFromData:(NSData*) data;
+ (PBWaveBodyItemVideo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBWaveBodyItemVideo*) parseFromInputStream:(NSInputStream*) input;
+ (PBWaveBodyItemVideo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBWaveBodyItemVideo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBWaveBodyItemVideo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBWaveBodyItemVideoBuilder : PBGeneratedMessageBuilder {
@private
  PBWaveBodyItemVideo* result;
}

- (PBWaveBodyItemVideo*) defaultInstance;

- (PBWaveBodyItemVideoBuilder*) clear;
- (PBWaveBodyItemVideoBuilder*) clone;

- (PBWaveBodyItemVideo*) build;
- (PBWaveBodyItemVideo*) buildPartial;

- (PBWaveBodyItemVideoBuilder*) mergeFrom:(PBWaveBodyItemVideo*) other;
- (PBWaveBodyItemVideoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBWaveBodyItemVideoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUrl;
- (NSString*) url;
- (PBWaveBodyItemVideoBuilder*) setUrl:(NSString*) value;
- (PBWaveBodyItemVideoBuilder*) clearUrl;

- (BOOL) hasDuration;
- (SInt32) duration;
- (PBWaveBodyItemVideoBuilder*) setDuration:(SInt32) value;
- (PBWaveBodyItemVideoBuilder*) clearDuration;
@end

@interface PBWaveBodyItemLink : PBGeneratedMessage {
@private
  BOOL hasUrl_:1;
  BOOL hasPictureUrl_:1;
  BOOL hasTitle_:1;
  BOOL hasType_:1;
  NSString* url;
  NSString* pictureUrl;
  NSString* title;
  PBWaveBodyItemLinkType type;
}
- (BOOL) hasUrl;
- (BOOL) hasPictureUrl;
- (BOOL) hasTitle;
- (BOOL) hasType;
@property (readonly, strong) NSString* url;
@property (readonly, strong) NSString* pictureUrl;
@property (readonly, strong) NSString* title;
@property (readonly) PBWaveBodyItemLinkType type;

+ (PBWaveBodyItemLink*) defaultInstance;
- (PBWaveBodyItemLink*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBWaveBodyItemLinkBuilder*) builder;
+ (PBWaveBodyItemLinkBuilder*) builder;
+ (PBWaveBodyItemLinkBuilder*) builderWithPrototype:(PBWaveBodyItemLink*) prototype;
- (PBWaveBodyItemLinkBuilder*) toBuilder;

+ (PBWaveBodyItemLink*) parseFromData:(NSData*) data;
+ (PBWaveBodyItemLink*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBWaveBodyItemLink*) parseFromInputStream:(NSInputStream*) input;
+ (PBWaveBodyItemLink*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBWaveBodyItemLink*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBWaveBodyItemLink*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBWaveBodyItemLinkBuilder : PBGeneratedMessageBuilder {
@private
  PBWaveBodyItemLink* result;
}

- (PBWaveBodyItemLink*) defaultInstance;

- (PBWaveBodyItemLinkBuilder*) clear;
- (PBWaveBodyItemLinkBuilder*) clone;

- (PBWaveBodyItemLink*) build;
- (PBWaveBodyItemLink*) buildPartial;

- (PBWaveBodyItemLinkBuilder*) mergeFrom:(PBWaveBodyItemLink*) other;
- (PBWaveBodyItemLinkBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBWaveBodyItemLinkBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUrl;
- (NSString*) url;
- (PBWaveBodyItemLinkBuilder*) setUrl:(NSString*) value;
- (PBWaveBodyItemLinkBuilder*) clearUrl;

- (BOOL) hasPictureUrl;
- (NSString*) pictureUrl;
- (PBWaveBodyItemLinkBuilder*) setPictureUrl:(NSString*) value;
- (PBWaveBodyItemLinkBuilder*) clearPictureUrl;

- (BOOL) hasTitle;
- (NSString*) title;
- (PBWaveBodyItemLinkBuilder*) setTitle:(NSString*) value;
- (PBWaveBodyItemLinkBuilder*) clearTitle;

- (BOOL) hasType;
- (PBWaveBodyItemLinkType) type;
- (PBWaveBodyItemLinkBuilder*) setType:(PBWaveBodyItemLinkType) value;
- (PBWaveBodyItemLinkBuilder*) clearType;
@end

@interface PBWaveBodyItemPicture : PBGeneratedMessage {
@private
  BOOL hasPictureUrl_:1;
  BOOL hasWidth_:1;
  BOOL hasHeight_:1;
  NSString* pictureUrl;
  SInt32 width;
  SInt32 height;
}
- (BOOL) hasPictureUrl;
- (BOOL) hasWidth;
- (BOOL) hasHeight;
@property (readonly, strong) NSString* pictureUrl;
@property (readonly) SInt32 width;
@property (readonly) SInt32 height;

+ (PBWaveBodyItemPicture*) defaultInstance;
- (PBWaveBodyItemPicture*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBWaveBodyItemPictureBuilder*) builder;
+ (PBWaveBodyItemPictureBuilder*) builder;
+ (PBWaveBodyItemPictureBuilder*) builderWithPrototype:(PBWaveBodyItemPicture*) prototype;
- (PBWaveBodyItemPictureBuilder*) toBuilder;

+ (PBWaveBodyItemPicture*) parseFromData:(NSData*) data;
+ (PBWaveBodyItemPicture*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBWaveBodyItemPicture*) parseFromInputStream:(NSInputStream*) input;
+ (PBWaveBodyItemPicture*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBWaveBodyItemPicture*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBWaveBodyItemPicture*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBWaveBodyItemPictureBuilder : PBGeneratedMessageBuilder {
@private
  PBWaveBodyItemPicture* result;
}

- (PBWaveBodyItemPicture*) defaultInstance;

- (PBWaveBodyItemPictureBuilder*) clear;
- (PBWaveBodyItemPictureBuilder*) clone;

- (PBWaveBodyItemPicture*) build;
- (PBWaveBodyItemPicture*) buildPartial;

- (PBWaveBodyItemPictureBuilder*) mergeFrom:(PBWaveBodyItemPicture*) other;
- (PBWaveBodyItemPictureBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBWaveBodyItemPictureBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPictureUrl;
- (NSString*) pictureUrl;
- (PBWaveBodyItemPictureBuilder*) setPictureUrl:(NSString*) value;
- (PBWaveBodyItemPictureBuilder*) clearPictureUrl;

- (BOOL) hasWidth;
- (SInt32) width;
- (PBWaveBodyItemPictureBuilder*) setWidth:(SInt32) value;
- (PBWaveBodyItemPictureBuilder*) clearWidth;

- (BOOL) hasHeight;
- (SInt32) height;
- (PBWaveBodyItemPictureBuilder*) setHeight:(SInt32) value;
- (PBWaveBodyItemPictureBuilder*) clearHeight;
@end

@interface PBWaveBodyItemBuilder : PBGeneratedMessageBuilder {
@private
  PBWaveBodyItem* result;
}

- (PBWaveBodyItem*) defaultInstance;

- (PBWaveBodyItemBuilder*) clear;
- (PBWaveBodyItemBuilder*) clone;

- (PBWaveBodyItem*) build;
- (PBWaveBodyItem*) buildPartial;

- (PBWaveBodyItemBuilder*) mergeFrom:(PBWaveBodyItem*) other;
- (PBWaveBodyItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBWaveBodyItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasIndex;
- (SInt32) index;
- (PBWaveBodyItemBuilder*) setIndex:(SInt32) value;
- (PBWaveBodyItemBuilder*) clearIndex;

- (BOOL) hasType;
- (PBWaveBodyItemType) type;
- (PBWaveBodyItemBuilder*) setType:(PBWaveBodyItemType) value;
- (PBWaveBodyItemBuilder*) clearType;

- (BOOL) hasText;
- (NSString*) text;
- (PBWaveBodyItemBuilder*) setText:(NSString*) value;
- (PBWaveBodyItemBuilder*) clearText;

- (BOOL) hasPictureUrl;
- (NSString*) pictureUrl;
- (PBWaveBodyItemBuilder*) setPictureUrl:(NSString*) value;
- (PBWaveBodyItemBuilder*) clearPictureUrl;

- (BOOL) hasExpressionId;
- (SInt32) expressionId;
- (PBWaveBodyItemBuilder*) setExpressionId:(SInt32) value;
- (PBWaveBodyItemBuilder*) clearExpressionId;

- (BOOL) hasVoice;
- (PBWaveBodyItemVoice*) voice;
- (PBWaveBodyItemBuilder*) setVoice:(PBWaveBodyItemVoice*) value;
- (PBWaveBodyItemBuilder*) setVoiceBuilder:(PBWaveBodyItemVoiceBuilder*) builderForValue;
- (PBWaveBodyItemBuilder*) mergeVoice:(PBWaveBodyItemVoice*) value;
- (PBWaveBodyItemBuilder*) clearVoice;

- (BOOL) hasVideo;
- (PBWaveBodyItemVideo*) video;
- (PBWaveBodyItemBuilder*) setVideo:(PBWaveBodyItemVideo*) value;
- (PBWaveBodyItemBuilder*) setVideoBuilder:(PBWaveBodyItemVideoBuilder*) builderForValue;
- (PBWaveBodyItemBuilder*) mergeVideo:(PBWaveBodyItemVideo*) value;
- (PBWaveBodyItemBuilder*) clearVideo;

- (BOOL) hasLink;
- (PBWaveBodyItemLink*) link;
- (PBWaveBodyItemBuilder*) setLink:(PBWaveBodyItemLink*) value;
- (PBWaveBodyItemBuilder*) setLinkBuilder:(PBWaveBodyItemLinkBuilder*) builderForValue;
- (PBWaveBodyItemBuilder*) mergeLink:(PBWaveBodyItemLink*) value;
- (PBWaveBodyItemBuilder*) clearLink;

- (BOOL) hasPicture;
- (PBWaveBodyItemPicture*) picture;
- (PBWaveBodyItemBuilder*) setPicture:(PBWaveBodyItemPicture*) value;
- (PBWaveBodyItemBuilder*) setPictureBuilder:(PBWaveBodyItemPictureBuilder*) builderForValue;
- (PBWaveBodyItemBuilder*) mergePicture:(PBWaveBodyItemPicture*) value;
- (PBWaveBodyItemBuilder*) clearPicture;
@end

@interface PBWaveBodyBuilder : PBGeneratedMessageBuilder {
@private
  PBWaveBody* result;
}

- (PBWaveBody*) defaultInstance;

- (PBWaveBodyBuilder*) clear;
- (PBWaveBodyBuilder*) clone;

- (PBWaveBody*) build;
- (PBWaveBody*) buildPartial;

- (PBWaveBodyBuilder*) mergeFrom:(PBWaveBody*) other;
- (PBWaveBodyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBWaveBodyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)items;
- (PBWaveBodyItem*)itemsAtIndex:(NSUInteger)index;
- (PBWaveBodyBuilder *)addItems:(PBWaveBodyItem*)value;
- (PBWaveBodyBuilder *)setItemsArray:(NSArray *)array;
- (PBWaveBodyBuilder *)clearItems;
@end

@interface PBOrgAttr : PBGeneratedMessage {
@private
  BOOL hasType_:1;
  BOOL hasOrgId_:1;
  PBOrgAttrOrgType type;
  SInt64 orgId;
}
- (BOOL) hasOrgId;
- (BOOL) hasType;
@property (readonly) SInt64 orgId;
@property (readonly) PBOrgAttrOrgType type;

+ (PBOrgAttr*) defaultInstance;
- (PBOrgAttr*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBOrgAttrBuilder*) builder;
+ (PBOrgAttrBuilder*) builder;
+ (PBOrgAttrBuilder*) builderWithPrototype:(PBOrgAttr*) prototype;
- (PBOrgAttrBuilder*) toBuilder;

+ (PBOrgAttr*) parseFromData:(NSData*) data;
+ (PBOrgAttr*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBOrgAttr*) parseFromInputStream:(NSInputStream*) input;
+ (PBOrgAttr*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBOrgAttr*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBOrgAttr*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBOrgAttrBuilder : PBGeneratedMessageBuilder {
@private
  PBOrgAttr* result;
}

- (PBOrgAttr*) defaultInstance;

- (PBOrgAttrBuilder*) clear;
- (PBOrgAttrBuilder*) clone;

- (PBOrgAttr*) build;
- (PBOrgAttr*) buildPartial;

- (PBOrgAttrBuilder*) mergeFrom:(PBOrgAttr*) other;
- (PBOrgAttrBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBOrgAttrBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOrgId;
- (SInt64) orgId;
- (PBOrgAttrBuilder*) setOrgId:(SInt64) value;
- (PBOrgAttrBuilder*) clearOrgId;

- (BOOL) hasType;
- (PBOrgAttrOrgType) type;
- (PBOrgAttrBuilder*) setType:(PBOrgAttrOrgType) value;
- (PBOrgAttrBuilder*) clearType;
@end

@interface PBSystemSender : PBGeneratedMessage {
@private
  BOOL hasName_:1;
  BOOL hasAvatarUrl_:1;
  BOOL hasType_:1;
  BOOL hasId_:1;
  NSString* name;
  NSString* avatarUrl;
  PBSystemSenderType type;
  SInt64 id;
}
- (BOOL) hasId;
- (BOOL) hasName;
- (BOOL) hasAvatarUrl;
- (BOOL) hasType;
@property (readonly) SInt64 id;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* avatarUrl;
@property (readonly) PBSystemSenderType type;

+ (PBSystemSender*) defaultInstance;
- (PBSystemSender*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBSystemSenderBuilder*) builder;
+ (PBSystemSenderBuilder*) builder;
+ (PBSystemSenderBuilder*) builderWithPrototype:(PBSystemSender*) prototype;
- (PBSystemSenderBuilder*) toBuilder;

+ (PBSystemSender*) parseFromData:(NSData*) data;
+ (PBSystemSender*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSystemSender*) parseFromInputStream:(NSInputStream*) input;
+ (PBSystemSender*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSystemSender*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBSystemSender*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBSystemSenderBuilder : PBGeneratedMessageBuilder {
@private
  PBSystemSender* result;
}

- (PBSystemSender*) defaultInstance;

- (PBSystemSenderBuilder*) clear;
- (PBSystemSenderBuilder*) clone;

- (PBSystemSender*) build;
- (PBSystemSender*) buildPartial;

- (PBSystemSenderBuilder*) mergeFrom:(PBSystemSender*) other;
- (PBSystemSenderBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBSystemSenderBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (SInt64) id;
- (PBSystemSenderBuilder*) setId:(SInt64) value;
- (PBSystemSenderBuilder*) clearId;

- (BOOL) hasName;
- (NSString*) name;
- (PBSystemSenderBuilder*) setName:(NSString*) value;
- (PBSystemSenderBuilder*) clearName;

- (BOOL) hasAvatarUrl;
- (NSString*) avatarUrl;
- (PBSystemSenderBuilder*) setAvatarUrl:(NSString*) value;
- (PBSystemSenderBuilder*) clearAvatarUrl;

- (BOOL) hasType;
- (PBSystemSenderType) type;
- (PBSystemSenderBuilder*) setType:(PBSystemSenderType) value;
- (PBSystemSenderBuilder*) clearType;
@end

@interface PBWave : PBGeneratedMessage {
@private
  BOOL hasSystemSender_:1;
  BOOL hasBody_:1;
  BOOL hasOrgAttr_:1;
  BOOL hasRedPacket_:1;
  BOOL hasType_:1;
  BOOL hasId_:1;
  BOOL hasSenderPassportId_:1;
  BOOL hasCreatedAt_:1;
  BOOL hasUpdatedAt_:1;
  BOOL hasDeletedAt_:1;
  PBSystemSender* systemSender;
  PBWaveBody* body;
  PBOrgAttr* orgAttr;
  PBRedPacket* redPacket;
  PBWaveType type;
  SInt64 id;
  SInt64 senderPassportId;
  SInt64 createdAt;
  SInt64 updatedAt;
  SInt64 deletedAt;
}
- (BOOL) hasId;
- (BOOL) hasSenderPassportId;
- (BOOL) hasSystemSender;
- (BOOL) hasBody;
- (BOOL) hasOrgAttr;
- (BOOL) hasType;
- (BOOL) hasRedPacket;
- (BOOL) hasCreatedAt;
- (BOOL) hasUpdatedAt;
- (BOOL) hasDeletedAt;
@property (readonly) SInt64 id;
@property (readonly) SInt64 senderPassportId;
@property (readonly, strong) PBSystemSender* systemSender;
@property (readonly, strong) PBWaveBody* body;
@property (readonly, strong) PBOrgAttr* orgAttr;
@property (readonly) PBWaveType type;
@property (readonly, strong) PBRedPacket* redPacket;
@property (readonly) SInt64 createdAt;
@property (readonly) SInt64 updatedAt;
@property (readonly) SInt64 deletedAt;

+ (PBWave*) defaultInstance;
- (PBWave*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBWaveBuilder*) builder;
+ (PBWaveBuilder*) builder;
+ (PBWaveBuilder*) builderWithPrototype:(PBWave*) prototype;
- (PBWaveBuilder*) toBuilder;

+ (PBWave*) parseFromData:(NSData*) data;
+ (PBWave*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBWave*) parseFromInputStream:(NSInputStream*) input;
+ (PBWave*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBWave*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBWave*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBWaveBuilder : PBGeneratedMessageBuilder {
@private
  PBWave* result;
}

- (PBWave*) defaultInstance;

- (PBWaveBuilder*) clear;
- (PBWaveBuilder*) clone;

- (PBWave*) build;
- (PBWave*) buildPartial;

- (PBWaveBuilder*) mergeFrom:(PBWave*) other;
- (PBWaveBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBWaveBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (SInt64) id;
- (PBWaveBuilder*) setId:(SInt64) value;
- (PBWaveBuilder*) clearId;

- (BOOL) hasSenderPassportId;
- (SInt64) senderPassportId;
- (PBWaveBuilder*) setSenderPassportId:(SInt64) value;
- (PBWaveBuilder*) clearSenderPassportId;

- (BOOL) hasSystemSender;
- (PBSystemSender*) systemSender;
- (PBWaveBuilder*) setSystemSender:(PBSystemSender*) value;
- (PBWaveBuilder*) setSystemSenderBuilder:(PBSystemSenderBuilder*) builderForValue;
- (PBWaveBuilder*) mergeSystemSender:(PBSystemSender*) value;
- (PBWaveBuilder*) clearSystemSender;

- (BOOL) hasBody;
- (PBWaveBody*) body;
- (PBWaveBuilder*) setBody:(PBWaveBody*) value;
- (PBWaveBuilder*) setBodyBuilder:(PBWaveBodyBuilder*) builderForValue;
- (PBWaveBuilder*) mergeBody:(PBWaveBody*) value;
- (PBWaveBuilder*) clearBody;

- (BOOL) hasOrgAttr;
- (PBOrgAttr*) orgAttr;
- (PBWaveBuilder*) setOrgAttr:(PBOrgAttr*) value;
- (PBWaveBuilder*) setOrgAttrBuilder:(PBOrgAttrBuilder*) builderForValue;
- (PBWaveBuilder*) mergeOrgAttr:(PBOrgAttr*) value;
- (PBWaveBuilder*) clearOrgAttr;

- (BOOL) hasType;
- (PBWaveType) type;
- (PBWaveBuilder*) setType:(PBWaveType) value;
- (PBWaveBuilder*) clearType;

- (BOOL) hasRedPacket;
- (PBRedPacket*) redPacket;
- (PBWaveBuilder*) setRedPacket:(PBRedPacket*) value;
- (PBWaveBuilder*) setRedPacketBuilder:(PBRedPacketBuilder*) builderForValue;
- (PBWaveBuilder*) mergeRedPacket:(PBRedPacket*) value;
- (PBWaveBuilder*) clearRedPacket;

- (BOOL) hasCreatedAt;
- (SInt64) createdAt;
- (PBWaveBuilder*) setCreatedAt:(SInt64) value;
- (PBWaveBuilder*) clearCreatedAt;

- (BOOL) hasUpdatedAt;
- (SInt64) updatedAt;
- (PBWaveBuilder*) setUpdatedAt:(SInt64) value;
- (PBWaveBuilder*) clearUpdatedAt;

- (BOOL) hasDeletedAt;
- (SInt64) deletedAt;
- (PBWaveBuilder*) setDeletedAt:(SInt64) value;
- (PBWaveBuilder*) clearDeletedAt;
@end

@interface PBWaveComment : PBGeneratedMessage {
@private
  BOOL hasBody_:1;
  BOOL hasType_:1;
  BOOL hasId_:1;
  BOOL hasWaveId_:1;
  BOOL hasFromPassportId_:1;
  BOOL hasToPassportId_:1;
  BOOL hasCreatedAt_:1;
  BOOL hasUpdatedAt_:1;
  BOOL hasDeletedAt_:1;
  PBWaveBody* body;
  PBWaveCommentType type;
  SInt64 id;
  SInt64 waveId;
  SInt64 fromPassportId;
  SInt64 toPassportId;
  SInt64 createdAt;
  SInt64 updatedAt;
  SInt64 deletedAt;
}
- (BOOL) hasId;
- (BOOL) hasWaveId;
- (BOOL) hasFromPassportId;
- (BOOL) hasToPassportId;
- (BOOL) hasType;
- (BOOL) hasBody;
- (BOOL) hasCreatedAt;
- (BOOL) hasUpdatedAt;
- (BOOL) hasDeletedAt;
@property (readonly) SInt64 id;
@property (readonly) SInt64 waveId;
@property (readonly) SInt64 fromPassportId;
@property (readonly) SInt64 toPassportId;
@property (readonly) PBWaveCommentType type;
@property (readonly, strong) PBWaveBody* body;
@property (readonly) SInt64 createdAt;
@property (readonly) SInt64 updatedAt;
@property (readonly) SInt64 deletedAt;

+ (PBWaveComment*) defaultInstance;
- (PBWaveComment*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBWaveCommentBuilder*) builder;
+ (PBWaveCommentBuilder*) builder;
+ (PBWaveCommentBuilder*) builderWithPrototype:(PBWaveComment*) prototype;
- (PBWaveCommentBuilder*) toBuilder;

+ (PBWaveComment*) parseFromData:(NSData*) data;
+ (PBWaveComment*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBWaveComment*) parseFromInputStream:(NSInputStream*) input;
+ (PBWaveComment*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBWaveComment*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBWaveComment*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBWaveCommentBuilder : PBGeneratedMessageBuilder {
@private
  PBWaveComment* result;
}

- (PBWaveComment*) defaultInstance;

- (PBWaveCommentBuilder*) clear;
- (PBWaveCommentBuilder*) clone;

- (PBWaveComment*) build;
- (PBWaveComment*) buildPartial;

- (PBWaveCommentBuilder*) mergeFrom:(PBWaveComment*) other;
- (PBWaveCommentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBWaveCommentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (SInt64) id;
- (PBWaveCommentBuilder*) setId:(SInt64) value;
- (PBWaveCommentBuilder*) clearId;

- (BOOL) hasWaveId;
- (SInt64) waveId;
- (PBWaveCommentBuilder*) setWaveId:(SInt64) value;
- (PBWaveCommentBuilder*) clearWaveId;

- (BOOL) hasFromPassportId;
- (SInt64) fromPassportId;
- (PBWaveCommentBuilder*) setFromPassportId:(SInt64) value;
- (PBWaveCommentBuilder*) clearFromPassportId;

- (BOOL) hasToPassportId;
- (SInt64) toPassportId;
- (PBWaveCommentBuilder*) setToPassportId:(SInt64) value;
- (PBWaveCommentBuilder*) clearToPassportId;

- (BOOL) hasType;
- (PBWaveCommentType) type;
- (PBWaveCommentBuilder*) setType:(PBWaveCommentType) value;
- (PBWaveCommentBuilder*) clearType;

- (BOOL) hasBody;
- (PBWaveBody*) body;
- (PBWaveCommentBuilder*) setBody:(PBWaveBody*) value;
- (PBWaveCommentBuilder*) setBodyBuilder:(PBWaveBodyBuilder*) builderForValue;
- (PBWaveCommentBuilder*) mergeBody:(PBWaveBody*) value;
- (PBWaveCommentBuilder*) clearBody;

- (BOOL) hasCreatedAt;
- (SInt64) createdAt;
- (PBWaveCommentBuilder*) setCreatedAt:(SInt64) value;
- (PBWaveCommentBuilder*) clearCreatedAt;

- (BOOL) hasUpdatedAt;
- (SInt64) updatedAt;
- (PBWaveCommentBuilder*) setUpdatedAt:(SInt64) value;
- (PBWaveCommentBuilder*) clearUpdatedAt;

- (BOOL) hasDeletedAt;
- (SInt64) deletedAt;
- (PBWaveCommentBuilder*) setDeletedAt:(SInt64) value;
- (PBWaveCommentBuilder*) clearDeletedAt;
@end

@interface PBFetchUserWaveCountReq : PBGeneratedMessage {
@private
  NSMutableArray * usArray;
}
@property (readonly, strong) NSArray * us;
- (PBFetchUserWaveCountReqUserStamp*)usAtIndex:(NSUInteger)index;

+ (PBFetchUserWaveCountReq*) defaultInstance;
- (PBFetchUserWaveCountReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchUserWaveCountReqBuilder*) builder;
+ (PBFetchUserWaveCountReqBuilder*) builder;
+ (PBFetchUserWaveCountReqBuilder*) builderWithPrototype:(PBFetchUserWaveCountReq*) prototype;
- (PBFetchUserWaveCountReqBuilder*) toBuilder;

+ (PBFetchUserWaveCountReq*) parseFromData:(NSData*) data;
+ (PBFetchUserWaveCountReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchUserWaveCountReq*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchUserWaveCountReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchUserWaveCountReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchUserWaveCountReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchUserWaveCountReqUserStamp : PBGeneratedMessage {
@private
  BOOL hasUid_:1;
  BOOL hasStartTimestamp_:1;
  BOOL hasEndTimestamp_:1;
  SInt64 uid;
  SInt64 startTimestamp;
  SInt64 endTimestamp;
}
- (BOOL) hasUid;
- (BOOL) hasStartTimestamp;
- (BOOL) hasEndTimestamp;
@property (readonly) SInt64 uid;
@property (readonly) SInt64 startTimestamp;
@property (readonly) SInt64 endTimestamp;

+ (PBFetchUserWaveCountReqUserStamp*) defaultInstance;
- (PBFetchUserWaveCountReqUserStamp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchUserWaveCountReqUserStampBuilder*) builder;
+ (PBFetchUserWaveCountReqUserStampBuilder*) builder;
+ (PBFetchUserWaveCountReqUserStampBuilder*) builderWithPrototype:(PBFetchUserWaveCountReqUserStamp*) prototype;
- (PBFetchUserWaveCountReqUserStampBuilder*) toBuilder;

+ (PBFetchUserWaveCountReqUserStamp*) parseFromData:(NSData*) data;
+ (PBFetchUserWaveCountReqUserStamp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchUserWaveCountReqUserStamp*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchUserWaveCountReqUserStamp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchUserWaveCountReqUserStamp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchUserWaveCountReqUserStamp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchUserWaveCountReqUserStampBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchUserWaveCountReqUserStamp* result;
}

- (PBFetchUserWaveCountReqUserStamp*) defaultInstance;

- (PBFetchUserWaveCountReqUserStampBuilder*) clear;
- (PBFetchUserWaveCountReqUserStampBuilder*) clone;

- (PBFetchUserWaveCountReqUserStamp*) build;
- (PBFetchUserWaveCountReqUserStamp*) buildPartial;

- (PBFetchUserWaveCountReqUserStampBuilder*) mergeFrom:(PBFetchUserWaveCountReqUserStamp*) other;
- (PBFetchUserWaveCountReqUserStampBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchUserWaveCountReqUserStampBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUid;
- (SInt64) uid;
- (PBFetchUserWaveCountReqUserStampBuilder*) setUid:(SInt64) value;
- (PBFetchUserWaveCountReqUserStampBuilder*) clearUid;

- (BOOL) hasStartTimestamp;
- (SInt64) startTimestamp;
- (PBFetchUserWaveCountReqUserStampBuilder*) setStartTimestamp:(SInt64) value;
- (PBFetchUserWaveCountReqUserStampBuilder*) clearStartTimestamp;

- (BOOL) hasEndTimestamp;
- (SInt64) endTimestamp;
- (PBFetchUserWaveCountReqUserStampBuilder*) setEndTimestamp:(SInt64) value;
- (PBFetchUserWaveCountReqUserStampBuilder*) clearEndTimestamp;
@end

@interface PBFetchUserWaveCountReqBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchUserWaveCountReq* result;
}

- (PBFetchUserWaveCountReq*) defaultInstance;

- (PBFetchUserWaveCountReqBuilder*) clear;
- (PBFetchUserWaveCountReqBuilder*) clone;

- (PBFetchUserWaveCountReq*) build;
- (PBFetchUserWaveCountReq*) buildPartial;

- (PBFetchUserWaveCountReqBuilder*) mergeFrom:(PBFetchUserWaveCountReq*) other;
- (PBFetchUserWaveCountReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchUserWaveCountReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)us;
- (PBFetchUserWaveCountReqUserStamp*)usAtIndex:(NSUInteger)index;
- (PBFetchUserWaveCountReqBuilder *)addUs:(PBFetchUserWaveCountReqUserStamp*)value;
- (PBFetchUserWaveCountReqBuilder *)setUsArray:(NSArray *)array;
- (PBFetchUserWaveCountReqBuilder *)clearUs;
@end

@interface PBFetchUserWaveCountResp : PBGeneratedMessage {
@private
  NSMutableArray * userWaveCountArray;
}
@property (readonly, strong) NSArray * userWaveCount;
- (PBFetchUserWaveCountRespUserWaveCount*)userWaveCountAtIndex:(NSUInteger)index;

+ (PBFetchUserWaveCountResp*) defaultInstance;
- (PBFetchUserWaveCountResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchUserWaveCountRespBuilder*) builder;
+ (PBFetchUserWaveCountRespBuilder*) builder;
+ (PBFetchUserWaveCountRespBuilder*) builderWithPrototype:(PBFetchUserWaveCountResp*) prototype;
- (PBFetchUserWaveCountRespBuilder*) toBuilder;

+ (PBFetchUserWaveCountResp*) parseFromData:(NSData*) data;
+ (PBFetchUserWaveCountResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchUserWaveCountResp*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchUserWaveCountResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchUserWaveCountResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchUserWaveCountResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchUserWaveCountRespUserWaveCount : PBGeneratedMessage {
@private
  BOOL hasUid_:1;
  BOOL hasCount_:1;
  SInt64 uid;
  SInt64 count;
}
- (BOOL) hasUid;
- (BOOL) hasCount;
@property (readonly) SInt64 uid;
@property (readonly) SInt64 count;

+ (PBFetchUserWaveCountRespUserWaveCount*) defaultInstance;
- (PBFetchUserWaveCountRespUserWaveCount*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchUserWaveCountRespUserWaveCountBuilder*) builder;
+ (PBFetchUserWaveCountRespUserWaveCountBuilder*) builder;
+ (PBFetchUserWaveCountRespUserWaveCountBuilder*) builderWithPrototype:(PBFetchUserWaveCountRespUserWaveCount*) prototype;
- (PBFetchUserWaveCountRespUserWaveCountBuilder*) toBuilder;

+ (PBFetchUserWaveCountRespUserWaveCount*) parseFromData:(NSData*) data;
+ (PBFetchUserWaveCountRespUserWaveCount*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchUserWaveCountRespUserWaveCount*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchUserWaveCountRespUserWaveCount*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchUserWaveCountRespUserWaveCount*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchUserWaveCountRespUserWaveCount*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchUserWaveCountRespUserWaveCountBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchUserWaveCountRespUserWaveCount* result;
}

- (PBFetchUserWaveCountRespUserWaveCount*) defaultInstance;

- (PBFetchUserWaveCountRespUserWaveCountBuilder*) clear;
- (PBFetchUserWaveCountRespUserWaveCountBuilder*) clone;

- (PBFetchUserWaveCountRespUserWaveCount*) build;
- (PBFetchUserWaveCountRespUserWaveCount*) buildPartial;

- (PBFetchUserWaveCountRespUserWaveCountBuilder*) mergeFrom:(PBFetchUserWaveCountRespUserWaveCount*) other;
- (PBFetchUserWaveCountRespUserWaveCountBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchUserWaveCountRespUserWaveCountBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUid;
- (SInt64) uid;
- (PBFetchUserWaveCountRespUserWaveCountBuilder*) setUid:(SInt64) value;
- (PBFetchUserWaveCountRespUserWaveCountBuilder*) clearUid;

- (BOOL) hasCount;
- (SInt64) count;
- (PBFetchUserWaveCountRespUserWaveCountBuilder*) setCount:(SInt64) value;
- (PBFetchUserWaveCountRespUserWaveCountBuilder*) clearCount;
@end

@interface PBFetchUserWaveCountRespBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchUserWaveCountResp* result;
}

- (PBFetchUserWaveCountResp*) defaultInstance;

- (PBFetchUserWaveCountRespBuilder*) clear;
- (PBFetchUserWaveCountRespBuilder*) clone;

- (PBFetchUserWaveCountResp*) build;
- (PBFetchUserWaveCountResp*) buildPartial;

- (PBFetchUserWaveCountRespBuilder*) mergeFrom:(PBFetchUserWaveCountResp*) other;
- (PBFetchUserWaveCountRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchUserWaveCountRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)userWaveCount;
- (PBFetchUserWaveCountRespUserWaveCount*)userWaveCountAtIndex:(NSUInteger)index;
- (PBFetchUserWaveCountRespBuilder *)addUserWaveCount:(PBFetchUserWaveCountRespUserWaveCount*)value;
- (PBFetchUserWaveCountRespBuilder *)setUserWaveCountArray:(NSArray *)array;
- (PBFetchUserWaveCountRespBuilder *)clearUserWaveCount;
@end

@interface PBRedPacketPhysicalItem : PBGeneratedMessage {
@private
  BOOL hasCost_:1;
  BOOL hasName_:1;
  BOOL hasCount_:1;
  Float32 cost;
  NSString* name;
  SInt32 count;
}
- (BOOL) hasName;
- (BOOL) hasCost;
- (BOOL) hasCount;
@property (readonly, strong) NSString* name;
@property (readonly) Float32 cost;
@property (readonly) SInt32 count;

+ (PBRedPacketPhysicalItem*) defaultInstance;
- (PBRedPacketPhysicalItem*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBRedPacketPhysicalItemBuilder*) builder;
+ (PBRedPacketPhysicalItemBuilder*) builder;
+ (PBRedPacketPhysicalItemBuilder*) builderWithPrototype:(PBRedPacketPhysicalItem*) prototype;
- (PBRedPacketPhysicalItemBuilder*) toBuilder;

+ (PBRedPacketPhysicalItem*) parseFromData:(NSData*) data;
+ (PBRedPacketPhysicalItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBRedPacketPhysicalItem*) parseFromInputStream:(NSInputStream*) input;
+ (PBRedPacketPhysicalItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBRedPacketPhysicalItem*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBRedPacketPhysicalItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBRedPacketPhysicalItemBuilder : PBGeneratedMessageBuilder {
@private
  PBRedPacketPhysicalItem* result;
}

- (PBRedPacketPhysicalItem*) defaultInstance;

- (PBRedPacketPhysicalItemBuilder*) clear;
- (PBRedPacketPhysicalItemBuilder*) clone;

- (PBRedPacketPhysicalItem*) build;
- (PBRedPacketPhysicalItem*) buildPartial;

- (PBRedPacketPhysicalItemBuilder*) mergeFrom:(PBRedPacketPhysicalItem*) other;
- (PBRedPacketPhysicalItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBRedPacketPhysicalItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasName;
- (NSString*) name;
- (PBRedPacketPhysicalItemBuilder*) setName:(NSString*) value;
- (PBRedPacketPhysicalItemBuilder*) clearName;

- (BOOL) hasCost;
- (Float32) cost;
- (PBRedPacketPhysicalItemBuilder*) setCost:(Float32) value;
- (PBRedPacketPhysicalItemBuilder*) clearCost;

- (BOOL) hasCount;
- (SInt32) count;
- (PBRedPacketPhysicalItemBuilder*) setCount:(SInt32) value;
- (PBRedPacketPhysicalItemBuilder*) clearCount;
@end

@interface PBMoneyRedPacket : PBGeneratedMessage {
@private
  BOOL hasTotalCost_:1;
  BOOL hasMinCost_:1;
  BOOL hasMaxCost_:1;
  BOOL hasActualCount_:1;
  Float32 totalCost;
  Float32 minCost;
  Float32 maxCost;
  SInt32 actualCount;
}
- (BOOL) hasTotalCost;
- (BOOL) hasActualCount;
- (BOOL) hasMinCost;
- (BOOL) hasMaxCost;
@property (readonly) Float32 totalCost;
@property (readonly) SInt32 actualCount;
@property (readonly) Float32 minCost;
@property (readonly) Float32 maxCost;

+ (PBMoneyRedPacket*) defaultInstance;
- (PBMoneyRedPacket*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBMoneyRedPacketBuilder*) builder;
+ (PBMoneyRedPacketBuilder*) builder;
+ (PBMoneyRedPacketBuilder*) builderWithPrototype:(PBMoneyRedPacket*) prototype;
- (PBMoneyRedPacketBuilder*) toBuilder;

+ (PBMoneyRedPacket*) parseFromData:(NSData*) data;
+ (PBMoneyRedPacket*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBMoneyRedPacket*) parseFromInputStream:(NSInputStream*) input;
+ (PBMoneyRedPacket*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBMoneyRedPacket*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBMoneyRedPacket*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBMoneyRedPacketBuilder : PBGeneratedMessageBuilder {
@private
  PBMoneyRedPacket* result;
}

- (PBMoneyRedPacket*) defaultInstance;

- (PBMoneyRedPacketBuilder*) clear;
- (PBMoneyRedPacketBuilder*) clone;

- (PBMoneyRedPacket*) build;
- (PBMoneyRedPacket*) buildPartial;

- (PBMoneyRedPacketBuilder*) mergeFrom:(PBMoneyRedPacket*) other;
- (PBMoneyRedPacketBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBMoneyRedPacketBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTotalCost;
- (Float32) totalCost;
- (PBMoneyRedPacketBuilder*) setTotalCost:(Float32) value;
- (PBMoneyRedPacketBuilder*) clearTotalCost;

- (BOOL) hasActualCount;
- (SInt32) actualCount;
- (PBMoneyRedPacketBuilder*) setActualCount:(SInt32) value;
- (PBMoneyRedPacketBuilder*) clearActualCount;

- (BOOL) hasMinCost;
- (Float32) minCost;
- (PBMoneyRedPacketBuilder*) setMinCost:(Float32) value;
- (PBMoneyRedPacketBuilder*) clearMinCost;

- (BOOL) hasMaxCost;
- (Float32) maxCost;
- (PBMoneyRedPacketBuilder*) setMaxCost:(Float32) value;
- (PBMoneyRedPacketBuilder*) clearMaxCost;
@end

@interface PBRedPacket : PBGeneratedMessage {
@private
  BOOL hasCanBeRob_:1;
  BOOL hasYouHaveRobbed_:1;
  BOOL hasMinCost_:1;
  BOOL hasMaxCost_:1;
  BOOL hasProbability_:1;
  BOOL hasTitle_:1;
  BOOL hasDesc_:1;
  BOOL hasPictureUrl_:1;
  BOOL hasSystemSender_:1;
  BOOL hasMoneyRedPacket_:1;
  BOOL hasType_:1;
  BOOL hasCount_:1;
  BOOL hasActualCount_:1;
  BOOL hasRobbedCount_:1;
  BOOL hasActualRobbedCount_:1;
  BOOL hasId_:1;
  BOOL hasStartTimestamp_:1;
  BOOL hasSenderPassportId_:1;
  BOOL hasCreatedAt_:1;
  BOOL canBeRob_:1;
  BOOL youHaveRobbed_:1;
  Float32 minCost;
  Float32 maxCost;
  Float32 probability;
  NSString* title;
  NSString* desc;
  NSString* pictureUrl;
  PBSystemSender* systemSender;
  PBMoneyRedPacket* moneyRedPacket;
  PBRedPacketType type;
  SInt32 count;
  SInt32 actualCount;
  SInt32 robbedCount;
  SInt32 actualRobbedCount;
  SInt64 id;
  SInt64 startTimestamp;
  SInt64 senderPassportId;
  SInt64 createdAt;
  NSMutableArray * physicalItemsArray;
}
- (BOOL) hasId;
- (BOOL) hasType;
- (BOOL) hasTitle;
- (BOOL) hasDesc;
- (BOOL) hasCount;
- (BOOL) hasMinCost;
- (BOOL) hasMaxCost;
- (BOOL) hasStartTimestamp;
- (BOOL) hasCanBeRob;
- (BOOL) hasPictureUrl;
- (BOOL) hasSenderPassportId;
- (BOOL) hasSystemSender;
- (BOOL) hasMoneyRedPacket;
- (BOOL) hasProbability;
- (BOOL) hasActualCount;
- (BOOL) hasRobbedCount;
- (BOOL) hasActualRobbedCount;
- (BOOL) hasCreatedAt;
- (BOOL) hasYouHaveRobbed;
@property (readonly) SInt64 id;
@property (readonly) PBRedPacketType type;
@property (readonly, strong) NSString* title;
@property (readonly, strong) NSString* desc;
@property (readonly) SInt32 count;
@property (readonly) Float32 minCost;
@property (readonly) Float32 maxCost;
@property (readonly) SInt64 startTimestamp;
- (BOOL) canBeRob;
@property (readonly, strong) NSString* pictureUrl;
@property (readonly) SInt64 senderPassportId;
@property (readonly, strong) PBSystemSender* systemSender;
@property (readonly, strong) NSArray * physicalItems;
@property (readonly, strong) PBMoneyRedPacket* moneyRedPacket;
@property (readonly) Float32 probability;
@property (readonly) SInt32 actualCount;
@property (readonly) SInt32 robbedCount;
@property (readonly) SInt32 actualRobbedCount;
@property (readonly) SInt64 createdAt;
- (BOOL) youHaveRobbed;
- (PBRedPacketPhysicalItem*)physicalItemsAtIndex:(NSUInteger)index;

+ (PBRedPacket*) defaultInstance;
- (PBRedPacket*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBRedPacketBuilder*) builder;
+ (PBRedPacketBuilder*) builder;
+ (PBRedPacketBuilder*) builderWithPrototype:(PBRedPacket*) prototype;
- (PBRedPacketBuilder*) toBuilder;

+ (PBRedPacket*) parseFromData:(NSData*) data;
+ (PBRedPacket*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBRedPacket*) parseFromInputStream:(NSInputStream*) input;
+ (PBRedPacket*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBRedPacket*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBRedPacket*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBRedPacketBuilder : PBGeneratedMessageBuilder {
@private
  PBRedPacket* result;
}

- (PBRedPacket*) defaultInstance;

- (PBRedPacketBuilder*) clear;
- (PBRedPacketBuilder*) clone;

- (PBRedPacket*) build;
- (PBRedPacket*) buildPartial;

- (PBRedPacketBuilder*) mergeFrom:(PBRedPacket*) other;
- (PBRedPacketBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBRedPacketBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (SInt64) id;
- (PBRedPacketBuilder*) setId:(SInt64) value;
- (PBRedPacketBuilder*) clearId;

- (BOOL) hasType;
- (PBRedPacketType) type;
- (PBRedPacketBuilder*) setType:(PBRedPacketType) value;
- (PBRedPacketBuilder*) clearType;

- (BOOL) hasTitle;
- (NSString*) title;
- (PBRedPacketBuilder*) setTitle:(NSString*) value;
- (PBRedPacketBuilder*) clearTitle;

- (BOOL) hasDesc;
- (NSString*) desc;
- (PBRedPacketBuilder*) setDesc:(NSString*) value;
- (PBRedPacketBuilder*) clearDesc;

- (BOOL) hasCount;
- (SInt32) count;
- (PBRedPacketBuilder*) setCount:(SInt32) value;
- (PBRedPacketBuilder*) clearCount;

- (BOOL) hasMinCost;
- (Float32) minCost;
- (PBRedPacketBuilder*) setMinCost:(Float32) value;
- (PBRedPacketBuilder*) clearMinCost;

- (BOOL) hasMaxCost;
- (Float32) maxCost;
- (PBRedPacketBuilder*) setMaxCost:(Float32) value;
- (PBRedPacketBuilder*) clearMaxCost;

- (BOOL) hasStartTimestamp;
- (SInt64) startTimestamp;
- (PBRedPacketBuilder*) setStartTimestamp:(SInt64) value;
- (PBRedPacketBuilder*) clearStartTimestamp;

- (BOOL) hasCanBeRob;
- (BOOL) canBeRob;
- (PBRedPacketBuilder*) setCanBeRob:(BOOL) value;
- (PBRedPacketBuilder*) clearCanBeRob;

- (BOOL) hasPictureUrl;
- (NSString*) pictureUrl;
- (PBRedPacketBuilder*) setPictureUrl:(NSString*) value;
- (PBRedPacketBuilder*) clearPictureUrl;

- (BOOL) hasSenderPassportId;
- (SInt64) senderPassportId;
- (PBRedPacketBuilder*) setSenderPassportId:(SInt64) value;
- (PBRedPacketBuilder*) clearSenderPassportId;

- (BOOL) hasSystemSender;
- (PBSystemSender*) systemSender;
- (PBRedPacketBuilder*) setSystemSender:(PBSystemSender*) value;
- (PBRedPacketBuilder*) setSystemSenderBuilder:(PBSystemSenderBuilder*) builderForValue;
- (PBRedPacketBuilder*) mergeSystemSender:(PBSystemSender*) value;
- (PBRedPacketBuilder*) clearSystemSender;

- (NSMutableArray *)physicalItems;
- (PBRedPacketPhysicalItem*)physicalItemsAtIndex:(NSUInteger)index;
- (PBRedPacketBuilder *)addPhysicalItems:(PBRedPacketPhysicalItem*)value;
- (PBRedPacketBuilder *)setPhysicalItemsArray:(NSArray *)array;
- (PBRedPacketBuilder *)clearPhysicalItems;

- (BOOL) hasMoneyRedPacket;
- (PBMoneyRedPacket*) moneyRedPacket;
- (PBRedPacketBuilder*) setMoneyRedPacket:(PBMoneyRedPacket*) value;
- (PBRedPacketBuilder*) setMoneyRedPacketBuilder:(PBMoneyRedPacketBuilder*) builderForValue;
- (PBRedPacketBuilder*) mergeMoneyRedPacket:(PBMoneyRedPacket*) value;
- (PBRedPacketBuilder*) clearMoneyRedPacket;

- (BOOL) hasProbability;
- (Float32) probability;
- (PBRedPacketBuilder*) setProbability:(Float32) value;
- (PBRedPacketBuilder*) clearProbability;

- (BOOL) hasActualCount;
- (SInt32) actualCount;
- (PBRedPacketBuilder*) setActualCount:(SInt32) value;
- (PBRedPacketBuilder*) clearActualCount;

- (BOOL) hasRobbedCount;
- (SInt32) robbedCount;
- (PBRedPacketBuilder*) setRobbedCount:(SInt32) value;
- (PBRedPacketBuilder*) clearRobbedCount;

- (BOOL) hasActualRobbedCount;
- (SInt32) actualRobbedCount;
- (PBRedPacketBuilder*) setActualRobbedCount:(SInt32) value;
- (PBRedPacketBuilder*) clearActualRobbedCount;

- (BOOL) hasCreatedAt;
- (SInt64) createdAt;
- (PBRedPacketBuilder*) setCreatedAt:(SInt64) value;
- (PBRedPacketBuilder*) clearCreatedAt;

- (BOOL) hasYouHaveRobbed;
- (BOOL) youHaveRobbed;
- (PBRedPacketBuilder*) setYouHaveRobbed:(BOOL) value;
- (PBRedPacketBuilder*) clearYouHaveRobbed;
@end

@interface PBRedPacketTicket : PBGeneratedMessage {
@private
  BOOL hasEmpty_:1;
  BOOL hasCost_:1;
  BOOL hasCotent_:1;
  BOOL hasCode_:1;
  BOOL hasRedPacketPictureUrl_:1;
  BOOL hasType_:1;
  BOOL hasId_:1;
  BOOL hasRedPacketId_:1;
  BOOL hasOwnerPassportId_:1;
  BOOL hasCreatedAt_:1;
  BOOL hasUpdatedAt_:1;
  BOOL hasRobbedAt_:1;
  BOOL hasReceivedAt_:1;
  BOOL hasFromParkId_:1;
  BOOL empty_:1;
  Float32 cost;
  NSString* cotent;
  NSString* code;
  NSString* redPacketPictureUrl;
  PBRedPacketType type;
  SInt64 id;
  SInt64 redPacketId;
  SInt64 ownerPassportId;
  SInt64 createdAt;
  SInt64 updatedAt;
  SInt64 robbedAt;
  SInt64 receivedAt;
  SInt64 fromParkId;
}
- (BOOL) hasId;
- (BOOL) hasRedPacketId;
- (BOOL) hasOwnerPassportId;
- (BOOL) hasCotent;
- (BOOL) hasType;
- (BOOL) hasCost;
- (BOOL) hasCode;
- (BOOL) hasCreatedAt;
- (BOOL) hasUpdatedAt;
- (BOOL) hasRobbedAt;
- (BOOL) hasEmpty;
- (BOOL) hasReceivedAt;
- (BOOL) hasRedPacketPictureUrl;
- (BOOL) hasFromParkId;
@property (readonly) SInt64 id;
@property (readonly) SInt64 redPacketId;
@property (readonly) SInt64 ownerPassportId;
@property (readonly, strong) NSString* cotent;
@property (readonly) PBRedPacketType type;
@property (readonly) Float32 cost;
@property (readonly, strong) NSString* code;
@property (readonly) SInt64 createdAt;
@property (readonly) SInt64 updatedAt;
@property (readonly) SInt64 robbedAt;
- (BOOL) empty;
@property (readonly) SInt64 receivedAt;
@property (readonly, strong) NSString* redPacketPictureUrl;
@property (readonly) SInt64 fromParkId;

+ (PBRedPacketTicket*) defaultInstance;
- (PBRedPacketTicket*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBRedPacketTicketBuilder*) builder;
+ (PBRedPacketTicketBuilder*) builder;
+ (PBRedPacketTicketBuilder*) builderWithPrototype:(PBRedPacketTicket*) prototype;
- (PBRedPacketTicketBuilder*) toBuilder;

+ (PBRedPacketTicket*) parseFromData:(NSData*) data;
+ (PBRedPacketTicket*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBRedPacketTicket*) parseFromInputStream:(NSInputStream*) input;
+ (PBRedPacketTicket*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBRedPacketTicket*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBRedPacketTicket*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBRedPacketTicketBuilder : PBGeneratedMessageBuilder {
@private
  PBRedPacketTicket* result;
}

- (PBRedPacketTicket*) defaultInstance;

- (PBRedPacketTicketBuilder*) clear;
- (PBRedPacketTicketBuilder*) clone;

- (PBRedPacketTicket*) build;
- (PBRedPacketTicket*) buildPartial;

- (PBRedPacketTicketBuilder*) mergeFrom:(PBRedPacketTicket*) other;
- (PBRedPacketTicketBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBRedPacketTicketBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (SInt64) id;
- (PBRedPacketTicketBuilder*) setId:(SInt64) value;
- (PBRedPacketTicketBuilder*) clearId;

- (BOOL) hasRedPacketId;
- (SInt64) redPacketId;
- (PBRedPacketTicketBuilder*) setRedPacketId:(SInt64) value;
- (PBRedPacketTicketBuilder*) clearRedPacketId;

- (BOOL) hasOwnerPassportId;
- (SInt64) ownerPassportId;
- (PBRedPacketTicketBuilder*) setOwnerPassportId:(SInt64) value;
- (PBRedPacketTicketBuilder*) clearOwnerPassportId;

- (BOOL) hasCotent;
- (NSString*) cotent;
- (PBRedPacketTicketBuilder*) setCotent:(NSString*) value;
- (PBRedPacketTicketBuilder*) clearCotent;

- (BOOL) hasType;
- (PBRedPacketType) type;
- (PBRedPacketTicketBuilder*) setType:(PBRedPacketType) value;
- (PBRedPacketTicketBuilder*) clearType;

- (BOOL) hasCost;
- (Float32) cost;
- (PBRedPacketTicketBuilder*) setCost:(Float32) value;
- (PBRedPacketTicketBuilder*) clearCost;

- (BOOL) hasCode;
- (NSString*) code;
- (PBRedPacketTicketBuilder*) setCode:(NSString*) value;
- (PBRedPacketTicketBuilder*) clearCode;

- (BOOL) hasCreatedAt;
- (SInt64) createdAt;
- (PBRedPacketTicketBuilder*) setCreatedAt:(SInt64) value;
- (PBRedPacketTicketBuilder*) clearCreatedAt;

- (BOOL) hasUpdatedAt;
- (SInt64) updatedAt;
- (PBRedPacketTicketBuilder*) setUpdatedAt:(SInt64) value;
- (PBRedPacketTicketBuilder*) clearUpdatedAt;

- (BOOL) hasRobbedAt;
- (SInt64) robbedAt;
- (PBRedPacketTicketBuilder*) setRobbedAt:(SInt64) value;
- (PBRedPacketTicketBuilder*) clearRobbedAt;

- (BOOL) hasEmpty;
- (BOOL) empty;
- (PBRedPacketTicketBuilder*) setEmpty:(BOOL) value;
- (PBRedPacketTicketBuilder*) clearEmpty;

- (BOOL) hasReceivedAt;
- (SInt64) receivedAt;
- (PBRedPacketTicketBuilder*) setReceivedAt:(SInt64) value;
- (PBRedPacketTicketBuilder*) clearReceivedAt;

- (BOOL) hasRedPacketPictureUrl;
- (NSString*) redPacketPictureUrl;
- (PBRedPacketTicketBuilder*) setRedPacketPictureUrl:(NSString*) value;
- (PBRedPacketTicketBuilder*) clearRedPacketPictureUrl;

- (BOOL) hasFromParkId;
- (SInt64) fromParkId;
- (PBRedPacketTicketBuilder*) setFromParkId:(SInt64) value;
- (PBRedPacketTicketBuilder*) clearFromParkId;
@end

@interface PBSendRedPacketReq : PBGeneratedMessage {
@private
  BOOL hasProbability_:1;
  BOOL hasTitle_:1;
  BOOL hasDesc_:1;
  BOOL hasPictureUrl_:1;
  BOOL hasSystemSender_:1;
  BOOL hasMoneyRedPacket_:1;
  BOOL hasType_:1;
  BOOL hasMyPassportId_:1;
  BOOL hasSenderPassportId_:1;
  BOOL hasStartTimestamp_:1;
  Float32 probability;
  NSString* title;
  NSString* desc;
  NSString* pictureUrl;
  PBSystemSender* systemSender;
  PBMoneyRedPacket* moneyRedPacket;
  PBRedPacketType type;
  SInt64 myPassportId;
  SInt64 senderPassportId;
  SInt64 startTimestamp;
  NSMutableArray * physicalItemsArray;
}
- (BOOL) hasMyPassportId;
- (BOOL) hasSenderPassportId;
- (BOOL) hasSystemSender;
- (BOOL) hasType;
- (BOOL) hasTitle;
- (BOOL) hasDesc;
- (BOOL) hasProbability;
- (BOOL) hasPictureUrl;
- (BOOL) hasStartTimestamp;
- (BOOL) hasMoneyRedPacket;
@property (readonly) SInt64 myPassportId;
@property (readonly) SInt64 senderPassportId;
@property (readonly, strong) PBSystemSender* systemSender;
@property (readonly) PBRedPacketType type;
@property (readonly, strong) NSString* title;
@property (readonly, strong) NSString* desc;
@property (readonly) Float32 probability;
@property (readonly, strong) NSString* pictureUrl;
@property (readonly) SInt64 startTimestamp;
@property (readonly, strong) NSArray * physicalItems;
@property (readonly, strong) PBMoneyRedPacket* moneyRedPacket;
- (PBRedPacketPhysicalItem*)physicalItemsAtIndex:(NSUInteger)index;

+ (PBSendRedPacketReq*) defaultInstance;
- (PBSendRedPacketReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBSendRedPacketReqBuilder*) builder;
+ (PBSendRedPacketReqBuilder*) builder;
+ (PBSendRedPacketReqBuilder*) builderWithPrototype:(PBSendRedPacketReq*) prototype;
- (PBSendRedPacketReqBuilder*) toBuilder;

+ (PBSendRedPacketReq*) parseFromData:(NSData*) data;
+ (PBSendRedPacketReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSendRedPacketReq*) parseFromInputStream:(NSInputStream*) input;
+ (PBSendRedPacketReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSendRedPacketReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBSendRedPacketReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBSendRedPacketReqBuilder : PBGeneratedMessageBuilder {
@private
  PBSendRedPacketReq* result;
}

- (PBSendRedPacketReq*) defaultInstance;

- (PBSendRedPacketReqBuilder*) clear;
- (PBSendRedPacketReqBuilder*) clone;

- (PBSendRedPacketReq*) build;
- (PBSendRedPacketReq*) buildPartial;

- (PBSendRedPacketReqBuilder*) mergeFrom:(PBSendRedPacketReq*) other;
- (PBSendRedPacketReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBSendRedPacketReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMyPassportId;
- (SInt64) myPassportId;
- (PBSendRedPacketReqBuilder*) setMyPassportId:(SInt64) value;
- (PBSendRedPacketReqBuilder*) clearMyPassportId;

- (BOOL) hasSenderPassportId;
- (SInt64) senderPassportId;
- (PBSendRedPacketReqBuilder*) setSenderPassportId:(SInt64) value;
- (PBSendRedPacketReqBuilder*) clearSenderPassportId;

- (BOOL) hasSystemSender;
- (PBSystemSender*) systemSender;
- (PBSendRedPacketReqBuilder*) setSystemSender:(PBSystemSender*) value;
- (PBSendRedPacketReqBuilder*) setSystemSenderBuilder:(PBSystemSenderBuilder*) builderForValue;
- (PBSendRedPacketReqBuilder*) mergeSystemSender:(PBSystemSender*) value;
- (PBSendRedPacketReqBuilder*) clearSystemSender;

- (BOOL) hasType;
- (PBRedPacketType) type;
- (PBSendRedPacketReqBuilder*) setType:(PBRedPacketType) value;
- (PBSendRedPacketReqBuilder*) clearType;

- (BOOL) hasTitle;
- (NSString*) title;
- (PBSendRedPacketReqBuilder*) setTitle:(NSString*) value;
- (PBSendRedPacketReqBuilder*) clearTitle;

- (BOOL) hasDesc;
- (NSString*) desc;
- (PBSendRedPacketReqBuilder*) setDesc:(NSString*) value;
- (PBSendRedPacketReqBuilder*) clearDesc;

- (BOOL) hasProbability;
- (Float32) probability;
- (PBSendRedPacketReqBuilder*) setProbability:(Float32) value;
- (PBSendRedPacketReqBuilder*) clearProbability;

- (BOOL) hasPictureUrl;
- (NSString*) pictureUrl;
- (PBSendRedPacketReqBuilder*) setPictureUrl:(NSString*) value;
- (PBSendRedPacketReqBuilder*) clearPictureUrl;

- (BOOL) hasStartTimestamp;
- (SInt64) startTimestamp;
- (PBSendRedPacketReqBuilder*) setStartTimestamp:(SInt64) value;
- (PBSendRedPacketReqBuilder*) clearStartTimestamp;

- (NSMutableArray *)physicalItems;
- (PBRedPacketPhysicalItem*)physicalItemsAtIndex:(NSUInteger)index;
- (PBSendRedPacketReqBuilder *)addPhysicalItems:(PBRedPacketPhysicalItem*)value;
- (PBSendRedPacketReqBuilder *)setPhysicalItemsArray:(NSArray *)array;
- (PBSendRedPacketReqBuilder *)clearPhysicalItems;

- (BOOL) hasMoneyRedPacket;
- (PBMoneyRedPacket*) moneyRedPacket;
- (PBSendRedPacketReqBuilder*) setMoneyRedPacket:(PBMoneyRedPacket*) value;
- (PBSendRedPacketReqBuilder*) setMoneyRedPacketBuilder:(PBMoneyRedPacketBuilder*) builderForValue;
- (PBSendRedPacketReqBuilder*) mergeMoneyRedPacket:(PBMoneyRedPacket*) value;
- (PBSendRedPacketReqBuilder*) clearMoneyRedPacket;
@end

@interface PBSendRedPacketResp : PBGeneratedMessage {
@private
  BOOL hasRedPacket_:1;
  PBRedPacket* redPacket;
}
- (BOOL) hasRedPacket;
@property (readonly, strong) PBRedPacket* redPacket;

+ (PBSendRedPacketResp*) defaultInstance;
- (PBSendRedPacketResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBSendRedPacketRespBuilder*) builder;
+ (PBSendRedPacketRespBuilder*) builder;
+ (PBSendRedPacketRespBuilder*) builderWithPrototype:(PBSendRedPacketResp*) prototype;
- (PBSendRedPacketRespBuilder*) toBuilder;

+ (PBSendRedPacketResp*) parseFromData:(NSData*) data;
+ (PBSendRedPacketResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSendRedPacketResp*) parseFromInputStream:(NSInputStream*) input;
+ (PBSendRedPacketResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSendRedPacketResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBSendRedPacketResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBSendRedPacketRespBuilder : PBGeneratedMessageBuilder {
@private
  PBSendRedPacketResp* result;
}

- (PBSendRedPacketResp*) defaultInstance;

- (PBSendRedPacketRespBuilder*) clear;
- (PBSendRedPacketRespBuilder*) clone;

- (PBSendRedPacketResp*) build;
- (PBSendRedPacketResp*) buildPartial;

- (PBSendRedPacketRespBuilder*) mergeFrom:(PBSendRedPacketResp*) other;
- (PBSendRedPacketRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBSendRedPacketRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRedPacket;
- (PBRedPacket*) redPacket;
- (PBSendRedPacketRespBuilder*) setRedPacket:(PBRedPacket*) value;
- (PBSendRedPacketRespBuilder*) setRedPacketBuilder:(PBRedPacketBuilder*) builderForValue;
- (PBSendRedPacketRespBuilder*) mergeRedPacket:(PBRedPacket*) value;
- (PBSendRedPacketRespBuilder*) clearRedPacket;
@end

@interface PBRobRedPacketReq : PBGeneratedMessage {
@private
  BOOL hasRedPacketId_:1;
  BOOL hasPassportId_:1;
  SInt64 redPacketId;
  SInt64 passportId;
}
- (BOOL) hasRedPacketId;
- (BOOL) hasPassportId;
@property (readonly) SInt64 redPacketId;
@property (readonly) SInt64 passportId;

+ (PBRobRedPacketReq*) defaultInstance;
- (PBRobRedPacketReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBRobRedPacketReqBuilder*) builder;
+ (PBRobRedPacketReqBuilder*) builder;
+ (PBRobRedPacketReqBuilder*) builderWithPrototype:(PBRobRedPacketReq*) prototype;
- (PBRobRedPacketReqBuilder*) toBuilder;

+ (PBRobRedPacketReq*) parseFromData:(NSData*) data;
+ (PBRobRedPacketReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBRobRedPacketReq*) parseFromInputStream:(NSInputStream*) input;
+ (PBRobRedPacketReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBRobRedPacketReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBRobRedPacketReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBRobRedPacketReqBuilder : PBGeneratedMessageBuilder {
@private
  PBRobRedPacketReq* result;
}

- (PBRobRedPacketReq*) defaultInstance;

- (PBRobRedPacketReqBuilder*) clear;
- (PBRobRedPacketReqBuilder*) clone;

- (PBRobRedPacketReq*) build;
- (PBRobRedPacketReq*) buildPartial;

- (PBRobRedPacketReqBuilder*) mergeFrom:(PBRobRedPacketReq*) other;
- (PBRobRedPacketReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBRobRedPacketReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRedPacketId;
- (SInt64) redPacketId;
- (PBRobRedPacketReqBuilder*) setRedPacketId:(SInt64) value;
- (PBRobRedPacketReqBuilder*) clearRedPacketId;

- (BOOL) hasPassportId;
- (SInt64) passportId;
- (PBRobRedPacketReqBuilder*) setPassportId:(SInt64) value;
- (PBRobRedPacketReqBuilder*) clearPassportId;
@end

@interface PBRobRedPacketResp : PBGeneratedMessage {
@private
  BOOL hasMsg_:1;
  BOOL hasTicket_:1;
  NSString* msg;
  PBRedPacketTicket* ticket;
}
- (BOOL) hasMsg;
- (BOOL) hasTicket;
@property (readonly, strong) NSString* msg;
@property (readonly, strong) PBRedPacketTicket* ticket;

+ (PBRobRedPacketResp*) defaultInstance;
- (PBRobRedPacketResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBRobRedPacketRespBuilder*) builder;
+ (PBRobRedPacketRespBuilder*) builder;
+ (PBRobRedPacketRespBuilder*) builderWithPrototype:(PBRobRedPacketResp*) prototype;
- (PBRobRedPacketRespBuilder*) toBuilder;

+ (PBRobRedPacketResp*) parseFromData:(NSData*) data;
+ (PBRobRedPacketResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBRobRedPacketResp*) parseFromInputStream:(NSInputStream*) input;
+ (PBRobRedPacketResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBRobRedPacketResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBRobRedPacketResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBRobRedPacketRespBuilder : PBGeneratedMessageBuilder {
@private
  PBRobRedPacketResp* result;
}

- (PBRobRedPacketResp*) defaultInstance;

- (PBRobRedPacketRespBuilder*) clear;
- (PBRobRedPacketRespBuilder*) clone;

- (PBRobRedPacketResp*) build;
- (PBRobRedPacketResp*) buildPartial;

- (PBRobRedPacketRespBuilder*) mergeFrom:(PBRobRedPacketResp*) other;
- (PBRobRedPacketRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBRobRedPacketRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMsg;
- (NSString*) msg;
- (PBRobRedPacketRespBuilder*) setMsg:(NSString*) value;
- (PBRobRedPacketRespBuilder*) clearMsg;

- (BOOL) hasTicket;
- (PBRedPacketTicket*) ticket;
- (PBRobRedPacketRespBuilder*) setTicket:(PBRedPacketTicket*) value;
- (PBRobRedPacketRespBuilder*) setTicketBuilder:(PBRedPacketTicketBuilder*) builderForValue;
- (PBRobRedPacketRespBuilder*) mergeTicket:(PBRedPacketTicket*) value;
- (PBRobRedPacketRespBuilder*) clearTicket;
@end

@interface PBFetchRedPacketReq : PBGeneratedMessage {
@private
  BOOL hasIsSystemSender_:1;
  BOOL hasTitleSearch_:1;
  BOOL hasSystemSender_:1;
  BOOL hasTypeFilter_:1;
  BOOL hasStatusFilter_:1;
  BOOL hasPage_:1;
  BOOL hasSenderPassportId_:1;
  BOOL hasBeforeRedPacketId_:1;
  BOOL isSystemSender_:1;
  NSString* titleSearch;
  PBSystemSender* systemSender;
  PBRedPacketType typeFilter;
  PBFetchRedPacketReqRedPacketStatus statusFilter;
  SInt32 page;
  SInt64 senderPassportId;
  SInt64 beforeRedPacketId;
}
- (BOOL) hasSenderPassportId;
- (BOOL) hasSystemSender;
- (BOOL) hasTypeFilter;
- (BOOL) hasStatusFilter;
- (BOOL) hasTitleSearch;
- (BOOL) hasPage;
- (BOOL) hasBeforeRedPacketId;
- (BOOL) hasIsSystemSender;
@property (readonly) SInt64 senderPassportId;
@property (readonly, strong) PBSystemSender* systemSender;
@property (readonly) PBRedPacketType typeFilter;
@property (readonly) PBFetchRedPacketReqRedPacketStatus statusFilter;
@property (readonly, strong) NSString* titleSearch;
@property (readonly) SInt32 page;
@property (readonly) SInt64 beforeRedPacketId;
- (BOOL) isSystemSender;

+ (PBFetchRedPacketReq*) defaultInstance;
- (PBFetchRedPacketReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchRedPacketReqBuilder*) builder;
+ (PBFetchRedPacketReqBuilder*) builder;
+ (PBFetchRedPacketReqBuilder*) builderWithPrototype:(PBFetchRedPacketReq*) prototype;
- (PBFetchRedPacketReqBuilder*) toBuilder;

+ (PBFetchRedPacketReq*) parseFromData:(NSData*) data;
+ (PBFetchRedPacketReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchRedPacketReq*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchRedPacketReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchRedPacketReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchRedPacketReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchRedPacketReqBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchRedPacketReq* result;
}

- (PBFetchRedPacketReq*) defaultInstance;

- (PBFetchRedPacketReqBuilder*) clear;
- (PBFetchRedPacketReqBuilder*) clone;

- (PBFetchRedPacketReq*) build;
- (PBFetchRedPacketReq*) buildPartial;

- (PBFetchRedPacketReqBuilder*) mergeFrom:(PBFetchRedPacketReq*) other;
- (PBFetchRedPacketReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchRedPacketReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSenderPassportId;
- (SInt64) senderPassportId;
- (PBFetchRedPacketReqBuilder*) setSenderPassportId:(SInt64) value;
- (PBFetchRedPacketReqBuilder*) clearSenderPassportId;

- (BOOL) hasSystemSender;
- (PBSystemSender*) systemSender;
- (PBFetchRedPacketReqBuilder*) setSystemSender:(PBSystemSender*) value;
- (PBFetchRedPacketReqBuilder*) setSystemSenderBuilder:(PBSystemSenderBuilder*) builderForValue;
- (PBFetchRedPacketReqBuilder*) mergeSystemSender:(PBSystemSender*) value;
- (PBFetchRedPacketReqBuilder*) clearSystemSender;

- (BOOL) hasTypeFilter;
- (PBRedPacketType) typeFilter;
- (PBFetchRedPacketReqBuilder*) setTypeFilter:(PBRedPacketType) value;
- (PBFetchRedPacketReqBuilder*) clearTypeFilter;

- (BOOL) hasStatusFilter;
- (PBFetchRedPacketReqRedPacketStatus) statusFilter;
- (PBFetchRedPacketReqBuilder*) setStatusFilter:(PBFetchRedPacketReqRedPacketStatus) value;
- (PBFetchRedPacketReqBuilder*) clearStatusFilter;

- (BOOL) hasTitleSearch;
- (NSString*) titleSearch;
- (PBFetchRedPacketReqBuilder*) setTitleSearch:(NSString*) value;
- (PBFetchRedPacketReqBuilder*) clearTitleSearch;

- (BOOL) hasPage;
- (SInt32) page;
- (PBFetchRedPacketReqBuilder*) setPage:(SInt32) value;
- (PBFetchRedPacketReqBuilder*) clearPage;

- (BOOL) hasBeforeRedPacketId;
- (SInt64) beforeRedPacketId;
- (PBFetchRedPacketReqBuilder*) setBeforeRedPacketId:(SInt64) value;
- (PBFetchRedPacketReqBuilder*) clearBeforeRedPacketId;

- (BOOL) hasIsSystemSender;
- (BOOL) isSystemSender;
- (PBFetchRedPacketReqBuilder*) setIsSystemSender:(BOOL) value;
- (PBFetchRedPacketReqBuilder*) clearIsSystemSender;
@end

@interface PBFetchRedPacketResp : PBGeneratedMessage {
@private
  BOOL hasHasMore_:1;
  BOOL hasTotalCount_:1;
  BOOL hasTotalPage_:1;
  BOOL hasMyTicketCount_:1;
  BOOL hasRedPacketCount_:1;
  BOOL hasMore_:1;
  SInt32 totalCount;
  SInt32 totalPage;
  SInt64 myTicketCount;
  SInt64 redPacketCount;
  NSMutableArray * redPacketsArray;
}
- (BOOL) hasTotalCount;
- (BOOL) hasTotalPage;
- (BOOL) hasHasMore;
- (BOOL) hasMyTicketCount;
- (BOOL) hasRedPacketCount;
@property (readonly, strong) NSArray * redPackets;
@property (readonly) SInt32 totalCount;
@property (readonly) SInt32 totalPage;
- (BOOL) hasMore;
@property (readonly) SInt64 myTicketCount;
@property (readonly) SInt64 redPacketCount;
- (PBRedPacket*)redPacketsAtIndex:(NSUInteger)index;

+ (PBFetchRedPacketResp*) defaultInstance;
- (PBFetchRedPacketResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchRedPacketRespBuilder*) builder;
+ (PBFetchRedPacketRespBuilder*) builder;
+ (PBFetchRedPacketRespBuilder*) builderWithPrototype:(PBFetchRedPacketResp*) prototype;
- (PBFetchRedPacketRespBuilder*) toBuilder;

+ (PBFetchRedPacketResp*) parseFromData:(NSData*) data;
+ (PBFetchRedPacketResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchRedPacketResp*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchRedPacketResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchRedPacketResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchRedPacketResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchRedPacketRespBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchRedPacketResp* result;
}

- (PBFetchRedPacketResp*) defaultInstance;

- (PBFetchRedPacketRespBuilder*) clear;
- (PBFetchRedPacketRespBuilder*) clone;

- (PBFetchRedPacketResp*) build;
- (PBFetchRedPacketResp*) buildPartial;

- (PBFetchRedPacketRespBuilder*) mergeFrom:(PBFetchRedPacketResp*) other;
- (PBFetchRedPacketRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchRedPacketRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)redPackets;
- (PBRedPacket*)redPacketsAtIndex:(NSUInteger)index;
- (PBFetchRedPacketRespBuilder *)addRedPackets:(PBRedPacket*)value;
- (PBFetchRedPacketRespBuilder *)setRedPacketsArray:(NSArray *)array;
- (PBFetchRedPacketRespBuilder *)clearRedPackets;

- (BOOL) hasTotalCount;
- (SInt32) totalCount;
- (PBFetchRedPacketRespBuilder*) setTotalCount:(SInt32) value;
- (PBFetchRedPacketRespBuilder*) clearTotalCount;

- (BOOL) hasTotalPage;
- (SInt32) totalPage;
- (PBFetchRedPacketRespBuilder*) setTotalPage:(SInt32) value;
- (PBFetchRedPacketRespBuilder*) clearTotalPage;

- (BOOL) hasHasMore;
- (BOOL) hasMore;
- (PBFetchRedPacketRespBuilder*) setHasMore:(BOOL) value;
- (PBFetchRedPacketRespBuilder*) clearHasMore;

- (BOOL) hasMyTicketCount;
- (SInt64) myTicketCount;
- (PBFetchRedPacketRespBuilder*) setMyTicketCount:(SInt64) value;
- (PBFetchRedPacketRespBuilder*) clearMyTicketCount;

- (BOOL) hasRedPacketCount;
- (SInt64) redPacketCount;
- (PBFetchRedPacketRespBuilder*) setRedPacketCount:(SInt64) value;
- (PBFetchRedPacketRespBuilder*) clearRedPacketCount;
@end

@interface PBFetchRedPacketMyTicketCountReq : PBGeneratedMessage {
@private
  BOOL hasIsSystemSender_:1;
  BOOL hasTitleSearch_:1;
  BOOL hasSystemSender_:1;
  BOOL hasTypeFilter_:1;
  BOOL hasStatusFilter_:1;
  BOOL hasPage_:1;
  BOOL hasSenderPassportId_:1;
  BOOL hasBeforeRedPacketId_:1;
  BOOL isSystemSender_:1;
  NSString* titleSearch;
  PBSystemSender* systemSender;
  PBRedPacketType typeFilter;
  PBFetchRedPacketMyTicketCountReqRedPacketStatus statusFilter;
  SInt32 page;
  SInt64 senderPassportId;
  SInt64 beforeRedPacketId;
}
- (BOOL) hasSenderPassportId;
- (BOOL) hasSystemSender;
- (BOOL) hasTypeFilter;
- (BOOL) hasStatusFilter;
- (BOOL) hasTitleSearch;
- (BOOL) hasPage;
- (BOOL) hasBeforeRedPacketId;
- (BOOL) hasIsSystemSender;
@property (readonly) SInt64 senderPassportId;
@property (readonly, strong) PBSystemSender* systemSender;
@property (readonly) PBRedPacketType typeFilter;
@property (readonly) PBFetchRedPacketMyTicketCountReqRedPacketStatus statusFilter;
@property (readonly, strong) NSString* titleSearch;
@property (readonly) SInt32 page;
@property (readonly) SInt64 beforeRedPacketId;
- (BOOL) isSystemSender;

+ (PBFetchRedPacketMyTicketCountReq*) defaultInstance;
- (PBFetchRedPacketMyTicketCountReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchRedPacketMyTicketCountReqBuilder*) builder;
+ (PBFetchRedPacketMyTicketCountReqBuilder*) builder;
+ (PBFetchRedPacketMyTicketCountReqBuilder*) builderWithPrototype:(PBFetchRedPacketMyTicketCountReq*) prototype;
- (PBFetchRedPacketMyTicketCountReqBuilder*) toBuilder;

+ (PBFetchRedPacketMyTicketCountReq*) parseFromData:(NSData*) data;
+ (PBFetchRedPacketMyTicketCountReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchRedPacketMyTicketCountReq*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchRedPacketMyTicketCountReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchRedPacketMyTicketCountReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchRedPacketMyTicketCountReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchRedPacketMyTicketCountReqBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchRedPacketMyTicketCountReq* result;
}

- (PBFetchRedPacketMyTicketCountReq*) defaultInstance;

- (PBFetchRedPacketMyTicketCountReqBuilder*) clear;
- (PBFetchRedPacketMyTicketCountReqBuilder*) clone;

- (PBFetchRedPacketMyTicketCountReq*) build;
- (PBFetchRedPacketMyTicketCountReq*) buildPartial;

- (PBFetchRedPacketMyTicketCountReqBuilder*) mergeFrom:(PBFetchRedPacketMyTicketCountReq*) other;
- (PBFetchRedPacketMyTicketCountReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchRedPacketMyTicketCountReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSenderPassportId;
- (SInt64) senderPassportId;
- (PBFetchRedPacketMyTicketCountReqBuilder*) setSenderPassportId:(SInt64) value;
- (PBFetchRedPacketMyTicketCountReqBuilder*) clearSenderPassportId;

- (BOOL) hasSystemSender;
- (PBSystemSender*) systemSender;
- (PBFetchRedPacketMyTicketCountReqBuilder*) setSystemSender:(PBSystemSender*) value;
- (PBFetchRedPacketMyTicketCountReqBuilder*) setSystemSenderBuilder:(PBSystemSenderBuilder*) builderForValue;
- (PBFetchRedPacketMyTicketCountReqBuilder*) mergeSystemSender:(PBSystemSender*) value;
- (PBFetchRedPacketMyTicketCountReqBuilder*) clearSystemSender;

- (BOOL) hasTypeFilter;
- (PBRedPacketType) typeFilter;
- (PBFetchRedPacketMyTicketCountReqBuilder*) setTypeFilter:(PBRedPacketType) value;
- (PBFetchRedPacketMyTicketCountReqBuilder*) clearTypeFilter;

- (BOOL) hasStatusFilter;
- (PBFetchRedPacketMyTicketCountReqRedPacketStatus) statusFilter;
- (PBFetchRedPacketMyTicketCountReqBuilder*) setStatusFilter:(PBFetchRedPacketMyTicketCountReqRedPacketStatus) value;
- (PBFetchRedPacketMyTicketCountReqBuilder*) clearStatusFilter;

- (BOOL) hasTitleSearch;
- (NSString*) titleSearch;
- (PBFetchRedPacketMyTicketCountReqBuilder*) setTitleSearch:(NSString*) value;
- (PBFetchRedPacketMyTicketCountReqBuilder*) clearTitleSearch;

- (BOOL) hasPage;
- (SInt32) page;
- (PBFetchRedPacketMyTicketCountReqBuilder*) setPage:(SInt32) value;
- (PBFetchRedPacketMyTicketCountReqBuilder*) clearPage;

- (BOOL) hasBeforeRedPacketId;
- (SInt64) beforeRedPacketId;
- (PBFetchRedPacketMyTicketCountReqBuilder*) setBeforeRedPacketId:(SInt64) value;
- (PBFetchRedPacketMyTicketCountReqBuilder*) clearBeforeRedPacketId;

- (BOOL) hasIsSystemSender;
- (BOOL) isSystemSender;
- (PBFetchRedPacketMyTicketCountReqBuilder*) setIsSystemSender:(BOOL) value;
- (PBFetchRedPacketMyTicketCountReqBuilder*) clearIsSystemSender;
@end

@interface PBFetchRedPacketMyTicketCountResp : PBGeneratedMessage {
@private
  BOOL hasMyTicketCount_:1;
  SInt64 myTicketCount;
}
- (BOOL) hasMyTicketCount;
@property (readonly) SInt64 myTicketCount;

+ (PBFetchRedPacketMyTicketCountResp*) defaultInstance;
- (PBFetchRedPacketMyTicketCountResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchRedPacketMyTicketCountRespBuilder*) builder;
+ (PBFetchRedPacketMyTicketCountRespBuilder*) builder;
+ (PBFetchRedPacketMyTicketCountRespBuilder*) builderWithPrototype:(PBFetchRedPacketMyTicketCountResp*) prototype;
- (PBFetchRedPacketMyTicketCountRespBuilder*) toBuilder;

+ (PBFetchRedPacketMyTicketCountResp*) parseFromData:(NSData*) data;
+ (PBFetchRedPacketMyTicketCountResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchRedPacketMyTicketCountResp*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchRedPacketMyTicketCountResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchRedPacketMyTicketCountResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchRedPacketMyTicketCountResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchRedPacketMyTicketCountRespBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchRedPacketMyTicketCountResp* result;
}

- (PBFetchRedPacketMyTicketCountResp*) defaultInstance;

- (PBFetchRedPacketMyTicketCountRespBuilder*) clear;
- (PBFetchRedPacketMyTicketCountRespBuilder*) clone;

- (PBFetchRedPacketMyTicketCountResp*) build;
- (PBFetchRedPacketMyTicketCountResp*) buildPartial;

- (PBFetchRedPacketMyTicketCountRespBuilder*) mergeFrom:(PBFetchRedPacketMyTicketCountResp*) other;
- (PBFetchRedPacketMyTicketCountRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchRedPacketMyTicketCountRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMyTicketCount;
- (SInt64) myTicketCount;
- (PBFetchRedPacketMyTicketCountRespBuilder*) setMyTicketCount:(SInt64) value;
- (PBFetchRedPacketMyTicketCountRespBuilder*) clearMyTicketCount;
@end

@interface PBFetchRedPacketsReq : PBGeneratedMessage {
@private
  PBAppendableArray * packectIdsArray;
}
@property (readonly, strong) PBArray * packectIds;
- (SInt64)packectIdsAtIndex:(NSUInteger)index;

+ (PBFetchRedPacketsReq*) defaultInstance;
- (PBFetchRedPacketsReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchRedPacketsReqBuilder*) builder;
+ (PBFetchRedPacketsReqBuilder*) builder;
+ (PBFetchRedPacketsReqBuilder*) builderWithPrototype:(PBFetchRedPacketsReq*) prototype;
- (PBFetchRedPacketsReqBuilder*) toBuilder;

+ (PBFetchRedPacketsReq*) parseFromData:(NSData*) data;
+ (PBFetchRedPacketsReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchRedPacketsReq*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchRedPacketsReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchRedPacketsReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchRedPacketsReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchRedPacketsReqBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchRedPacketsReq* result;
}

- (PBFetchRedPacketsReq*) defaultInstance;

- (PBFetchRedPacketsReqBuilder*) clear;
- (PBFetchRedPacketsReqBuilder*) clone;

- (PBFetchRedPacketsReq*) build;
- (PBFetchRedPacketsReq*) buildPartial;

- (PBFetchRedPacketsReqBuilder*) mergeFrom:(PBFetchRedPacketsReq*) other;
- (PBFetchRedPacketsReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchRedPacketsReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)packectIds;
- (SInt64)packectIdsAtIndex:(NSUInteger)index;
- (PBFetchRedPacketsReqBuilder *)addPackectIds:(SInt64)value;
- (PBFetchRedPacketsReqBuilder *)setPackectIdsArray:(NSArray *)array;
- (PBFetchRedPacketsReqBuilder *)setPackectIdsValues:(const SInt64 *)values count:(NSUInteger)count;
- (PBFetchRedPacketsReqBuilder *)clearPackectIds;
@end

@interface PBFetchRedPacketsResp : PBGeneratedMessage {
@private
  NSMutableArray * packetsArray;
}
@property (readonly, strong) NSArray * packets;
- (PBRedPacket*)packetsAtIndex:(NSUInteger)index;

+ (PBFetchRedPacketsResp*) defaultInstance;
- (PBFetchRedPacketsResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchRedPacketsRespBuilder*) builder;
+ (PBFetchRedPacketsRespBuilder*) builder;
+ (PBFetchRedPacketsRespBuilder*) builderWithPrototype:(PBFetchRedPacketsResp*) prototype;
- (PBFetchRedPacketsRespBuilder*) toBuilder;

+ (PBFetchRedPacketsResp*) parseFromData:(NSData*) data;
+ (PBFetchRedPacketsResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchRedPacketsResp*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchRedPacketsResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchRedPacketsResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchRedPacketsResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchRedPacketsRespBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchRedPacketsResp* result;
}

- (PBFetchRedPacketsResp*) defaultInstance;

- (PBFetchRedPacketsRespBuilder*) clear;
- (PBFetchRedPacketsRespBuilder*) clone;

- (PBFetchRedPacketsResp*) build;
- (PBFetchRedPacketsResp*) buildPartial;

- (PBFetchRedPacketsRespBuilder*) mergeFrom:(PBFetchRedPacketsResp*) other;
- (PBFetchRedPacketsRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchRedPacketsRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)packets;
- (PBRedPacket*)packetsAtIndex:(NSUInteger)index;
- (PBFetchRedPacketsRespBuilder *)addPackets:(PBRedPacket*)value;
- (PBFetchRedPacketsRespBuilder *)setPacketsArray:(NSArray *)array;
- (PBFetchRedPacketsRespBuilder *)clearPackets;
@end

@interface PBFetchRedPacketTicketReq : PBGeneratedMessage {
@private
  BOOL hasRedPacketId_:1;
  BOOL hasOwnerPassportId_:1;
  BOOL hasBeforeTicketId_:1;
  BOOL hasPage_:1;
  SInt64 redPacketId;
  SInt64 ownerPassportId;
  SInt64 beforeTicketId;
  SInt64 page;
}
- (BOOL) hasRedPacketId;
- (BOOL) hasOwnerPassportId;
- (BOOL) hasBeforeTicketId;
- (BOOL) hasPage;
@property (readonly) SInt64 redPacketId;
@property (readonly) SInt64 ownerPassportId;
@property (readonly) SInt64 beforeTicketId;
@property (readonly) SInt64 page;

+ (PBFetchRedPacketTicketReq*) defaultInstance;
- (PBFetchRedPacketTicketReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchRedPacketTicketReqBuilder*) builder;
+ (PBFetchRedPacketTicketReqBuilder*) builder;
+ (PBFetchRedPacketTicketReqBuilder*) builderWithPrototype:(PBFetchRedPacketTicketReq*) prototype;
- (PBFetchRedPacketTicketReqBuilder*) toBuilder;

+ (PBFetchRedPacketTicketReq*) parseFromData:(NSData*) data;
+ (PBFetchRedPacketTicketReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchRedPacketTicketReq*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchRedPacketTicketReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchRedPacketTicketReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchRedPacketTicketReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchRedPacketTicketReqBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchRedPacketTicketReq* result;
}

- (PBFetchRedPacketTicketReq*) defaultInstance;

- (PBFetchRedPacketTicketReqBuilder*) clear;
- (PBFetchRedPacketTicketReqBuilder*) clone;

- (PBFetchRedPacketTicketReq*) build;
- (PBFetchRedPacketTicketReq*) buildPartial;

- (PBFetchRedPacketTicketReqBuilder*) mergeFrom:(PBFetchRedPacketTicketReq*) other;
- (PBFetchRedPacketTicketReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchRedPacketTicketReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRedPacketId;
- (SInt64) redPacketId;
- (PBFetchRedPacketTicketReqBuilder*) setRedPacketId:(SInt64) value;
- (PBFetchRedPacketTicketReqBuilder*) clearRedPacketId;

- (BOOL) hasOwnerPassportId;
- (SInt64) ownerPassportId;
- (PBFetchRedPacketTicketReqBuilder*) setOwnerPassportId:(SInt64) value;
- (PBFetchRedPacketTicketReqBuilder*) clearOwnerPassportId;

- (BOOL) hasBeforeTicketId;
- (SInt64) beforeTicketId;
- (PBFetchRedPacketTicketReqBuilder*) setBeforeTicketId:(SInt64) value;
- (PBFetchRedPacketTicketReqBuilder*) clearBeforeTicketId;

- (BOOL) hasPage;
- (SInt64) page;
- (PBFetchRedPacketTicketReqBuilder*) setPage:(SInt64) value;
- (PBFetchRedPacketTicketReqBuilder*) clearPage;
@end

@interface PBFetchRedPacketTicketResp : PBGeneratedMessage {
@private
  BOOL hasHasMore_:1;
  BOOL hasTotalCount_:1;
  BOOL hasReceivedCount_:1;
  BOOL hasMore_:1;
  SInt64 totalCount;
  SInt64 receivedCount;
  NSMutableArray * ticketsArray;
}
- (BOOL) hasHasMore;
- (BOOL) hasTotalCount;
- (BOOL) hasReceivedCount;
@property (readonly, strong) NSArray * tickets;
- (BOOL) hasMore;
@property (readonly) SInt64 totalCount;
@property (readonly) SInt64 receivedCount;
- (PBRedPacketTicket*)ticketsAtIndex:(NSUInteger)index;

+ (PBFetchRedPacketTicketResp*) defaultInstance;
- (PBFetchRedPacketTicketResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchRedPacketTicketRespBuilder*) builder;
+ (PBFetchRedPacketTicketRespBuilder*) builder;
+ (PBFetchRedPacketTicketRespBuilder*) builderWithPrototype:(PBFetchRedPacketTicketResp*) prototype;
- (PBFetchRedPacketTicketRespBuilder*) toBuilder;

+ (PBFetchRedPacketTicketResp*) parseFromData:(NSData*) data;
+ (PBFetchRedPacketTicketResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchRedPacketTicketResp*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchRedPacketTicketResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchRedPacketTicketResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchRedPacketTicketResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchRedPacketTicketRespBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchRedPacketTicketResp* result;
}

- (PBFetchRedPacketTicketResp*) defaultInstance;

- (PBFetchRedPacketTicketRespBuilder*) clear;
- (PBFetchRedPacketTicketRespBuilder*) clone;

- (PBFetchRedPacketTicketResp*) build;
- (PBFetchRedPacketTicketResp*) buildPartial;

- (PBFetchRedPacketTicketRespBuilder*) mergeFrom:(PBFetchRedPacketTicketResp*) other;
- (PBFetchRedPacketTicketRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchRedPacketTicketRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)tickets;
- (PBRedPacketTicket*)ticketsAtIndex:(NSUInteger)index;
- (PBFetchRedPacketTicketRespBuilder *)addTickets:(PBRedPacketTicket*)value;
- (PBFetchRedPacketTicketRespBuilder *)setTicketsArray:(NSArray *)array;
- (PBFetchRedPacketTicketRespBuilder *)clearTickets;

- (BOOL) hasHasMore;
- (BOOL) hasMore;
- (PBFetchRedPacketTicketRespBuilder*) setHasMore:(BOOL) value;
- (PBFetchRedPacketTicketRespBuilder*) clearHasMore;

- (BOOL) hasTotalCount;
- (SInt64) totalCount;
- (PBFetchRedPacketTicketRespBuilder*) setTotalCount:(SInt64) value;
- (PBFetchRedPacketTicketRespBuilder*) clearTotalCount;

- (BOOL) hasReceivedCount;
- (SInt64) receivedCount;
- (PBFetchRedPacketTicketRespBuilder*) setReceivedCount:(SInt64) value;
- (PBFetchRedPacketTicketRespBuilder*) clearReceivedCount;
@end

@interface PBSetRedPacketTicketReceivedReq : PBGeneratedMessage {
@private
  BOOL hasCode_:1;
  BOOL hasRedPacketId_:1;
  NSString* code;
  SInt64 redPacketId;
}
- (BOOL) hasRedPacketId;
- (BOOL) hasCode;
@property (readonly) SInt64 redPacketId;
@property (readonly, strong) NSString* code;

+ (PBSetRedPacketTicketReceivedReq*) defaultInstance;
- (PBSetRedPacketTicketReceivedReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBSetRedPacketTicketReceivedReqBuilder*) builder;
+ (PBSetRedPacketTicketReceivedReqBuilder*) builder;
+ (PBSetRedPacketTicketReceivedReqBuilder*) builderWithPrototype:(PBSetRedPacketTicketReceivedReq*) prototype;
- (PBSetRedPacketTicketReceivedReqBuilder*) toBuilder;

+ (PBSetRedPacketTicketReceivedReq*) parseFromData:(NSData*) data;
+ (PBSetRedPacketTicketReceivedReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSetRedPacketTicketReceivedReq*) parseFromInputStream:(NSInputStream*) input;
+ (PBSetRedPacketTicketReceivedReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSetRedPacketTicketReceivedReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBSetRedPacketTicketReceivedReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBSetRedPacketTicketReceivedReqBuilder : PBGeneratedMessageBuilder {
@private
  PBSetRedPacketTicketReceivedReq* result;
}

- (PBSetRedPacketTicketReceivedReq*) defaultInstance;

- (PBSetRedPacketTicketReceivedReqBuilder*) clear;
- (PBSetRedPacketTicketReceivedReqBuilder*) clone;

- (PBSetRedPacketTicketReceivedReq*) build;
- (PBSetRedPacketTicketReceivedReq*) buildPartial;

- (PBSetRedPacketTicketReceivedReqBuilder*) mergeFrom:(PBSetRedPacketTicketReceivedReq*) other;
- (PBSetRedPacketTicketReceivedReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBSetRedPacketTicketReceivedReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRedPacketId;
- (SInt64) redPacketId;
- (PBSetRedPacketTicketReceivedReqBuilder*) setRedPacketId:(SInt64) value;
- (PBSetRedPacketTicketReceivedReqBuilder*) clearRedPacketId;

- (BOOL) hasCode;
- (NSString*) code;
- (PBSetRedPacketTicketReceivedReqBuilder*) setCode:(NSString*) value;
- (PBSetRedPacketTicketReceivedReqBuilder*) clearCode;
@end

@interface PBSetRedPacketTicketReceivedResp : PBGeneratedMessage {
@private
  BOOL hasSuccessful_:1;
  BOOL hasMsg_:1;
  BOOL successful_:1;
  NSString* msg;
}
- (BOOL) hasSuccessful;
- (BOOL) hasMsg;
- (BOOL) successful;
@property (readonly, strong) NSString* msg;

+ (PBSetRedPacketTicketReceivedResp*) defaultInstance;
- (PBSetRedPacketTicketReceivedResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBSetRedPacketTicketReceivedRespBuilder*) builder;
+ (PBSetRedPacketTicketReceivedRespBuilder*) builder;
+ (PBSetRedPacketTicketReceivedRespBuilder*) builderWithPrototype:(PBSetRedPacketTicketReceivedResp*) prototype;
- (PBSetRedPacketTicketReceivedRespBuilder*) toBuilder;

+ (PBSetRedPacketTicketReceivedResp*) parseFromData:(NSData*) data;
+ (PBSetRedPacketTicketReceivedResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSetRedPacketTicketReceivedResp*) parseFromInputStream:(NSInputStream*) input;
+ (PBSetRedPacketTicketReceivedResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSetRedPacketTicketReceivedResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBSetRedPacketTicketReceivedResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBSetRedPacketTicketReceivedRespBuilder : PBGeneratedMessageBuilder {
@private
  PBSetRedPacketTicketReceivedResp* result;
}

- (PBSetRedPacketTicketReceivedResp*) defaultInstance;

- (PBSetRedPacketTicketReceivedRespBuilder*) clear;
- (PBSetRedPacketTicketReceivedRespBuilder*) clone;

- (PBSetRedPacketTicketReceivedResp*) build;
- (PBSetRedPacketTicketReceivedResp*) buildPartial;

- (PBSetRedPacketTicketReceivedRespBuilder*) mergeFrom:(PBSetRedPacketTicketReceivedResp*) other;
- (PBSetRedPacketTicketReceivedRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBSetRedPacketTicketReceivedRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSuccessful;
- (BOOL) successful;
- (PBSetRedPacketTicketReceivedRespBuilder*) setSuccessful:(BOOL) value;
- (PBSetRedPacketTicketReceivedRespBuilder*) clearSuccessful;

- (BOOL) hasMsg;
- (NSString*) msg;
- (PBSetRedPacketTicketReceivedRespBuilder*) setMsg:(NSString*) value;
- (PBSetRedPacketTicketReceivedRespBuilder*) clearMsg;
@end

@interface PBSendWaveReq : PBGeneratedMessage {
@private
  BOOL hasWave_:1;
  BOOL hasParkId_:1;
  PBWave* wave;
  SInt64 parkId;
}
- (BOOL) hasWave;
- (BOOL) hasParkId;
@property (readonly, strong) PBWave* wave;
@property (readonly) SInt64 parkId;

+ (PBSendWaveReq*) defaultInstance;
- (PBSendWaveReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBSendWaveReqBuilder*) builder;
+ (PBSendWaveReqBuilder*) builder;
+ (PBSendWaveReqBuilder*) builderWithPrototype:(PBSendWaveReq*) prototype;
- (PBSendWaveReqBuilder*) toBuilder;

+ (PBSendWaveReq*) parseFromData:(NSData*) data;
+ (PBSendWaveReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSendWaveReq*) parseFromInputStream:(NSInputStream*) input;
+ (PBSendWaveReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSendWaveReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBSendWaveReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBSendWaveReqBuilder : PBGeneratedMessageBuilder {
@private
  PBSendWaveReq* result;
}

- (PBSendWaveReq*) defaultInstance;

- (PBSendWaveReqBuilder*) clear;
- (PBSendWaveReqBuilder*) clone;

- (PBSendWaveReq*) build;
- (PBSendWaveReq*) buildPartial;

- (PBSendWaveReqBuilder*) mergeFrom:(PBSendWaveReq*) other;
- (PBSendWaveReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBSendWaveReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasWave;
- (PBWave*) wave;
- (PBSendWaveReqBuilder*) setWave:(PBWave*) value;
- (PBSendWaveReqBuilder*) setWaveBuilder:(PBWaveBuilder*) builderForValue;
- (PBSendWaveReqBuilder*) mergeWave:(PBWave*) value;
- (PBSendWaveReqBuilder*) clearWave;

- (BOOL) hasParkId;
- (SInt64) parkId;
- (PBSendWaveReqBuilder*) setParkId:(SInt64) value;
- (PBSendWaveReqBuilder*) clearParkId;
@end

@interface PBSendWaveResp : PBGeneratedMessage {
@private
  BOOL hasWave_:1;
  PBWave* wave;
}
- (BOOL) hasWave;
@property (readonly, strong) PBWave* wave;

+ (PBSendWaveResp*) defaultInstance;
- (PBSendWaveResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBSendWaveRespBuilder*) builder;
+ (PBSendWaveRespBuilder*) builder;
+ (PBSendWaveRespBuilder*) builderWithPrototype:(PBSendWaveResp*) prototype;
- (PBSendWaveRespBuilder*) toBuilder;

+ (PBSendWaveResp*) parseFromData:(NSData*) data;
+ (PBSendWaveResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSendWaveResp*) parseFromInputStream:(NSInputStream*) input;
+ (PBSendWaveResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSendWaveResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBSendWaveResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBSendWaveRespBuilder : PBGeneratedMessageBuilder {
@private
  PBSendWaveResp* result;
}

- (PBSendWaveResp*) defaultInstance;

- (PBSendWaveRespBuilder*) clear;
- (PBSendWaveRespBuilder*) clone;

- (PBSendWaveResp*) build;
- (PBSendWaveResp*) buildPartial;

- (PBSendWaveRespBuilder*) mergeFrom:(PBSendWaveResp*) other;
- (PBSendWaveRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBSendWaveRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasWave;
- (PBWave*) wave;
- (PBSendWaveRespBuilder*) setWave:(PBWave*) value;
- (PBSendWaveRespBuilder*) setWaveBuilder:(PBWaveBuilder*) builderForValue;
- (PBSendWaveRespBuilder*) mergeWave:(PBWave*) value;
- (PBSendWaveRespBuilder*) clearWave;
@end

@interface PBFetchWavesReq : PBGeneratedMessage {
@private
  PBAppendableArray * waveIdsArray;
}
@property (readonly, strong) PBArray * waveIds;
- (SInt64)waveIdsAtIndex:(NSUInteger)index;

+ (PBFetchWavesReq*) defaultInstance;
- (PBFetchWavesReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchWavesReqBuilder*) builder;
+ (PBFetchWavesReqBuilder*) builder;
+ (PBFetchWavesReqBuilder*) builderWithPrototype:(PBFetchWavesReq*) prototype;
- (PBFetchWavesReqBuilder*) toBuilder;

+ (PBFetchWavesReq*) parseFromData:(NSData*) data;
+ (PBFetchWavesReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWavesReq*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchWavesReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWavesReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchWavesReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchWavesReqBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchWavesReq* result;
}

- (PBFetchWavesReq*) defaultInstance;

- (PBFetchWavesReqBuilder*) clear;
- (PBFetchWavesReqBuilder*) clone;

- (PBFetchWavesReq*) build;
- (PBFetchWavesReq*) buildPartial;

- (PBFetchWavesReqBuilder*) mergeFrom:(PBFetchWavesReq*) other;
- (PBFetchWavesReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchWavesReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)waveIds;
- (SInt64)waveIdsAtIndex:(NSUInteger)index;
- (PBFetchWavesReqBuilder *)addWaveIds:(SInt64)value;
- (PBFetchWavesReqBuilder *)setWaveIdsArray:(NSArray *)array;
- (PBFetchWavesReqBuilder *)setWaveIdsValues:(const SInt64 *)values count:(NSUInteger)count;
- (PBFetchWavesReqBuilder *)clearWaveIds;
@end

@interface PBFetchWavesResp : PBGeneratedMessage {
@private
  NSMutableArray * wavesArray;
}
@property (readonly, strong) NSArray * waves;
- (PBWave*)wavesAtIndex:(NSUInteger)index;

+ (PBFetchWavesResp*) defaultInstance;
- (PBFetchWavesResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchWavesRespBuilder*) builder;
+ (PBFetchWavesRespBuilder*) builder;
+ (PBFetchWavesRespBuilder*) builderWithPrototype:(PBFetchWavesResp*) prototype;
- (PBFetchWavesRespBuilder*) toBuilder;

+ (PBFetchWavesResp*) parseFromData:(NSData*) data;
+ (PBFetchWavesResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWavesResp*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchWavesResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWavesResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchWavesResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchWavesRespBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchWavesResp* result;
}

- (PBFetchWavesResp*) defaultInstance;

- (PBFetchWavesRespBuilder*) clear;
- (PBFetchWavesRespBuilder*) clone;

- (PBFetchWavesResp*) build;
- (PBFetchWavesResp*) buildPartial;

- (PBFetchWavesRespBuilder*) mergeFrom:(PBFetchWavesResp*) other;
- (PBFetchWavesRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchWavesRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)waves;
- (PBWave*)wavesAtIndex:(NSUInteger)index;
- (PBFetchWavesRespBuilder *)addWaves:(PBWave*)value;
- (PBFetchWavesRespBuilder *)setWavesArray:(NSArray *)array;
- (PBFetchWavesRespBuilder *)clearWaves;
@end

@interface PBFetchWavesAndComentsReq : PBGeneratedMessage {
@private
  PBAppendableArray * waveIdsArray;
}
@property (readonly, strong) PBArray * waveIds;
- (SInt64)waveIdsAtIndex:(NSUInteger)index;

+ (PBFetchWavesAndComentsReq*) defaultInstance;
- (PBFetchWavesAndComentsReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchWavesAndComentsReqBuilder*) builder;
+ (PBFetchWavesAndComentsReqBuilder*) builder;
+ (PBFetchWavesAndComentsReqBuilder*) builderWithPrototype:(PBFetchWavesAndComentsReq*) prototype;
- (PBFetchWavesAndComentsReqBuilder*) toBuilder;

+ (PBFetchWavesAndComentsReq*) parseFromData:(NSData*) data;
+ (PBFetchWavesAndComentsReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWavesAndComentsReq*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchWavesAndComentsReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWavesAndComentsReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchWavesAndComentsReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchWavesAndComentsReqBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchWavesAndComentsReq* result;
}

- (PBFetchWavesAndComentsReq*) defaultInstance;

- (PBFetchWavesAndComentsReqBuilder*) clear;
- (PBFetchWavesAndComentsReqBuilder*) clone;

- (PBFetchWavesAndComentsReq*) build;
- (PBFetchWavesAndComentsReq*) buildPartial;

- (PBFetchWavesAndComentsReqBuilder*) mergeFrom:(PBFetchWavesAndComentsReq*) other;
- (PBFetchWavesAndComentsReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchWavesAndComentsReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)waveIds;
- (SInt64)waveIdsAtIndex:(NSUInteger)index;
- (PBFetchWavesAndComentsReqBuilder *)addWaveIds:(SInt64)value;
- (PBFetchWavesAndComentsReqBuilder *)setWaveIdsArray:(NSArray *)array;
- (PBFetchWavesAndComentsReqBuilder *)setWaveIdsValues:(const SInt64 *)values count:(NSUInteger)count;
- (PBFetchWavesAndComentsReqBuilder *)clearWaveIds;
@end

@interface PBFetchWavesAndComentsResp : PBGeneratedMessage {
@private
  NSMutableArray * abstractsArray;
}
@property (readonly, strong) NSArray * abstracts;
- (PBFetchWavesAndComentsRespPBWaveAbstract*)abstractsAtIndex:(NSUInteger)index;

+ (PBFetchWavesAndComentsResp*) defaultInstance;
- (PBFetchWavesAndComentsResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchWavesAndComentsRespBuilder*) builder;
+ (PBFetchWavesAndComentsRespBuilder*) builder;
+ (PBFetchWavesAndComentsRespBuilder*) builderWithPrototype:(PBFetchWavesAndComentsResp*) prototype;
- (PBFetchWavesAndComentsRespBuilder*) toBuilder;

+ (PBFetchWavesAndComentsResp*) parseFromData:(NSData*) data;
+ (PBFetchWavesAndComentsResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWavesAndComentsResp*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchWavesAndComentsResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWavesAndComentsResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchWavesAndComentsResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchWavesAndComentsRespPBWaveAbstract : PBGeneratedMessage {
@private
  BOOL hasWave_:1;
  BOOL hasLikeCommentCount_:1;
  BOOL hasTextCommentCount_:1;
  BOOL hasWaveId_:1;
  BOOL hasYouLikeCommentId_:1;
  PBWave* wave;
  SInt32 likeCommentCount;
  SInt32 textCommentCount;
  SInt64 waveId;
  SInt64 youLikeCommentId;
  PBAppendableArray * topTextCommentIdsArray;
}
- (BOOL) hasWaveId;
- (BOOL) hasLikeCommentCount;
- (BOOL) hasTextCommentCount;
- (BOOL) hasYouLikeCommentId;
- (BOOL) hasWave;
@property (readonly) SInt64 waveId;
@property (readonly, strong) PBArray * topTextCommentIds;
@property (readonly) SInt32 likeCommentCount;
@property (readonly) SInt32 textCommentCount;
@property (readonly) SInt64 youLikeCommentId;
@property (readonly, strong) PBWave* wave;
- (SInt64)topTextCommentIdsAtIndex:(NSUInteger)index;

+ (PBFetchWavesAndComentsRespPBWaveAbstract*) defaultInstance;
- (PBFetchWavesAndComentsRespPBWaveAbstract*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder*) builder;
+ (PBFetchWavesAndComentsRespPBWaveAbstractBuilder*) builder;
+ (PBFetchWavesAndComentsRespPBWaveAbstractBuilder*) builderWithPrototype:(PBFetchWavesAndComentsRespPBWaveAbstract*) prototype;
- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder*) toBuilder;

+ (PBFetchWavesAndComentsRespPBWaveAbstract*) parseFromData:(NSData*) data;
+ (PBFetchWavesAndComentsRespPBWaveAbstract*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWavesAndComentsRespPBWaveAbstract*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchWavesAndComentsRespPBWaveAbstract*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWavesAndComentsRespPBWaveAbstract*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchWavesAndComentsRespPBWaveAbstract*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchWavesAndComentsRespPBWaveAbstractBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchWavesAndComentsRespPBWaveAbstract* result;
}

- (PBFetchWavesAndComentsRespPBWaveAbstract*) defaultInstance;

- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder*) clear;
- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder*) clone;

- (PBFetchWavesAndComentsRespPBWaveAbstract*) build;
- (PBFetchWavesAndComentsRespPBWaveAbstract*) buildPartial;

- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder*) mergeFrom:(PBFetchWavesAndComentsRespPBWaveAbstract*) other;
- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasWaveId;
- (SInt64) waveId;
- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder*) setWaveId:(SInt64) value;
- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder*) clearWaveId;

- (PBAppendableArray *)topTextCommentIds;
- (SInt64)topTextCommentIdsAtIndex:(NSUInteger)index;
- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder *)addTopTextCommentIds:(SInt64)value;
- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder *)setTopTextCommentIdsArray:(NSArray *)array;
- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder *)setTopTextCommentIdsValues:(const SInt64 *)values count:(NSUInteger)count;
- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder *)clearTopTextCommentIds;

- (BOOL) hasLikeCommentCount;
- (SInt32) likeCommentCount;
- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder*) setLikeCommentCount:(SInt32) value;
- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder*) clearLikeCommentCount;

- (BOOL) hasTextCommentCount;
- (SInt32) textCommentCount;
- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder*) setTextCommentCount:(SInt32) value;
- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder*) clearTextCommentCount;

- (BOOL) hasYouLikeCommentId;
- (SInt64) youLikeCommentId;
- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder*) setYouLikeCommentId:(SInt64) value;
- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder*) clearYouLikeCommentId;

- (BOOL) hasWave;
- (PBWave*) wave;
- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder*) setWave:(PBWave*) value;
- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder*) setWaveBuilder:(PBWaveBuilder*) builderForValue;
- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder*) mergeWave:(PBWave*) value;
- (PBFetchWavesAndComentsRespPBWaveAbstractBuilder*) clearWave;
@end

@interface PBFetchWavesAndComentsRespBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchWavesAndComentsResp* result;
}

- (PBFetchWavesAndComentsResp*) defaultInstance;

- (PBFetchWavesAndComentsRespBuilder*) clear;
- (PBFetchWavesAndComentsRespBuilder*) clone;

- (PBFetchWavesAndComentsResp*) build;
- (PBFetchWavesAndComentsResp*) buildPartial;

- (PBFetchWavesAndComentsRespBuilder*) mergeFrom:(PBFetchWavesAndComentsResp*) other;
- (PBFetchWavesAndComentsRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchWavesAndComentsRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)abstracts;
- (PBFetchWavesAndComentsRespPBWaveAbstract*)abstractsAtIndex:(NSUInteger)index;
- (PBFetchWavesAndComentsRespBuilder *)addAbstracts:(PBFetchWavesAndComentsRespPBWaveAbstract*)value;
- (PBFetchWavesAndComentsRespBuilder *)setAbstractsArray:(NSArray *)array;
- (PBFetchWavesAndComentsRespBuilder *)clearAbstracts;
@end

@interface PBSendWaveCommentReq : PBGeneratedMessage {
@private
  BOOL hasComment_:1;
  PBWaveComment* comment;
}
- (BOOL) hasComment;
@property (readonly, strong) PBWaveComment* comment;

+ (PBSendWaveCommentReq*) defaultInstance;
- (PBSendWaveCommentReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBSendWaveCommentReqBuilder*) builder;
+ (PBSendWaveCommentReqBuilder*) builder;
+ (PBSendWaveCommentReqBuilder*) builderWithPrototype:(PBSendWaveCommentReq*) prototype;
- (PBSendWaveCommentReqBuilder*) toBuilder;

+ (PBSendWaveCommentReq*) parseFromData:(NSData*) data;
+ (PBSendWaveCommentReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSendWaveCommentReq*) parseFromInputStream:(NSInputStream*) input;
+ (PBSendWaveCommentReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSendWaveCommentReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBSendWaveCommentReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBSendWaveCommentReqBuilder : PBGeneratedMessageBuilder {
@private
  PBSendWaveCommentReq* result;
}

- (PBSendWaveCommentReq*) defaultInstance;

- (PBSendWaveCommentReqBuilder*) clear;
- (PBSendWaveCommentReqBuilder*) clone;

- (PBSendWaveCommentReq*) build;
- (PBSendWaveCommentReq*) buildPartial;

- (PBSendWaveCommentReqBuilder*) mergeFrom:(PBSendWaveCommentReq*) other;
- (PBSendWaveCommentReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBSendWaveCommentReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasComment;
- (PBWaveComment*) comment;
- (PBSendWaveCommentReqBuilder*) setComment:(PBWaveComment*) value;
- (PBSendWaveCommentReqBuilder*) setCommentBuilder:(PBWaveCommentBuilder*) builderForValue;
- (PBSendWaveCommentReqBuilder*) mergeComment:(PBWaveComment*) value;
- (PBSendWaveCommentReqBuilder*) clearComment;
@end

@interface PBSendWaveCommentResp : PBGeneratedMessage {
@private
  BOOL hasComment_:1;
  PBWaveComment* comment;
}
- (BOOL) hasComment;
@property (readonly, strong) PBWaveComment* comment;

+ (PBSendWaveCommentResp*) defaultInstance;
- (PBSendWaveCommentResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBSendWaveCommentRespBuilder*) builder;
+ (PBSendWaveCommentRespBuilder*) builder;
+ (PBSendWaveCommentRespBuilder*) builderWithPrototype:(PBSendWaveCommentResp*) prototype;
- (PBSendWaveCommentRespBuilder*) toBuilder;

+ (PBSendWaveCommentResp*) parseFromData:(NSData*) data;
+ (PBSendWaveCommentResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSendWaveCommentResp*) parseFromInputStream:(NSInputStream*) input;
+ (PBSendWaveCommentResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBSendWaveCommentResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBSendWaveCommentResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBSendWaveCommentRespBuilder : PBGeneratedMessageBuilder {
@private
  PBSendWaveCommentResp* result;
}

- (PBSendWaveCommentResp*) defaultInstance;

- (PBSendWaveCommentRespBuilder*) clear;
- (PBSendWaveCommentRespBuilder*) clone;

- (PBSendWaveCommentResp*) build;
- (PBSendWaveCommentResp*) buildPartial;

- (PBSendWaveCommentRespBuilder*) mergeFrom:(PBSendWaveCommentResp*) other;
- (PBSendWaveCommentRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBSendWaveCommentRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasComment;
- (PBWaveComment*) comment;
- (PBSendWaveCommentRespBuilder*) setComment:(PBWaveComment*) value;
- (PBSendWaveCommentRespBuilder*) setCommentBuilder:(PBWaveCommentBuilder*) builderForValue;
- (PBSendWaveCommentRespBuilder*) mergeComment:(PBWaveComment*) value;
- (PBSendWaveCommentRespBuilder*) clearComment;
@end

@interface PBFetchWaveCommentReq : PBGeneratedMessage {
@private
  PBAppendableArray * commentIdsArray;
}
@property (readonly, strong) PBArray * commentIds;
- (SInt64)commentIdsAtIndex:(NSUInteger)index;

+ (PBFetchWaveCommentReq*) defaultInstance;
- (PBFetchWaveCommentReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchWaveCommentReqBuilder*) builder;
+ (PBFetchWaveCommentReqBuilder*) builder;
+ (PBFetchWaveCommentReqBuilder*) builderWithPrototype:(PBFetchWaveCommentReq*) prototype;
- (PBFetchWaveCommentReqBuilder*) toBuilder;

+ (PBFetchWaveCommentReq*) parseFromData:(NSData*) data;
+ (PBFetchWaveCommentReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWaveCommentReq*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchWaveCommentReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWaveCommentReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchWaveCommentReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchWaveCommentReqBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchWaveCommentReq* result;
}

- (PBFetchWaveCommentReq*) defaultInstance;

- (PBFetchWaveCommentReqBuilder*) clear;
- (PBFetchWaveCommentReqBuilder*) clone;

- (PBFetchWaveCommentReq*) build;
- (PBFetchWaveCommentReq*) buildPartial;

- (PBFetchWaveCommentReqBuilder*) mergeFrom:(PBFetchWaveCommentReq*) other;
- (PBFetchWaveCommentReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchWaveCommentReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)commentIds;
- (SInt64)commentIdsAtIndex:(NSUInteger)index;
- (PBFetchWaveCommentReqBuilder *)addCommentIds:(SInt64)value;
- (PBFetchWaveCommentReqBuilder *)setCommentIdsArray:(NSArray *)array;
- (PBFetchWaveCommentReqBuilder *)setCommentIdsValues:(const SInt64 *)values count:(NSUInteger)count;
- (PBFetchWaveCommentReqBuilder *)clearCommentIds;
@end

@interface PBFetchWaveCommentResp : PBGeneratedMessage {
@private
  NSMutableArray * commentsArray;
}
@property (readonly, strong) NSArray * comments;
- (PBWaveComment*)commentsAtIndex:(NSUInteger)index;

+ (PBFetchWaveCommentResp*) defaultInstance;
- (PBFetchWaveCommentResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchWaveCommentRespBuilder*) builder;
+ (PBFetchWaveCommentRespBuilder*) builder;
+ (PBFetchWaveCommentRespBuilder*) builderWithPrototype:(PBFetchWaveCommentResp*) prototype;
- (PBFetchWaveCommentRespBuilder*) toBuilder;

+ (PBFetchWaveCommentResp*) parseFromData:(NSData*) data;
+ (PBFetchWaveCommentResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWaveCommentResp*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchWaveCommentResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWaveCommentResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchWaveCommentResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchWaveCommentRespBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchWaveCommentResp* result;
}

- (PBFetchWaveCommentResp*) defaultInstance;

- (PBFetchWaveCommentRespBuilder*) clear;
- (PBFetchWaveCommentRespBuilder*) clone;

- (PBFetchWaveCommentResp*) build;
- (PBFetchWaveCommentResp*) buildPartial;

- (PBFetchWaveCommentRespBuilder*) mergeFrom:(PBFetchWaveCommentResp*) other;
- (PBFetchWaveCommentRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchWaveCommentRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)comments;
- (PBWaveComment*)commentsAtIndex:(NSUInteger)index;
- (PBFetchWaveCommentRespBuilder *)addComments:(PBWaveComment*)value;
- (PBFetchWaveCommentRespBuilder *)setCommentsArray:(NSArray *)array;
- (PBFetchWaveCommentRespBuilder *)clearComments;
@end

@interface PBDeleteWaveReq : PBGeneratedMessage {
@private
  PBAppendableArray * waveIdsArray;
}
@property (readonly, strong) PBArray * waveIds;
- (SInt64)waveIdsAtIndex:(NSUInteger)index;

+ (PBDeleteWaveReq*) defaultInstance;
- (PBDeleteWaveReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBDeleteWaveReqBuilder*) builder;
+ (PBDeleteWaveReqBuilder*) builder;
+ (PBDeleteWaveReqBuilder*) builderWithPrototype:(PBDeleteWaveReq*) prototype;
- (PBDeleteWaveReqBuilder*) toBuilder;

+ (PBDeleteWaveReq*) parseFromData:(NSData*) data;
+ (PBDeleteWaveReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDeleteWaveReq*) parseFromInputStream:(NSInputStream*) input;
+ (PBDeleteWaveReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDeleteWaveReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBDeleteWaveReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBDeleteWaveReqBuilder : PBGeneratedMessageBuilder {
@private
  PBDeleteWaveReq* result;
}

- (PBDeleteWaveReq*) defaultInstance;

- (PBDeleteWaveReqBuilder*) clear;
- (PBDeleteWaveReqBuilder*) clone;

- (PBDeleteWaveReq*) build;
- (PBDeleteWaveReq*) buildPartial;

- (PBDeleteWaveReqBuilder*) mergeFrom:(PBDeleteWaveReq*) other;
- (PBDeleteWaveReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBDeleteWaveReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)waveIds;
- (SInt64)waveIdsAtIndex:(NSUInteger)index;
- (PBDeleteWaveReqBuilder *)addWaveIds:(SInt64)value;
- (PBDeleteWaveReqBuilder *)setWaveIdsArray:(NSArray *)array;
- (PBDeleteWaveReqBuilder *)setWaveIdsValues:(const SInt64 *)values count:(NSUInteger)count;
- (PBDeleteWaveReqBuilder *)clearWaveIds;
@end

@interface PBDeleteWaveResp : PBGeneratedMessage {
@private
  PBAppendableArray * deletedWaveIdsArray;
}
@property (readonly, strong) PBArray * deletedWaveIds;
- (SInt64)deletedWaveIdsAtIndex:(NSUInteger)index;

+ (PBDeleteWaveResp*) defaultInstance;
- (PBDeleteWaveResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBDeleteWaveRespBuilder*) builder;
+ (PBDeleteWaveRespBuilder*) builder;
+ (PBDeleteWaveRespBuilder*) builderWithPrototype:(PBDeleteWaveResp*) prototype;
- (PBDeleteWaveRespBuilder*) toBuilder;

+ (PBDeleteWaveResp*) parseFromData:(NSData*) data;
+ (PBDeleteWaveResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDeleteWaveResp*) parseFromInputStream:(NSInputStream*) input;
+ (PBDeleteWaveResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDeleteWaveResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBDeleteWaveResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBDeleteWaveRespBuilder : PBGeneratedMessageBuilder {
@private
  PBDeleteWaveResp* result;
}

- (PBDeleteWaveResp*) defaultInstance;

- (PBDeleteWaveRespBuilder*) clear;
- (PBDeleteWaveRespBuilder*) clone;

- (PBDeleteWaveResp*) build;
- (PBDeleteWaveResp*) buildPartial;

- (PBDeleteWaveRespBuilder*) mergeFrom:(PBDeleteWaveResp*) other;
- (PBDeleteWaveRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBDeleteWaveRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)deletedWaveIds;
- (SInt64)deletedWaveIdsAtIndex:(NSUInteger)index;
- (PBDeleteWaveRespBuilder *)addDeletedWaveIds:(SInt64)value;
- (PBDeleteWaveRespBuilder *)setDeletedWaveIdsArray:(NSArray *)array;
- (PBDeleteWaveRespBuilder *)setDeletedWaveIdsValues:(const SInt64 *)values count:(NSUInteger)count;
- (PBDeleteWaveRespBuilder *)clearDeletedWaveIds;
@end

@interface PBFetchWaveIdsReq : PBGeneratedMessage {
@private
  BOOL hasWithBody_:1;
  BOOL hasSystemSender_:1;
  BOOL hasPage_:1;
  BOOL hasSenderPassportId_:1;
  BOOL hasBeforeWaveId_:1;
  BOOL hasSystemSenderId_:1;
  BOOL withBody_:1;
  PBSystemSender* systemSender;
  SInt32 page;
  SInt64 senderPassportId;
  SInt64 beforeWaveId;
  SInt64 systemSenderId;
}
- (BOOL) hasPage;
- (BOOL) hasSenderPassportId;
- (BOOL) hasSystemSender;
- (BOOL) hasBeforeWaveId;
- (BOOL) hasWithBody;
- (BOOL) hasSystemSenderId;
@property (readonly) SInt32 page;
@property (readonly) SInt64 senderPassportId;
@property (readonly, strong) PBSystemSender* systemSender;
@property (readonly) SInt64 beforeWaveId;
- (BOOL) withBody;
@property (readonly) SInt64 systemSenderId;

+ (PBFetchWaveIdsReq*) defaultInstance;
- (PBFetchWaveIdsReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchWaveIdsReqBuilder*) builder;
+ (PBFetchWaveIdsReqBuilder*) builder;
+ (PBFetchWaveIdsReqBuilder*) builderWithPrototype:(PBFetchWaveIdsReq*) prototype;
- (PBFetchWaveIdsReqBuilder*) toBuilder;

+ (PBFetchWaveIdsReq*) parseFromData:(NSData*) data;
+ (PBFetchWaveIdsReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWaveIdsReq*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchWaveIdsReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWaveIdsReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchWaveIdsReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchWaveIdsReqBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchWaveIdsReq* result;
}

- (PBFetchWaveIdsReq*) defaultInstance;

- (PBFetchWaveIdsReqBuilder*) clear;
- (PBFetchWaveIdsReqBuilder*) clone;

- (PBFetchWaveIdsReq*) build;
- (PBFetchWaveIdsReq*) buildPartial;

- (PBFetchWaveIdsReqBuilder*) mergeFrom:(PBFetchWaveIdsReq*) other;
- (PBFetchWaveIdsReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchWaveIdsReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPage;
- (SInt32) page;
- (PBFetchWaveIdsReqBuilder*) setPage:(SInt32) value;
- (PBFetchWaveIdsReqBuilder*) clearPage;

- (BOOL) hasSenderPassportId;
- (SInt64) senderPassportId;
- (PBFetchWaveIdsReqBuilder*) setSenderPassportId:(SInt64) value;
- (PBFetchWaveIdsReqBuilder*) clearSenderPassportId;

- (BOOL) hasSystemSender;
- (PBSystemSender*) systemSender;
- (PBFetchWaveIdsReqBuilder*) setSystemSender:(PBSystemSender*) value;
- (PBFetchWaveIdsReqBuilder*) setSystemSenderBuilder:(PBSystemSenderBuilder*) builderForValue;
- (PBFetchWaveIdsReqBuilder*) mergeSystemSender:(PBSystemSender*) value;
- (PBFetchWaveIdsReqBuilder*) clearSystemSender;

- (BOOL) hasBeforeWaveId;
- (SInt64) beforeWaveId;
- (PBFetchWaveIdsReqBuilder*) setBeforeWaveId:(SInt64) value;
- (PBFetchWaveIdsReqBuilder*) clearBeforeWaveId;

- (BOOL) hasWithBody;
- (BOOL) withBody;
- (PBFetchWaveIdsReqBuilder*) setWithBody:(BOOL) value;
- (PBFetchWaveIdsReqBuilder*) clearWithBody;

- (BOOL) hasSystemSenderId;
- (SInt64) systemSenderId;
- (PBFetchWaveIdsReqBuilder*) setSystemSenderId:(SInt64) value;
- (PBFetchWaveIdsReqBuilder*) clearSystemSenderId;
@end

@interface PBFetchWaveIdsResp : PBGeneratedMessage {
@private
  BOOL hasHasMore_:1;
  BOOL hasSystemSender_:1;
  BOOL hasPage_:1;
  BOOL hasTotalCount_:1;
  BOOL hasTotalPage_:1;
  BOOL hasSenderPassportId_:1;
  BOOL hasMore_:1;
  PBSystemSender* systemSender;
  SInt32 page;
  SInt32 totalCount;
  SInt32 totalPage;
  SInt64 senderPassportId;
  NSMutableArray * abstractsArray;
  NSMutableArray * redPacketsArray;
  PBAppendableArray * myCommentIdsArray;
}
- (BOOL) hasPage;
- (BOOL) hasSenderPassportId;
- (BOOL) hasSystemSender;
- (BOOL) hasHasMore;
- (BOOL) hasTotalCount;
- (BOOL) hasTotalPage;
@property (readonly) SInt32 page;
@property (readonly) SInt64 senderPassportId;
@property (readonly, strong) PBSystemSender* systemSender;
@property (readonly, strong) NSArray * abstracts;
@property (readonly, strong) PBArray * myCommentIds;
- (BOOL) hasMore;
@property (readonly) SInt32 totalCount;
@property (readonly) SInt32 totalPage;
@property (readonly, strong) NSArray * redPackets;
- (PBFetchWaveIdsRespPBWaveAbstract*)abstractsAtIndex:(NSUInteger)index;
- (SInt64)myCommentIdsAtIndex:(NSUInteger)index;
- (PBRedPacket*)redPacketsAtIndex:(NSUInteger)index;

+ (PBFetchWaveIdsResp*) defaultInstance;
- (PBFetchWaveIdsResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchWaveIdsRespBuilder*) builder;
+ (PBFetchWaveIdsRespBuilder*) builder;
+ (PBFetchWaveIdsRespBuilder*) builderWithPrototype:(PBFetchWaveIdsResp*) prototype;
- (PBFetchWaveIdsRespBuilder*) toBuilder;

+ (PBFetchWaveIdsResp*) parseFromData:(NSData*) data;
+ (PBFetchWaveIdsResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWaveIdsResp*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchWaveIdsResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWaveIdsResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchWaveIdsResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchWaveIdsRespPBWaveAbstract : PBGeneratedMessage {
@private
  BOOL hasWave_:1;
  BOOL hasLikeCommentCount_:1;
  BOOL hasTextCommentCount_:1;
  BOOL hasWaveId_:1;
  BOOL hasYouLikeCommentId_:1;
  PBWave* wave;
  SInt32 likeCommentCount;
  SInt32 textCommentCount;
  SInt64 waveId;
  SInt64 youLikeCommentId;
  PBAppendableArray * topTextCommentIdsArray;
}
- (BOOL) hasWaveId;
- (BOOL) hasLikeCommentCount;
- (BOOL) hasTextCommentCount;
- (BOOL) hasYouLikeCommentId;
- (BOOL) hasWave;
@property (readonly) SInt64 waveId;
@property (readonly, strong) PBArray * topTextCommentIds;
@property (readonly) SInt32 likeCommentCount;
@property (readonly) SInt32 textCommentCount;
@property (readonly) SInt64 youLikeCommentId;
@property (readonly, strong) PBWave* wave;
- (SInt64)topTextCommentIdsAtIndex:(NSUInteger)index;

+ (PBFetchWaveIdsRespPBWaveAbstract*) defaultInstance;
- (PBFetchWaveIdsRespPBWaveAbstract*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchWaveIdsRespPBWaveAbstractBuilder*) builder;
+ (PBFetchWaveIdsRespPBWaveAbstractBuilder*) builder;
+ (PBFetchWaveIdsRespPBWaveAbstractBuilder*) builderWithPrototype:(PBFetchWaveIdsRespPBWaveAbstract*) prototype;
- (PBFetchWaveIdsRespPBWaveAbstractBuilder*) toBuilder;

+ (PBFetchWaveIdsRespPBWaveAbstract*) parseFromData:(NSData*) data;
+ (PBFetchWaveIdsRespPBWaveAbstract*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWaveIdsRespPBWaveAbstract*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchWaveIdsRespPBWaveAbstract*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWaveIdsRespPBWaveAbstract*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchWaveIdsRespPBWaveAbstract*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchWaveIdsRespPBWaveAbstractBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchWaveIdsRespPBWaveAbstract* result;
}

- (PBFetchWaveIdsRespPBWaveAbstract*) defaultInstance;

- (PBFetchWaveIdsRespPBWaveAbstractBuilder*) clear;
- (PBFetchWaveIdsRespPBWaveAbstractBuilder*) clone;

- (PBFetchWaveIdsRespPBWaveAbstract*) build;
- (PBFetchWaveIdsRespPBWaveAbstract*) buildPartial;

- (PBFetchWaveIdsRespPBWaveAbstractBuilder*) mergeFrom:(PBFetchWaveIdsRespPBWaveAbstract*) other;
- (PBFetchWaveIdsRespPBWaveAbstractBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchWaveIdsRespPBWaveAbstractBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasWaveId;
- (SInt64) waveId;
- (PBFetchWaveIdsRespPBWaveAbstractBuilder*) setWaveId:(SInt64) value;
- (PBFetchWaveIdsRespPBWaveAbstractBuilder*) clearWaveId;

- (PBAppendableArray *)topTextCommentIds;
- (SInt64)topTextCommentIdsAtIndex:(NSUInteger)index;
- (PBFetchWaveIdsRespPBWaveAbstractBuilder *)addTopTextCommentIds:(SInt64)value;
- (PBFetchWaveIdsRespPBWaveAbstractBuilder *)setTopTextCommentIdsArray:(NSArray *)array;
- (PBFetchWaveIdsRespPBWaveAbstractBuilder *)setTopTextCommentIdsValues:(const SInt64 *)values count:(NSUInteger)count;
- (PBFetchWaveIdsRespPBWaveAbstractBuilder *)clearTopTextCommentIds;

- (BOOL) hasLikeCommentCount;
- (SInt32) likeCommentCount;
- (PBFetchWaveIdsRespPBWaveAbstractBuilder*) setLikeCommentCount:(SInt32) value;
- (PBFetchWaveIdsRespPBWaveAbstractBuilder*) clearLikeCommentCount;

- (BOOL) hasTextCommentCount;
- (SInt32) textCommentCount;
- (PBFetchWaveIdsRespPBWaveAbstractBuilder*) setTextCommentCount:(SInt32) value;
- (PBFetchWaveIdsRespPBWaveAbstractBuilder*) clearTextCommentCount;

- (BOOL) hasYouLikeCommentId;
- (SInt64) youLikeCommentId;
- (PBFetchWaveIdsRespPBWaveAbstractBuilder*) setYouLikeCommentId:(SInt64) value;
- (PBFetchWaveIdsRespPBWaveAbstractBuilder*) clearYouLikeCommentId;

- (BOOL) hasWave;
- (PBWave*) wave;
- (PBFetchWaveIdsRespPBWaveAbstractBuilder*) setWave:(PBWave*) value;
- (PBFetchWaveIdsRespPBWaveAbstractBuilder*) setWaveBuilder:(PBWaveBuilder*) builderForValue;
- (PBFetchWaveIdsRespPBWaveAbstractBuilder*) mergeWave:(PBWave*) value;
- (PBFetchWaveIdsRespPBWaveAbstractBuilder*) clearWave;
@end

@interface PBFetchWaveIdsRespBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchWaveIdsResp* result;
}

- (PBFetchWaveIdsResp*) defaultInstance;

- (PBFetchWaveIdsRespBuilder*) clear;
- (PBFetchWaveIdsRespBuilder*) clone;

- (PBFetchWaveIdsResp*) build;
- (PBFetchWaveIdsResp*) buildPartial;

- (PBFetchWaveIdsRespBuilder*) mergeFrom:(PBFetchWaveIdsResp*) other;
- (PBFetchWaveIdsRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchWaveIdsRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPage;
- (SInt32) page;
- (PBFetchWaveIdsRespBuilder*) setPage:(SInt32) value;
- (PBFetchWaveIdsRespBuilder*) clearPage;

- (BOOL) hasSenderPassportId;
- (SInt64) senderPassportId;
- (PBFetchWaveIdsRespBuilder*) setSenderPassportId:(SInt64) value;
- (PBFetchWaveIdsRespBuilder*) clearSenderPassportId;

- (BOOL) hasSystemSender;
- (PBSystemSender*) systemSender;
- (PBFetchWaveIdsRespBuilder*) setSystemSender:(PBSystemSender*) value;
- (PBFetchWaveIdsRespBuilder*) setSystemSenderBuilder:(PBSystemSenderBuilder*) builderForValue;
- (PBFetchWaveIdsRespBuilder*) mergeSystemSender:(PBSystemSender*) value;
- (PBFetchWaveIdsRespBuilder*) clearSystemSender;

- (NSMutableArray *)abstracts;
- (PBFetchWaveIdsRespPBWaveAbstract*)abstractsAtIndex:(NSUInteger)index;
- (PBFetchWaveIdsRespBuilder *)addAbstracts:(PBFetchWaveIdsRespPBWaveAbstract*)value;
- (PBFetchWaveIdsRespBuilder *)setAbstractsArray:(NSArray *)array;
- (PBFetchWaveIdsRespBuilder *)clearAbstracts;

- (PBAppendableArray *)myCommentIds;
- (SInt64)myCommentIdsAtIndex:(NSUInteger)index;
- (PBFetchWaveIdsRespBuilder *)addMyCommentIds:(SInt64)value;
- (PBFetchWaveIdsRespBuilder *)setMyCommentIdsArray:(NSArray *)array;
- (PBFetchWaveIdsRespBuilder *)setMyCommentIdsValues:(const SInt64 *)values count:(NSUInteger)count;
- (PBFetchWaveIdsRespBuilder *)clearMyCommentIds;

- (BOOL) hasHasMore;
- (BOOL) hasMore;
- (PBFetchWaveIdsRespBuilder*) setHasMore:(BOOL) value;
- (PBFetchWaveIdsRespBuilder*) clearHasMore;

- (BOOL) hasTotalCount;
- (SInt32) totalCount;
- (PBFetchWaveIdsRespBuilder*) setTotalCount:(SInt32) value;
- (PBFetchWaveIdsRespBuilder*) clearTotalCount;

- (BOOL) hasTotalPage;
- (SInt32) totalPage;
- (PBFetchWaveIdsRespBuilder*) setTotalPage:(SInt32) value;
- (PBFetchWaveIdsRespBuilder*) clearTotalPage;

- (NSMutableArray *)redPackets;
- (PBRedPacket*)redPacketsAtIndex:(NSUInteger)index;
- (PBFetchWaveIdsRespBuilder *)addRedPackets:(PBRedPacket*)value;
- (PBFetchWaveIdsRespBuilder *)setRedPacketsArray:(NSArray *)array;
- (PBFetchWaveIdsRespBuilder *)clearRedPackets;
@end

@interface PBFetchWaveCommentIdsReq : PBGeneratedMessage {
@private
  BOOL hasWithBody_:1;
  BOOL hasPage_:1;
  BOOL hasWaveId_:1;
  BOOL hasBeforeTextCommentId_:1;
  BOOL withBody_:1;
  SInt32 page;
  SInt64 waveId;
  SInt64 beforeTextCommentId;
}
- (BOOL) hasWaveId;
- (BOOL) hasPage;
- (BOOL) hasBeforeTextCommentId;
- (BOOL) hasWithBody;
@property (readonly) SInt64 waveId;
@property (readonly) SInt32 page;
@property (readonly) SInt64 beforeTextCommentId;
- (BOOL) withBody;

+ (PBFetchWaveCommentIdsReq*) defaultInstance;
- (PBFetchWaveCommentIdsReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchWaveCommentIdsReqBuilder*) builder;
+ (PBFetchWaveCommentIdsReqBuilder*) builder;
+ (PBFetchWaveCommentIdsReqBuilder*) builderWithPrototype:(PBFetchWaveCommentIdsReq*) prototype;
- (PBFetchWaveCommentIdsReqBuilder*) toBuilder;

+ (PBFetchWaveCommentIdsReq*) parseFromData:(NSData*) data;
+ (PBFetchWaveCommentIdsReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWaveCommentIdsReq*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchWaveCommentIdsReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWaveCommentIdsReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchWaveCommentIdsReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchWaveCommentIdsReqBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchWaveCommentIdsReq* result;
}

- (PBFetchWaveCommentIdsReq*) defaultInstance;

- (PBFetchWaveCommentIdsReqBuilder*) clear;
- (PBFetchWaveCommentIdsReqBuilder*) clone;

- (PBFetchWaveCommentIdsReq*) build;
- (PBFetchWaveCommentIdsReq*) buildPartial;

- (PBFetchWaveCommentIdsReqBuilder*) mergeFrom:(PBFetchWaveCommentIdsReq*) other;
- (PBFetchWaveCommentIdsReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchWaveCommentIdsReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasWaveId;
- (SInt64) waveId;
- (PBFetchWaveCommentIdsReqBuilder*) setWaveId:(SInt64) value;
- (PBFetchWaveCommentIdsReqBuilder*) clearWaveId;

- (BOOL) hasPage;
- (SInt32) page;
- (PBFetchWaveCommentIdsReqBuilder*) setPage:(SInt32) value;
- (PBFetchWaveCommentIdsReqBuilder*) clearPage;

- (BOOL) hasBeforeTextCommentId;
- (SInt64) beforeTextCommentId;
- (PBFetchWaveCommentIdsReqBuilder*) setBeforeTextCommentId:(SInt64) value;
- (PBFetchWaveCommentIdsReqBuilder*) clearBeforeTextCommentId;

- (BOOL) hasWithBody;
- (BOOL) withBody;
- (PBFetchWaveCommentIdsReqBuilder*) setWithBody:(BOOL) value;
- (PBFetchWaveCommentIdsReqBuilder*) clearWithBody;
@end

@interface PBWaveCommentIds : PBGeneratedMessage {
@private
  PBAppendableArray * likeCommentIdsArray;
  PBAppendableArray * textCommentIdsArray;
}
@property (readonly, strong) PBArray * likeCommentIds;
@property (readonly, strong) PBArray * textCommentIds;
- (SInt64)likeCommentIdsAtIndex:(NSUInteger)index;
- (SInt64)textCommentIdsAtIndex:(NSUInteger)index;

+ (PBWaveCommentIds*) defaultInstance;
- (PBWaveCommentIds*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBWaveCommentIdsBuilder*) builder;
+ (PBWaveCommentIdsBuilder*) builder;
+ (PBWaveCommentIdsBuilder*) builderWithPrototype:(PBWaveCommentIds*) prototype;
- (PBWaveCommentIdsBuilder*) toBuilder;

+ (PBWaveCommentIds*) parseFromData:(NSData*) data;
+ (PBWaveCommentIds*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBWaveCommentIds*) parseFromInputStream:(NSInputStream*) input;
+ (PBWaveCommentIds*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBWaveCommentIds*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBWaveCommentIds*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBWaveCommentIdsBuilder : PBGeneratedMessageBuilder {
@private
  PBWaveCommentIds* result;
}

- (PBWaveCommentIds*) defaultInstance;

- (PBWaveCommentIdsBuilder*) clear;
- (PBWaveCommentIdsBuilder*) clone;

- (PBWaveCommentIds*) build;
- (PBWaveCommentIds*) buildPartial;

- (PBWaveCommentIdsBuilder*) mergeFrom:(PBWaveCommentIds*) other;
- (PBWaveCommentIdsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBWaveCommentIdsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)likeCommentIds;
- (SInt64)likeCommentIdsAtIndex:(NSUInteger)index;
- (PBWaveCommentIdsBuilder *)addLikeCommentIds:(SInt64)value;
- (PBWaveCommentIdsBuilder *)setLikeCommentIdsArray:(NSArray *)array;
- (PBWaveCommentIdsBuilder *)setLikeCommentIdsValues:(const SInt64 *)values count:(NSUInteger)count;
- (PBWaveCommentIdsBuilder *)clearLikeCommentIds;

- (PBAppendableArray *)textCommentIds;
- (SInt64)textCommentIdsAtIndex:(NSUInteger)index;
- (PBWaveCommentIdsBuilder *)addTextCommentIds:(SInt64)value;
- (PBWaveCommentIdsBuilder *)setTextCommentIdsArray:(NSArray *)array;
- (PBWaveCommentIdsBuilder *)setTextCommentIdsValues:(const SInt64 *)values count:(NSUInteger)count;
- (PBWaveCommentIdsBuilder *)clearTextCommentIds;
@end

@interface PBFetchWaveCommentIdsResp : PBGeneratedMessage {
@private
  BOOL hasHasMore_:1;
  BOOL hasIds_:1;
  BOOL hasPage_:1;
  BOOL hasTotalTextCommentCount_:1;
  BOOL hasTotalTextCommentPage_:1;
  BOOL hasWaveId_:1;
  BOOL hasMore_:1;
  PBWaveCommentIds* ids;
  SInt32 page;
  SInt32 totalTextCommentCount;
  SInt32 totalTextCommentPage;
  SInt64 waveId;
  NSMutableArray * commentsArray;
}
- (BOOL) hasWaveId;
- (BOOL) hasPage;
- (BOOL) hasIds;
- (BOOL) hasHasMore;
- (BOOL) hasTotalTextCommentCount;
- (BOOL) hasTotalTextCommentPage;
@property (readonly) SInt64 waveId;
@property (readonly) SInt32 page;
@property (readonly, strong) PBWaveCommentIds* ids;
- (BOOL) hasMore;
@property (readonly) SInt32 totalTextCommentCount;
@property (readonly) SInt32 totalTextCommentPage;
@property (readonly, strong) NSArray * comments;
- (PBWaveComment*)commentsAtIndex:(NSUInteger)index;

+ (PBFetchWaveCommentIdsResp*) defaultInstance;
- (PBFetchWaveCommentIdsResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchWaveCommentIdsRespBuilder*) builder;
+ (PBFetchWaveCommentIdsRespBuilder*) builder;
+ (PBFetchWaveCommentIdsRespBuilder*) builderWithPrototype:(PBFetchWaveCommentIdsResp*) prototype;
- (PBFetchWaveCommentIdsRespBuilder*) toBuilder;

+ (PBFetchWaveCommentIdsResp*) parseFromData:(NSData*) data;
+ (PBFetchWaveCommentIdsResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWaveCommentIdsResp*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchWaveCommentIdsResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchWaveCommentIdsResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchWaveCommentIdsResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchWaveCommentIdsRespBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchWaveCommentIdsResp* result;
}

- (PBFetchWaveCommentIdsResp*) defaultInstance;

- (PBFetchWaveCommentIdsRespBuilder*) clear;
- (PBFetchWaveCommentIdsRespBuilder*) clone;

- (PBFetchWaveCommentIdsResp*) build;
- (PBFetchWaveCommentIdsResp*) buildPartial;

- (PBFetchWaveCommentIdsRespBuilder*) mergeFrom:(PBFetchWaveCommentIdsResp*) other;
- (PBFetchWaveCommentIdsRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchWaveCommentIdsRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasWaveId;
- (SInt64) waveId;
- (PBFetchWaveCommentIdsRespBuilder*) setWaveId:(SInt64) value;
- (PBFetchWaveCommentIdsRespBuilder*) clearWaveId;

- (BOOL) hasPage;
- (SInt32) page;
- (PBFetchWaveCommentIdsRespBuilder*) setPage:(SInt32) value;
- (PBFetchWaveCommentIdsRespBuilder*) clearPage;

- (BOOL) hasIds;
- (PBWaveCommentIds*) ids;
- (PBFetchWaveCommentIdsRespBuilder*) setIds:(PBWaveCommentIds*) value;
- (PBFetchWaveCommentIdsRespBuilder*) setIdsBuilder:(PBWaveCommentIdsBuilder*) builderForValue;
- (PBFetchWaveCommentIdsRespBuilder*) mergeIds:(PBWaveCommentIds*) value;
- (PBFetchWaveCommentIdsRespBuilder*) clearIds;

- (BOOL) hasHasMore;
- (BOOL) hasMore;
- (PBFetchWaveCommentIdsRespBuilder*) setHasMore:(BOOL) value;
- (PBFetchWaveCommentIdsRespBuilder*) clearHasMore;

- (BOOL) hasTotalTextCommentCount;
- (SInt32) totalTextCommentCount;
- (PBFetchWaveCommentIdsRespBuilder*) setTotalTextCommentCount:(SInt32) value;
- (PBFetchWaveCommentIdsRespBuilder*) clearTotalTextCommentCount;

- (BOOL) hasTotalTextCommentPage;
- (SInt32) totalTextCommentPage;
- (PBFetchWaveCommentIdsRespBuilder*) setTotalTextCommentPage:(SInt32) value;
- (PBFetchWaveCommentIdsRespBuilder*) clearTotalTextCommentPage;

- (NSMutableArray *)comments;
- (PBWaveComment*)commentsAtIndex:(NSUInteger)index;
- (PBFetchWaveCommentIdsRespBuilder *)addComments:(PBWaveComment*)value;
- (PBFetchWaveCommentIdsRespBuilder *)setCommentsArray:(NSArray *)array;
- (PBFetchWaveCommentIdsRespBuilder *)clearComments;
@end

@interface PBDeleteWaveCommentReq : PBGeneratedMessage {
@private
  PBAppendableArray * waveCommentIdsArray;
}
@property (readonly, strong) PBArray * waveCommentIds;
- (SInt64)waveCommentIdsAtIndex:(NSUInteger)index;

+ (PBDeleteWaveCommentReq*) defaultInstance;
- (PBDeleteWaveCommentReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBDeleteWaveCommentReqBuilder*) builder;
+ (PBDeleteWaveCommentReqBuilder*) builder;
+ (PBDeleteWaveCommentReqBuilder*) builderWithPrototype:(PBDeleteWaveCommentReq*) prototype;
- (PBDeleteWaveCommentReqBuilder*) toBuilder;

+ (PBDeleteWaveCommentReq*) parseFromData:(NSData*) data;
+ (PBDeleteWaveCommentReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDeleteWaveCommentReq*) parseFromInputStream:(NSInputStream*) input;
+ (PBDeleteWaveCommentReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDeleteWaveCommentReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBDeleteWaveCommentReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBDeleteWaveCommentReqBuilder : PBGeneratedMessageBuilder {
@private
  PBDeleteWaveCommentReq* result;
}

- (PBDeleteWaveCommentReq*) defaultInstance;

- (PBDeleteWaveCommentReqBuilder*) clear;
- (PBDeleteWaveCommentReqBuilder*) clone;

- (PBDeleteWaveCommentReq*) build;
- (PBDeleteWaveCommentReq*) buildPartial;

- (PBDeleteWaveCommentReqBuilder*) mergeFrom:(PBDeleteWaveCommentReq*) other;
- (PBDeleteWaveCommentReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBDeleteWaveCommentReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)waveCommentIds;
- (SInt64)waveCommentIdsAtIndex:(NSUInteger)index;
- (PBDeleteWaveCommentReqBuilder *)addWaveCommentIds:(SInt64)value;
- (PBDeleteWaveCommentReqBuilder *)setWaveCommentIdsArray:(NSArray *)array;
- (PBDeleteWaveCommentReqBuilder *)setWaveCommentIdsValues:(const SInt64 *)values count:(NSUInteger)count;
- (PBDeleteWaveCommentReqBuilder *)clearWaveCommentIds;
@end

@interface PBDeleteWaveCommentResp : PBGeneratedMessage {
@private
  PBAppendableArray * deletedWaveCommentIdsArray;
}
@property (readonly, strong) PBArray * deletedWaveCommentIds;
- (SInt64)deletedWaveCommentIdsAtIndex:(NSUInteger)index;

+ (PBDeleteWaveCommentResp*) defaultInstance;
- (PBDeleteWaveCommentResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBDeleteWaveCommentRespBuilder*) builder;
+ (PBDeleteWaveCommentRespBuilder*) builder;
+ (PBDeleteWaveCommentRespBuilder*) builderWithPrototype:(PBDeleteWaveCommentResp*) prototype;
- (PBDeleteWaveCommentRespBuilder*) toBuilder;

+ (PBDeleteWaveCommentResp*) parseFromData:(NSData*) data;
+ (PBDeleteWaveCommentResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDeleteWaveCommentResp*) parseFromInputStream:(NSInputStream*) input;
+ (PBDeleteWaveCommentResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBDeleteWaveCommentResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBDeleteWaveCommentResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBDeleteWaveCommentRespBuilder : PBGeneratedMessageBuilder {
@private
  PBDeleteWaveCommentResp* result;
}

- (PBDeleteWaveCommentResp*) defaultInstance;

- (PBDeleteWaveCommentRespBuilder*) clear;
- (PBDeleteWaveCommentRespBuilder*) clone;

- (PBDeleteWaveCommentResp*) build;
- (PBDeleteWaveCommentResp*) buildPartial;

- (PBDeleteWaveCommentRespBuilder*) mergeFrom:(PBDeleteWaveCommentResp*) other;
- (PBDeleteWaveCommentRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBDeleteWaveCommentRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)deletedWaveCommentIds;
- (SInt64)deletedWaveCommentIdsAtIndex:(NSUInteger)index;
- (PBDeleteWaveCommentRespBuilder *)addDeletedWaveCommentIds:(SInt64)value;
- (PBDeleteWaveCommentRespBuilder *)setDeletedWaveCommentIdsArray:(NSArray *)array;
- (PBDeleteWaveCommentRespBuilder *)setDeletedWaveCommentIdsValues:(const SInt64 *)values count:(NSUInteger)count;
- (PBDeleteWaveCommentRespBuilder *)clearDeletedWaveCommentIds;
@end

@interface PBFetchRedPacketCountReq : PBGeneratedMessage {
@private
  BOOL hasType_:1;
  PBFetchRedPacketCountReqClientType type;
}
- (BOOL) hasType;
@property (readonly) PBFetchRedPacketCountReqClientType type;

+ (PBFetchRedPacketCountReq*) defaultInstance;
- (PBFetchRedPacketCountReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchRedPacketCountReqBuilder*) builder;
+ (PBFetchRedPacketCountReqBuilder*) builder;
+ (PBFetchRedPacketCountReqBuilder*) builderWithPrototype:(PBFetchRedPacketCountReq*) prototype;
- (PBFetchRedPacketCountReqBuilder*) toBuilder;

+ (PBFetchRedPacketCountReq*) parseFromData:(NSData*) data;
+ (PBFetchRedPacketCountReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchRedPacketCountReq*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchRedPacketCountReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchRedPacketCountReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchRedPacketCountReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchRedPacketCountReqBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchRedPacketCountReq* result;
}

- (PBFetchRedPacketCountReq*) defaultInstance;

- (PBFetchRedPacketCountReqBuilder*) clear;
- (PBFetchRedPacketCountReqBuilder*) clone;

- (PBFetchRedPacketCountReq*) build;
- (PBFetchRedPacketCountReq*) buildPartial;

- (PBFetchRedPacketCountReqBuilder*) mergeFrom:(PBFetchRedPacketCountReq*) other;
- (PBFetchRedPacketCountReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchRedPacketCountReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (PBFetchRedPacketCountReqClientType) type;
- (PBFetchRedPacketCountReqBuilder*) setType:(PBFetchRedPacketCountReqClientType) value;
- (PBFetchRedPacketCountReqBuilder*) clearType;
@end

@interface PBFetchRedPacketCountResp : PBGeneratedMessage {
@private
  BOOL hasCount_:1;
  SInt64 count;
}
- (BOOL) hasCount;
@property (readonly) SInt64 count;

+ (PBFetchRedPacketCountResp*) defaultInstance;
- (PBFetchRedPacketCountResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchRedPacketCountRespBuilder*) builder;
+ (PBFetchRedPacketCountRespBuilder*) builder;
+ (PBFetchRedPacketCountRespBuilder*) builderWithPrototype:(PBFetchRedPacketCountResp*) prototype;
- (PBFetchRedPacketCountRespBuilder*) toBuilder;

+ (PBFetchRedPacketCountResp*) parseFromData:(NSData*) data;
+ (PBFetchRedPacketCountResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchRedPacketCountResp*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchRedPacketCountResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchRedPacketCountResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchRedPacketCountResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchRedPacketCountRespBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchRedPacketCountResp* result;
}

- (PBFetchRedPacketCountResp*) defaultInstance;

- (PBFetchRedPacketCountRespBuilder*) clear;
- (PBFetchRedPacketCountRespBuilder*) clone;

- (PBFetchRedPacketCountResp*) build;
- (PBFetchRedPacketCountResp*) buildPartial;

- (PBFetchRedPacketCountRespBuilder*) mergeFrom:(PBFetchRedPacketCountResp*) other;
- (PBFetchRedPacketCountRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchRedPacketCountRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCount;
- (SInt64) count;
- (PBFetchRedPacketCountRespBuilder*) setCount:(SInt64) value;
- (PBFetchRedPacketCountRespBuilder*) clearCount;
@end

@interface PBFetchAllWavesReq : PBGeneratedMessage {
@private
  BOOL hasMembersIncluded_:1;
  BOOL hasSystemSender_:1;
  BOOL hasPublishType_:1;
  BOOL hasOrderType_:1;
  BOOL hasPage_:1;
  BOOL membersIncluded_:1;
  PBSystemSender* systemSender;
  PBFetchAllWavesReqPublishType publishType;
  PBFetchAllWavesReqOrderType orderType;
  SInt64 page;
}
- (BOOL) hasPublishType;
- (BOOL) hasOrderType;
- (BOOL) hasPage;
- (BOOL) hasSystemSender;
- (BOOL) hasMembersIncluded;
@property (readonly) PBFetchAllWavesReqPublishType publishType;
@property (readonly) PBFetchAllWavesReqOrderType orderType;
@property (readonly) SInt64 page;
@property (readonly, strong) PBSystemSender* systemSender;
- (BOOL) membersIncluded;

+ (PBFetchAllWavesReq*) defaultInstance;
- (PBFetchAllWavesReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchAllWavesReqBuilder*) builder;
+ (PBFetchAllWavesReqBuilder*) builder;
+ (PBFetchAllWavesReqBuilder*) builderWithPrototype:(PBFetchAllWavesReq*) prototype;
- (PBFetchAllWavesReqBuilder*) toBuilder;

+ (PBFetchAllWavesReq*) parseFromData:(NSData*) data;
+ (PBFetchAllWavesReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchAllWavesReq*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchAllWavesReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchAllWavesReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchAllWavesReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchAllWavesReqBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchAllWavesReq* result;
}

- (PBFetchAllWavesReq*) defaultInstance;

- (PBFetchAllWavesReqBuilder*) clear;
- (PBFetchAllWavesReqBuilder*) clone;

- (PBFetchAllWavesReq*) build;
- (PBFetchAllWavesReq*) buildPartial;

- (PBFetchAllWavesReqBuilder*) mergeFrom:(PBFetchAllWavesReq*) other;
- (PBFetchAllWavesReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchAllWavesReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPublishType;
- (PBFetchAllWavesReqPublishType) publishType;
- (PBFetchAllWavesReqBuilder*) setPublishType:(PBFetchAllWavesReqPublishType) value;
- (PBFetchAllWavesReqBuilder*) clearPublishType;

- (BOOL) hasOrderType;
- (PBFetchAllWavesReqOrderType) orderType;
- (PBFetchAllWavesReqBuilder*) setOrderType:(PBFetchAllWavesReqOrderType) value;
- (PBFetchAllWavesReqBuilder*) clearOrderType;

- (BOOL) hasPage;
- (SInt64) page;
- (PBFetchAllWavesReqBuilder*) setPage:(SInt64) value;
- (PBFetchAllWavesReqBuilder*) clearPage;

- (BOOL) hasSystemSender;
- (PBSystemSender*) systemSender;
- (PBFetchAllWavesReqBuilder*) setSystemSender:(PBSystemSender*) value;
- (PBFetchAllWavesReqBuilder*) setSystemSenderBuilder:(PBSystemSenderBuilder*) builderForValue;
- (PBFetchAllWavesReqBuilder*) mergeSystemSender:(PBSystemSender*) value;
- (PBFetchAllWavesReqBuilder*) clearSystemSender;

- (BOOL) hasMembersIncluded;
- (BOOL) membersIncluded;
- (PBFetchAllWavesReqBuilder*) setMembersIncluded:(BOOL) value;
- (PBFetchAllWavesReqBuilder*) clearMembersIncluded;
@end

@interface PBFetchAllWavesResp : PBGeneratedMessage {
@private
  BOOL hasTotalCount_:1;
  SInt64 totalCount;
  NSMutableArray * wavesArray;
}
- (BOOL) hasTotalCount;
@property (readonly, strong) NSArray * waves;
@property (readonly) SInt64 totalCount;
- (PBWave*)wavesAtIndex:(NSUInteger)index;

+ (PBFetchAllWavesResp*) defaultInstance;
- (PBFetchAllWavesResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchAllWavesRespBuilder*) builder;
+ (PBFetchAllWavesRespBuilder*) builder;
+ (PBFetchAllWavesRespBuilder*) builderWithPrototype:(PBFetchAllWavesResp*) prototype;
- (PBFetchAllWavesRespBuilder*) toBuilder;

+ (PBFetchAllWavesResp*) parseFromData:(NSData*) data;
+ (PBFetchAllWavesResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchAllWavesResp*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchAllWavesResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchAllWavesResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchAllWavesResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchAllWavesRespBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchAllWavesResp* result;
}

- (PBFetchAllWavesResp*) defaultInstance;

- (PBFetchAllWavesRespBuilder*) clear;
- (PBFetchAllWavesRespBuilder*) clone;

- (PBFetchAllWavesResp*) build;
- (PBFetchAllWavesResp*) buildPartial;

- (PBFetchAllWavesRespBuilder*) mergeFrom:(PBFetchAllWavesResp*) other;
- (PBFetchAllWavesRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchAllWavesRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)waves;
- (PBWave*)wavesAtIndex:(NSUInteger)index;
- (PBFetchAllWavesRespBuilder *)addWaves:(PBWave*)value;
- (PBFetchAllWavesRespBuilder *)setWavesArray:(NSArray *)array;
- (PBFetchAllWavesRespBuilder *)clearWaves;

- (BOOL) hasTotalCount;
- (SInt64) totalCount;
- (PBFetchAllWavesRespBuilder*) setTotalCount:(SInt64) value;
- (PBFetchAllWavesRespBuilder*) clearTotalCount;
@end


// @@protoc_insertion_point(global_scope)
