// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "File.pb.h"
// @@protoc_insertion_point(imports)

@implementation FileRoot
static id<PBExtensionField> FileRoot_uploadFileReq = nil;
static id<PBExtensionField> FileRoot_uploadFileResp = nil;
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [FileRoot class]) {
    FileRoot_uploadFileReq =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[PBFrame class]
                                       fieldNumber:2000
                                      defaultValue:[PBUploadFileReq defaultInstance]
                               messageOrGroupClass:[PBUploadFileReq class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    FileRoot_uploadFileResp =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[PBFrame class]
                                       fieldNumber:2001
                                      defaultValue:[PBUploadFileResp defaultInstance]
                               messageOrGroupClass:[PBUploadFileResp class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [FrameRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
  [registry addExtension:FileRoot_uploadFileReq];
  [registry addExtension:FileRoot_uploadFileResp];
}
+ (id<PBExtensionField>) uploadFileReq {
  return FileRoot_uploadFileReq;
}
+ (id<PBExtensionField>) uploadFileResp {
  return FileRoot_uploadFileResp;
}
@end

@interface PBFile ()
@property SInt64 id;
@property PBFileType type;
@property PBFileApp belongApp;
@property SInt64 senderPassportId;
@property (strong) NSString* relativeUrl;
@property (strong) NSString* originalName;
@property (strong) NSString* md5;
@property SInt64 timestamp;
@property SInt32 nonce;
@property (strong) NSString* signature;
@property SInt64 createdAt;
@property SInt64 deletedAt;
@end

@implementation PBFile

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value_ {
  hasType_ = !!value_;
}
@synthesize type;
- (BOOL) hasBelongApp {
  return !!hasBelongApp_;
}
- (void) setHasBelongApp:(BOOL) value_ {
  hasBelongApp_ = !!value_;
}
@synthesize belongApp;
- (BOOL) hasSenderPassportId {
  return !!hasSenderPassportId_;
}
- (void) setHasSenderPassportId:(BOOL) value_ {
  hasSenderPassportId_ = !!value_;
}
@synthesize senderPassportId;
- (BOOL) hasRelativeUrl {
  return !!hasRelativeUrl_;
}
- (void) setHasRelativeUrl:(BOOL) value_ {
  hasRelativeUrl_ = !!value_;
}
@synthesize relativeUrl;
- (BOOL) hasOriginalName {
  return !!hasOriginalName_;
}
- (void) setHasOriginalName:(BOOL) value_ {
  hasOriginalName_ = !!value_;
}
@synthesize originalName;
- (BOOL) hasMd5 {
  return !!hasMd5_;
}
- (void) setHasMd5:(BOOL) value_ {
  hasMd5_ = !!value_;
}
@synthesize md5;
- (BOOL) hasTimestamp {
  return !!hasTimestamp_;
}
- (void) setHasTimestamp:(BOOL) value_ {
  hasTimestamp_ = !!value_;
}
@synthesize timestamp;
- (BOOL) hasNonce {
  return !!hasNonce_;
}
- (void) setHasNonce:(BOOL) value_ {
  hasNonce_ = !!value_;
}
@synthesize nonce;
- (BOOL) hasSignature {
  return !!hasSignature_;
}
- (void) setHasSignature:(BOOL) value_ {
  hasSignature_ = !!value_;
}
@synthesize signature;
- (BOOL) hasCreatedAt {
  return !!hasCreatedAt_;
}
- (void) setHasCreatedAt:(BOOL) value_ {
  hasCreatedAt_ = !!value_;
}
@synthesize createdAt;
- (BOOL) hasDeletedAt {
  return !!hasDeletedAt_;
}
- (void) setHasDeletedAt:(BOOL) value_ {
  hasDeletedAt_ = !!value_;
}
@synthesize deletedAt;
- (id) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.type = PBFileTypeTypeOther;
    self.belongApp = PBFileAppAppCircle;
    self.senderPassportId = 0L;
    self.relativeUrl = @"";
    self.originalName = @"";
    self.md5 = @"";
    self.timestamp = 0L;
    self.nonce = 0;
    self.signature = @"";
    self.createdAt = 0L;
    self.deletedAt = 0L;
  }
  return self;
}
static PBFile* defaultPBFileInstance = nil;
+ (void) initialize {
  if (self == [PBFile class]) {
    defaultPBFileInstance = [[PBFile alloc] init];
  }
}
+ (PBFile*) defaultInstance {
  return defaultPBFileInstance;
}
- (PBFile*) defaultInstance {
  return defaultPBFileInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeSInt64:1 value:self.id];
  }
  if (self.hasType) {
    [output writeEnum:2 value:self.type];
  }
  if (self.hasBelongApp) {
    [output writeEnum:3 value:self.belongApp];
  }
  if (self.hasSenderPassportId) {
    [output writeSInt64:4 value:self.senderPassportId];
  }
  if (self.hasRelativeUrl) {
    [output writeString:5 value:self.relativeUrl];
  }
  if (self.hasOriginalName) {
    [output writeString:6 value:self.originalName];
  }
  if (self.hasMd5) {
    [output writeString:7 value:self.md5];
  }
  if (self.hasTimestamp) {
    [output writeSInt64:8 value:self.timestamp];
  }
  if (self.hasNonce) {
    [output writeSInt32:9 value:self.nonce];
  }
  if (self.hasSignature) {
    [output writeString:10 value:self.signature];
  }
  if (self.hasCreatedAt) {
    [output writeSInt64:11 value:self.createdAt];
  }
  if (self.hasDeletedAt) {
    [output writeSInt64:12 value:self.deletedAt];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeSInt64Size(1, self.id);
  }
  if (self.hasType) {
    size_ += computeEnumSize(2, self.type);
  }
  if (self.hasBelongApp) {
    size_ += computeEnumSize(3, self.belongApp);
  }
  if (self.hasSenderPassportId) {
    size_ += computeSInt64Size(4, self.senderPassportId);
  }
  if (self.hasRelativeUrl) {
    size_ += computeStringSize(5, self.relativeUrl);
  }
  if (self.hasOriginalName) {
    size_ += computeStringSize(6, self.originalName);
  }
  if (self.hasMd5) {
    size_ += computeStringSize(7, self.md5);
  }
  if (self.hasTimestamp) {
    size_ += computeSInt64Size(8, self.timestamp);
  }
  if (self.hasNonce) {
    size_ += computeSInt32Size(9, self.nonce);
  }
  if (self.hasSignature) {
    size_ += computeStringSize(10, self.signature);
  }
  if (self.hasCreatedAt) {
    size_ += computeSInt64Size(11, self.createdAt);
  }
  if (self.hasDeletedAt) {
    size_ += computeSInt64Size(12, self.deletedAt);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBFile*) parseFromData:(NSData*) data {
  return (PBFile*)[[[PBFile builder] mergeFromData:data] build];
}
+ (PBFile*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFile*)[[[PBFile builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBFile*) parseFromInputStream:(NSInputStream*) input {
  return (PBFile*)[[[PBFile builder] mergeFromInputStream:input] build];
}
+ (PBFile*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFile*)[[[PBFile builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFile*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBFile*)[[[PBFile builder] mergeFromCodedInputStream:input] build];
}
+ (PBFile*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFile*)[[[PBFile builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFileBuilder*) builder {
  return [[PBFileBuilder alloc] init];
}
+ (PBFileBuilder*) builderWithPrototype:(PBFile*) prototype {
  return [[PBFile builder] mergeFrom:prototype];
}
- (PBFileBuilder*) builder {
  return [PBFile builder];
}
- (PBFileBuilder*) toBuilder {
  return [PBFile builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  if (self.hasBelongApp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"belongApp", [NSNumber numberWithInteger:self.belongApp]];
  }
  if (self.hasSenderPassportId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"senderPassportId", [NSNumber numberWithLongLong:self.senderPassportId]];
  }
  if (self.hasRelativeUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"relativeUrl", self.relativeUrl];
  }
  if (self.hasOriginalName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"originalName", self.originalName];
  }
  if (self.hasMd5) {
    [output appendFormat:@"%@%@: %@\n", indent, @"md5", self.md5];
  }
  if (self.hasTimestamp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"timestamp", [NSNumber numberWithLongLong:self.timestamp]];
  }
  if (self.hasNonce) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nonce", [NSNumber numberWithInteger:self.nonce]];
  }
  if (self.hasSignature) {
    [output appendFormat:@"%@%@: %@\n", indent, @"signature", self.signature];
  }
  if (self.hasCreatedAt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createdAt", [NSNumber numberWithLongLong:self.createdAt]];
  }
  if (self.hasDeletedAt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deletedAt", [NSNumber numberWithLongLong:self.deletedAt]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBFile class]]) {
    return NO;
  }
  PBFile *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasBelongApp == otherMessage.hasBelongApp &&
      (!self.hasBelongApp || self.belongApp == otherMessage.belongApp) &&
      self.hasSenderPassportId == otherMessage.hasSenderPassportId &&
      (!self.hasSenderPassportId || self.senderPassportId == otherMessage.senderPassportId) &&
      self.hasRelativeUrl == otherMessage.hasRelativeUrl &&
      (!self.hasRelativeUrl || [self.relativeUrl isEqual:otherMessage.relativeUrl]) &&
      self.hasOriginalName == otherMessage.hasOriginalName &&
      (!self.hasOriginalName || [self.originalName isEqual:otherMessage.originalName]) &&
      self.hasMd5 == otherMessage.hasMd5 &&
      (!self.hasMd5 || [self.md5 isEqual:otherMessage.md5]) &&
      self.hasTimestamp == otherMessage.hasTimestamp &&
      (!self.hasTimestamp || self.timestamp == otherMessage.timestamp) &&
      self.hasNonce == otherMessage.hasNonce &&
      (!self.hasNonce || self.nonce == otherMessage.nonce) &&
      self.hasSignature == otherMessage.hasSignature &&
      (!self.hasSignature || [self.signature isEqual:otherMessage.signature]) &&
      self.hasCreatedAt == otherMessage.hasCreatedAt &&
      (!self.hasCreatedAt || self.createdAt == otherMessage.createdAt) &&
      self.hasDeletedAt == otherMessage.hasDeletedAt &&
      (!self.hasDeletedAt || self.deletedAt == otherMessage.deletedAt) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  if (self.hasBelongApp) {
    hashCode = hashCode * 31 + self.belongApp;
  }
  if (self.hasSenderPassportId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.senderPassportId] hash];
  }
  if (self.hasRelativeUrl) {
    hashCode = hashCode * 31 + [self.relativeUrl hash];
  }
  if (self.hasOriginalName) {
    hashCode = hashCode * 31 + [self.originalName hash];
  }
  if (self.hasMd5) {
    hashCode = hashCode * 31 + [self.md5 hash];
  }
  if (self.hasTimestamp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.timestamp] hash];
  }
  if (self.hasNonce) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.nonce] hash];
  }
  if (self.hasSignature) {
    hashCode = hashCode * 31 + [self.signature hash];
  }
  if (self.hasCreatedAt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createdAt] hash];
  }
  if (self.hasDeletedAt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.deletedAt] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL PBFileTypeIsValidValue(PBFileType value) {
  switch (value) {
    case PBFileTypeTypePicture:
    case PBFileTypeTypeVoice:
    case PBFileTypeTypeVideo:
    case PBFileTypeTypeDoc:
    case PBFileTypeTypeXls:
    case PBFileTypeTypePpt:
    case PBFileTypeTypeZip:
    case PBFileTypeTypeRar:
    case PBFileTypeTypeOther:
      return YES;
    default:
      return NO;
  }
}
BOOL PBFileAppIsValidValue(PBFileApp value) {
  switch (value) {
    case PBFileAppAppCircle:
      return YES;
    default:
      return NO;
  }
}
@interface PBFileBuilder()
@property (strong) PBFile* result;
@end

@implementation PBFileBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBFile alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBFileBuilder*) clear {
  self.result = [[PBFile alloc] init];
  return self;
}
- (PBFileBuilder*) clone {
  return [PBFile builderWithPrototype:result];
}
- (PBFile*) defaultInstance {
  return [PBFile defaultInstance];
}
- (PBFile*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBFile*) buildPartial {
  PBFile* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBFileBuilder*) mergeFrom:(PBFile*) other {
  if (other == [PBFile defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasBelongApp) {
    [self setBelongApp:other.belongApp];
  }
  if (other.hasSenderPassportId) {
    [self setSenderPassportId:other.senderPassportId];
  }
  if (other.hasRelativeUrl) {
    [self setRelativeUrl:other.relativeUrl];
  }
  if (other.hasOriginalName) {
    [self setOriginalName:other.originalName];
  }
  if (other.hasMd5) {
    [self setMd5:other.md5];
  }
  if (other.hasTimestamp) {
    [self setTimestamp:other.timestamp];
  }
  if (other.hasNonce) {
    [self setNonce:other.nonce];
  }
  if (other.hasSignature) {
    [self setSignature:other.signature];
  }
  if (other.hasCreatedAt) {
    [self setCreatedAt:other.createdAt];
  }
  if (other.hasDeletedAt) {
    [self setDeletedAt:other.deletedAt];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBFileBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBFileBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readSInt64]];
        break;
      }
      case 16: {
        PBFileType value = (PBFileType)[input readEnum];
        if (PBFileTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        PBFileApp value = (PBFileApp)[input readEnum];
        if (PBFileAppIsValidValue(value)) {
          [self setBelongApp:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        [self setSenderPassportId:[input readSInt64]];
        break;
      }
      case 42: {
        [self setRelativeUrl:[input readString]];
        break;
      }
      case 50: {
        [self setOriginalName:[input readString]];
        break;
      }
      case 58: {
        [self setMd5:[input readString]];
        break;
      }
      case 64: {
        [self setTimestamp:[input readSInt64]];
        break;
      }
      case 72: {
        [self setNonce:[input readSInt32]];
        break;
      }
      case 82: {
        [self setSignature:[input readString]];
        break;
      }
      case 88: {
        [self setCreatedAt:[input readSInt64]];
        break;
      }
      case 96: {
        [self setDeletedAt:[input readSInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (SInt64) id {
  return result.id;
}
- (PBFileBuilder*) setId:(SInt64) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (PBFileBuilder*) clearId {
  result.hasId = NO;
  result.id = 0L;
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (PBFileType) type {
  return result.type;
}
- (PBFileBuilder*) setType:(PBFileType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (PBFileBuilder*) clearType {
  result.hasType = NO;
  result.type = PBFileTypeTypeOther;
  return self;
}
- (BOOL) hasBelongApp {
  return result.hasBelongApp;
}
- (PBFileApp) belongApp {
  return result.belongApp;
}
- (PBFileBuilder*) setBelongApp:(PBFileApp) value {
  result.hasBelongApp = YES;
  result.belongApp = value;
  return self;
}
- (PBFileBuilder*) clearBelongApp {
  result.hasBelongApp = NO;
  result.belongApp = PBFileAppAppCircle;
  return self;
}
- (BOOL) hasSenderPassportId {
  return result.hasSenderPassportId;
}
- (SInt64) senderPassportId {
  return result.senderPassportId;
}
- (PBFileBuilder*) setSenderPassportId:(SInt64) value {
  result.hasSenderPassportId = YES;
  result.senderPassportId = value;
  return self;
}
- (PBFileBuilder*) clearSenderPassportId {
  result.hasSenderPassportId = NO;
  result.senderPassportId = 0L;
  return self;
}
- (BOOL) hasRelativeUrl {
  return result.hasRelativeUrl;
}
- (NSString*) relativeUrl {
  return result.relativeUrl;
}
- (PBFileBuilder*) setRelativeUrl:(NSString*) value {
  result.hasRelativeUrl = YES;
  result.relativeUrl = value;
  return self;
}
- (PBFileBuilder*) clearRelativeUrl {
  result.hasRelativeUrl = NO;
  result.relativeUrl = @"";
  return self;
}
- (BOOL) hasOriginalName {
  return result.hasOriginalName;
}
- (NSString*) originalName {
  return result.originalName;
}
- (PBFileBuilder*) setOriginalName:(NSString*) value {
  result.hasOriginalName = YES;
  result.originalName = value;
  return self;
}
- (PBFileBuilder*) clearOriginalName {
  result.hasOriginalName = NO;
  result.originalName = @"";
  return self;
}
- (BOOL) hasMd5 {
  return result.hasMd5;
}
- (NSString*) md5 {
  return result.md5;
}
- (PBFileBuilder*) setMd5:(NSString*) value {
  result.hasMd5 = YES;
  result.md5 = value;
  return self;
}
- (PBFileBuilder*) clearMd5 {
  result.hasMd5 = NO;
  result.md5 = @"";
  return self;
}
- (BOOL) hasTimestamp {
  return result.hasTimestamp;
}
- (SInt64) timestamp {
  return result.timestamp;
}
- (PBFileBuilder*) setTimestamp:(SInt64) value {
  result.hasTimestamp = YES;
  result.timestamp = value;
  return self;
}
- (PBFileBuilder*) clearTimestamp {
  result.hasTimestamp = NO;
  result.timestamp = 0L;
  return self;
}
- (BOOL) hasNonce {
  return result.hasNonce;
}
- (SInt32) nonce {
  return result.nonce;
}
- (PBFileBuilder*) setNonce:(SInt32) value {
  result.hasNonce = YES;
  result.nonce = value;
  return self;
}
- (PBFileBuilder*) clearNonce {
  result.hasNonce = NO;
  result.nonce = 0;
  return self;
}
- (BOOL) hasSignature {
  return result.hasSignature;
}
- (NSString*) signature {
  return result.signature;
}
- (PBFileBuilder*) setSignature:(NSString*) value {
  result.hasSignature = YES;
  result.signature = value;
  return self;
}
- (PBFileBuilder*) clearSignature {
  result.hasSignature = NO;
  result.signature = @"";
  return self;
}
- (BOOL) hasCreatedAt {
  return result.hasCreatedAt;
}
- (SInt64) createdAt {
  return result.createdAt;
}
- (PBFileBuilder*) setCreatedAt:(SInt64) value {
  result.hasCreatedAt = YES;
  result.createdAt = value;
  return self;
}
- (PBFileBuilder*) clearCreatedAt {
  result.hasCreatedAt = NO;
  result.createdAt = 0L;
  return self;
}
- (BOOL) hasDeletedAt {
  return result.hasDeletedAt;
}
- (SInt64) deletedAt {
  return result.deletedAt;
}
- (PBFileBuilder*) setDeletedAt:(SInt64) value {
  result.hasDeletedAt = YES;
  result.deletedAt = value;
  return self;
}
- (PBFileBuilder*) clearDeletedAt {
  result.hasDeletedAt = NO;
  result.deletedAt = 0L;
  return self;
}
@end

@interface PBUploadFileReq ()
@property (strong) PBFile* file;
@end

@implementation PBUploadFileReq

- (BOOL) hasFile {
  return !!hasFile_;
}
- (void) setHasFile:(BOOL) value_ {
  hasFile_ = !!value_;
}
@synthesize file;
- (id) init {
  if ((self = [super init])) {
    self.file = [PBFile defaultInstance];
  }
  return self;
}
static PBUploadFileReq* defaultPBUploadFileReqInstance = nil;
+ (void) initialize {
  if (self == [PBUploadFileReq class]) {
    defaultPBUploadFileReqInstance = [[PBUploadFileReq alloc] init];
  }
}
+ (PBUploadFileReq*) defaultInstance {
  return defaultPBUploadFileReqInstance;
}
- (PBUploadFileReq*) defaultInstance {
  return defaultPBUploadFileReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFile) {
    [output writeMessage:1 value:self.file];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFile) {
    size_ += computeMessageSize(1, self.file);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBUploadFileReq*) parseFromData:(NSData*) data {
  return (PBUploadFileReq*)[[[PBUploadFileReq builder] mergeFromData:data] build];
}
+ (PBUploadFileReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBUploadFileReq*)[[[PBUploadFileReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBUploadFileReq*) parseFromInputStream:(NSInputStream*) input {
  return (PBUploadFileReq*)[[[PBUploadFileReq builder] mergeFromInputStream:input] build];
}
+ (PBUploadFileReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBUploadFileReq*)[[[PBUploadFileReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBUploadFileReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBUploadFileReq*)[[[PBUploadFileReq builder] mergeFromCodedInputStream:input] build];
}
+ (PBUploadFileReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBUploadFileReq*)[[[PBUploadFileReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBUploadFileReqBuilder*) builder {
  return [[PBUploadFileReqBuilder alloc] init];
}
+ (PBUploadFileReqBuilder*) builderWithPrototype:(PBUploadFileReq*) prototype {
  return [[PBUploadFileReq builder] mergeFrom:prototype];
}
- (PBUploadFileReqBuilder*) builder {
  return [PBUploadFileReq builder];
}
- (PBUploadFileReqBuilder*) toBuilder {
  return [PBUploadFileReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFile) {
    [output appendFormat:@"%@%@ {\n", indent, @"file"];
    [self.file writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBUploadFileReq class]]) {
    return NO;
  }
  PBUploadFileReq *otherMessage = other;
  return
      self.hasFile == otherMessage.hasFile &&
      (!self.hasFile || [self.file isEqual:otherMessage.file]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasFile) {
    hashCode = hashCode * 31 + [self.file hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBUploadFileReqBuilder()
@property (strong) PBUploadFileReq* result;
@end

@implementation PBUploadFileReqBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBUploadFileReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBUploadFileReqBuilder*) clear {
  self.result = [[PBUploadFileReq alloc] init];
  return self;
}
- (PBUploadFileReqBuilder*) clone {
  return [PBUploadFileReq builderWithPrototype:result];
}
- (PBUploadFileReq*) defaultInstance {
  return [PBUploadFileReq defaultInstance];
}
- (PBUploadFileReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBUploadFileReq*) buildPartial {
  PBUploadFileReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBUploadFileReqBuilder*) mergeFrom:(PBUploadFileReq*) other {
  if (other == [PBUploadFileReq defaultInstance]) {
    return self;
  }
  if (other.hasFile) {
    [self mergeFile:other.file];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBUploadFileReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBUploadFileReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PBFileBuilder* subBuilder = [PBFile builder];
        if (self.hasFile) {
          [subBuilder mergeFrom:self.file];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFile:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasFile {
  return result.hasFile;
}
- (PBFile*) file {
  return result.file;
}
- (PBUploadFileReqBuilder*) setFile:(PBFile*) value {
  result.hasFile = YES;
  result.file = value;
  return self;
}
- (PBUploadFileReqBuilder*) setFileBuilder:(PBFileBuilder*) builderForValue {
  return [self setFile:[builderForValue build]];
}
- (PBUploadFileReqBuilder*) mergeFile:(PBFile*) value {
  if (result.hasFile &&
      result.file != [PBFile defaultInstance]) {
    result.file =
      [[[PBFile builderWithPrototype:result.file] mergeFrom:value] buildPartial];
  } else {
    result.file = value;
  }
  result.hasFile = YES;
  return self;
}
- (PBUploadFileReqBuilder*) clearFile {
  result.hasFile = NO;
  result.file = [PBFile defaultInstance];
  return self;
}
@end

@interface PBUploadFileResp ()
@property (strong) PBFile* file;
@property (strong) NSString* detail;
@end

@implementation PBUploadFileResp

- (BOOL) hasFile {
  return !!hasFile_;
}
- (void) setHasFile:(BOOL) value_ {
  hasFile_ = !!value_;
}
@synthesize file;
- (BOOL) hasDetail {
  return !!hasDetail_;
}
- (void) setHasDetail:(BOOL) value_ {
  hasDetail_ = !!value_;
}
@synthesize detail;
- (id) init {
  if ((self = [super init])) {
    self.file = [PBFile defaultInstance];
    self.detail = @"";
  }
  return self;
}
static PBUploadFileResp* defaultPBUploadFileRespInstance = nil;
+ (void) initialize {
  if (self == [PBUploadFileResp class]) {
    defaultPBUploadFileRespInstance = [[PBUploadFileResp alloc] init];
  }
}
+ (PBUploadFileResp*) defaultInstance {
  return defaultPBUploadFileRespInstance;
}
- (PBUploadFileResp*) defaultInstance {
  return defaultPBUploadFileRespInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFile) {
    [output writeMessage:1 value:self.file];
  }
  if (self.hasDetail) {
    [output writeString:2 value:self.detail];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFile) {
    size_ += computeMessageSize(1, self.file);
  }
  if (self.hasDetail) {
    size_ += computeStringSize(2, self.detail);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBUploadFileResp*) parseFromData:(NSData*) data {
  return (PBUploadFileResp*)[[[PBUploadFileResp builder] mergeFromData:data] build];
}
+ (PBUploadFileResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBUploadFileResp*)[[[PBUploadFileResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBUploadFileResp*) parseFromInputStream:(NSInputStream*) input {
  return (PBUploadFileResp*)[[[PBUploadFileResp builder] mergeFromInputStream:input] build];
}
+ (PBUploadFileResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBUploadFileResp*)[[[PBUploadFileResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBUploadFileResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBUploadFileResp*)[[[PBUploadFileResp builder] mergeFromCodedInputStream:input] build];
}
+ (PBUploadFileResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBUploadFileResp*)[[[PBUploadFileResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBUploadFileRespBuilder*) builder {
  return [[PBUploadFileRespBuilder alloc] init];
}
+ (PBUploadFileRespBuilder*) builderWithPrototype:(PBUploadFileResp*) prototype {
  return [[PBUploadFileResp builder] mergeFrom:prototype];
}
- (PBUploadFileRespBuilder*) builder {
  return [PBUploadFileResp builder];
}
- (PBUploadFileRespBuilder*) toBuilder {
  return [PBUploadFileResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFile) {
    [output appendFormat:@"%@%@ {\n", indent, @"file"];
    [self.file writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasDetail) {
    [output appendFormat:@"%@%@: %@\n", indent, @"detail", self.detail];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBUploadFileResp class]]) {
    return NO;
  }
  PBUploadFileResp *otherMessage = other;
  return
      self.hasFile == otherMessage.hasFile &&
      (!self.hasFile || [self.file isEqual:otherMessage.file]) &&
      self.hasDetail == otherMessage.hasDetail &&
      (!self.hasDetail || [self.detail isEqual:otherMessage.detail]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasFile) {
    hashCode = hashCode * 31 + [self.file hash];
  }
  if (self.hasDetail) {
    hashCode = hashCode * 31 + [self.detail hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBUploadFileRespBuilder()
@property (strong) PBUploadFileResp* result;
@end

@implementation PBUploadFileRespBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBUploadFileResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBUploadFileRespBuilder*) clear {
  self.result = [[PBUploadFileResp alloc] init];
  return self;
}
- (PBUploadFileRespBuilder*) clone {
  return [PBUploadFileResp builderWithPrototype:result];
}
- (PBUploadFileResp*) defaultInstance {
  return [PBUploadFileResp defaultInstance];
}
- (PBUploadFileResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBUploadFileResp*) buildPartial {
  PBUploadFileResp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBUploadFileRespBuilder*) mergeFrom:(PBUploadFileResp*) other {
  if (other == [PBUploadFileResp defaultInstance]) {
    return self;
  }
  if (other.hasFile) {
    [self mergeFile:other.file];
  }
  if (other.hasDetail) {
    [self setDetail:other.detail];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBUploadFileRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBUploadFileRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PBFileBuilder* subBuilder = [PBFile builder];
        if (self.hasFile) {
          [subBuilder mergeFrom:self.file];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFile:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setDetail:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasFile {
  return result.hasFile;
}
- (PBFile*) file {
  return result.file;
}
- (PBUploadFileRespBuilder*) setFile:(PBFile*) value {
  result.hasFile = YES;
  result.file = value;
  return self;
}
- (PBUploadFileRespBuilder*) setFileBuilder:(PBFileBuilder*) builderForValue {
  return [self setFile:[builderForValue build]];
}
- (PBUploadFileRespBuilder*) mergeFile:(PBFile*) value {
  if (result.hasFile &&
      result.file != [PBFile defaultInstance]) {
    result.file =
      [[[PBFile builderWithPrototype:result.file] mergeFrom:value] buildPartial];
  } else {
    result.file = value;
  }
  result.hasFile = YES;
  return self;
}
- (PBUploadFileRespBuilder*) clearFile {
  result.hasFile = NO;
  result.file = [PBFile defaultInstance];
  return self;
}
- (BOOL) hasDetail {
  return result.hasDetail;
}
- (NSString*) detail {
  return result.detail;
}
- (PBUploadFileRespBuilder*) setDetail:(NSString*) value {
  result.hasDetail = YES;
  result.detail = value;
  return self;
}
- (PBUploadFileRespBuilder*) clearDetail {
  result.hasDetail = NO;
  result.detail = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
