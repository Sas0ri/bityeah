// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

#import "Frame.pb.h"
// @@protoc_insertion_point(imports)

@class Int64Array;
@class Int64ArrayBuilder;
@class PBFetchParkMembersReq;
@class PBFetchParkMembersReqBuilder;
@class PBFetchParkMembersResp;
@class PBFetchParkMembersRespBuilder;
@class PBFetchUserParksReq;
@class PBFetchUserParksReqBuilder;
@class PBFetchUserParksResp;
@class PBFetchUserParksRespBuilder;
@class PBFrame;
@class PBFrameBuilder;
@class PBParkItem;
@class PBParkItemBuilder;
@class PBParkMembersChangedNotify;
@class PBParkMembersChangedNotifyBuilder;
@class PBParkMembersChangedNotifyParkChanges;
@class PBParkMembersChangedNotifyParkChangesBuilder;
@class PBUserParks;
@class PBUserParksBuilder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif


@interface ParkRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
+ (id<PBExtensionField>) fetchParkMembersReq;
+ (id<PBExtensionField>) fetchParkMembersResp;
+ (id<PBExtensionField>) fetchUserParksReq;
+ (id<PBExtensionField>) fetchUserParksResp;
+ (id<PBExtensionField>) parkMembersChangedNotify;
@end

@interface PBParkItem : PBGeneratedMessage {
@private
  BOOL hasParkId_:1;
  SInt64 parkId;
  PBAppendableArray * memberIdsArray;
}
- (BOOL) hasParkId;
@property (readonly) SInt64 parkId;
@property (readonly, strong) PBArray * memberIds;
- (SInt64)memberIdsAtIndex:(NSUInteger)index;

+ (PBParkItem*) defaultInstance;
- (PBParkItem*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBParkItemBuilder*) builder;
+ (PBParkItemBuilder*) builder;
+ (PBParkItemBuilder*) builderWithPrototype:(PBParkItem*) prototype;
- (PBParkItemBuilder*) toBuilder;

+ (PBParkItem*) parseFromData:(NSData*) data;
+ (PBParkItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBParkItem*) parseFromInputStream:(NSInputStream*) input;
+ (PBParkItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBParkItem*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBParkItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBParkItemBuilder : PBGeneratedMessageBuilder {
@private
  PBParkItem* result;
}

- (PBParkItem*) defaultInstance;

- (PBParkItemBuilder*) clear;
- (PBParkItemBuilder*) clone;

- (PBParkItem*) build;
- (PBParkItem*) buildPartial;

- (PBParkItemBuilder*) mergeFrom:(PBParkItem*) other;
- (PBParkItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBParkItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasParkId;
- (SInt64) parkId;
- (PBParkItemBuilder*) setParkId:(SInt64) value;
- (PBParkItemBuilder*) clearParkId;

- (PBAppendableArray *)memberIds;
- (SInt64)memberIdsAtIndex:(NSUInteger)index;
- (PBParkItemBuilder *)addMemberIds:(SInt64)value;
- (PBParkItemBuilder *)setMemberIdsArray:(NSArray *)array;
- (PBParkItemBuilder *)setMemberIdsValues:(const SInt64 *)values count:(NSUInteger)count;
- (PBParkItemBuilder *)clearMemberIds;
@end

@interface PBFetchParkMembersReq : PBGeneratedMessage {
@private
  BOOL hasParkId_:1;
  SInt64 parkId;
}
- (BOOL) hasParkId;
@property (readonly) SInt64 parkId;

+ (PBFetchParkMembersReq*) defaultInstance;
- (PBFetchParkMembersReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchParkMembersReqBuilder*) builder;
+ (PBFetchParkMembersReqBuilder*) builder;
+ (PBFetchParkMembersReqBuilder*) builderWithPrototype:(PBFetchParkMembersReq*) prototype;
- (PBFetchParkMembersReqBuilder*) toBuilder;

+ (PBFetchParkMembersReq*) parseFromData:(NSData*) data;
+ (PBFetchParkMembersReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchParkMembersReq*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchParkMembersReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchParkMembersReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchParkMembersReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchParkMembersReqBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchParkMembersReq* result;
}

- (PBFetchParkMembersReq*) defaultInstance;

- (PBFetchParkMembersReqBuilder*) clear;
- (PBFetchParkMembersReqBuilder*) clone;

- (PBFetchParkMembersReq*) build;
- (PBFetchParkMembersReq*) buildPartial;

- (PBFetchParkMembersReqBuilder*) mergeFrom:(PBFetchParkMembersReq*) other;
- (PBFetchParkMembersReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchParkMembersReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasParkId;
- (SInt64) parkId;
- (PBFetchParkMembersReqBuilder*) setParkId:(SInt64) value;
- (PBFetchParkMembersReqBuilder*) clearParkId;
@end

@interface PBFetchParkMembersResp : PBGeneratedMessage {
@private
  BOOL hasItem_:1;
  PBParkItem* item;
}
- (BOOL) hasItem;
@property (readonly, strong) PBParkItem* item;

+ (PBFetchParkMembersResp*) defaultInstance;
- (PBFetchParkMembersResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchParkMembersRespBuilder*) builder;
+ (PBFetchParkMembersRespBuilder*) builder;
+ (PBFetchParkMembersRespBuilder*) builderWithPrototype:(PBFetchParkMembersResp*) prototype;
- (PBFetchParkMembersRespBuilder*) toBuilder;

+ (PBFetchParkMembersResp*) parseFromData:(NSData*) data;
+ (PBFetchParkMembersResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchParkMembersResp*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchParkMembersResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchParkMembersResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchParkMembersResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchParkMembersRespBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchParkMembersResp* result;
}

- (PBFetchParkMembersResp*) defaultInstance;

- (PBFetchParkMembersRespBuilder*) clear;
- (PBFetchParkMembersRespBuilder*) clone;

- (PBFetchParkMembersResp*) build;
- (PBFetchParkMembersResp*) buildPartial;

- (PBFetchParkMembersRespBuilder*) mergeFrom:(PBFetchParkMembersResp*) other;
- (PBFetchParkMembersRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchParkMembersRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasItem;
- (PBParkItem*) item;
- (PBFetchParkMembersRespBuilder*) setItem:(PBParkItem*) value;
- (PBFetchParkMembersRespBuilder*) setItemBuilder:(PBParkItemBuilder*) builderForValue;
- (PBFetchParkMembersRespBuilder*) mergeItem:(PBParkItem*) value;
- (PBFetchParkMembersRespBuilder*) clearItem;
@end

@interface PBParkMembersChangedNotify : PBGeneratedMessage {
@private
  NSMutableArray * parkChangesArray;
}
@property (readonly, strong) NSArray * parkChanges;
- (PBParkMembersChangedNotifyParkChanges*)parkChangesAtIndex:(NSUInteger)index;

+ (PBParkMembersChangedNotify*) defaultInstance;
- (PBParkMembersChangedNotify*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBParkMembersChangedNotifyBuilder*) builder;
+ (PBParkMembersChangedNotifyBuilder*) builder;
+ (PBParkMembersChangedNotifyBuilder*) builderWithPrototype:(PBParkMembersChangedNotify*) prototype;
- (PBParkMembersChangedNotifyBuilder*) toBuilder;

+ (PBParkMembersChangedNotify*) parseFromData:(NSData*) data;
+ (PBParkMembersChangedNotify*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBParkMembersChangedNotify*) parseFromInputStream:(NSInputStream*) input;
+ (PBParkMembersChangedNotify*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBParkMembersChangedNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBParkMembersChangedNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBParkMembersChangedNotifyParkChanges : PBGeneratedMessage {
@private
  BOOL hasParkId_:1;
  SInt64 parkId;
  PBAppendableArray * addedMemberArray;
  PBAppendableArray * removedMemberArray;
}
- (BOOL) hasParkId;
@property (readonly) SInt64 parkId;
@property (readonly, strong) PBArray * addedMember;
@property (readonly, strong) PBArray * removedMember;
- (SInt64)addedMemberAtIndex:(NSUInteger)index;
- (SInt64)removedMemberAtIndex:(NSUInteger)index;

+ (PBParkMembersChangedNotifyParkChanges*) defaultInstance;
- (PBParkMembersChangedNotifyParkChanges*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBParkMembersChangedNotifyParkChangesBuilder*) builder;
+ (PBParkMembersChangedNotifyParkChangesBuilder*) builder;
+ (PBParkMembersChangedNotifyParkChangesBuilder*) builderWithPrototype:(PBParkMembersChangedNotifyParkChanges*) prototype;
- (PBParkMembersChangedNotifyParkChangesBuilder*) toBuilder;

+ (PBParkMembersChangedNotifyParkChanges*) parseFromData:(NSData*) data;
+ (PBParkMembersChangedNotifyParkChanges*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBParkMembersChangedNotifyParkChanges*) parseFromInputStream:(NSInputStream*) input;
+ (PBParkMembersChangedNotifyParkChanges*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBParkMembersChangedNotifyParkChanges*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBParkMembersChangedNotifyParkChanges*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBParkMembersChangedNotifyParkChangesBuilder : PBGeneratedMessageBuilder {
@private
  PBParkMembersChangedNotifyParkChanges* result;
}

- (PBParkMembersChangedNotifyParkChanges*) defaultInstance;

- (PBParkMembersChangedNotifyParkChangesBuilder*) clear;
- (PBParkMembersChangedNotifyParkChangesBuilder*) clone;

- (PBParkMembersChangedNotifyParkChanges*) build;
- (PBParkMembersChangedNotifyParkChanges*) buildPartial;

- (PBParkMembersChangedNotifyParkChangesBuilder*) mergeFrom:(PBParkMembersChangedNotifyParkChanges*) other;
- (PBParkMembersChangedNotifyParkChangesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBParkMembersChangedNotifyParkChangesBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasParkId;
- (SInt64) parkId;
- (PBParkMembersChangedNotifyParkChangesBuilder*) setParkId:(SInt64) value;
- (PBParkMembersChangedNotifyParkChangesBuilder*) clearParkId;

- (PBAppendableArray *)addedMember;
- (SInt64)addedMemberAtIndex:(NSUInteger)index;
- (PBParkMembersChangedNotifyParkChangesBuilder *)addAddedMember:(SInt64)value;
- (PBParkMembersChangedNotifyParkChangesBuilder *)setAddedMemberArray:(NSArray *)array;
- (PBParkMembersChangedNotifyParkChangesBuilder *)setAddedMemberValues:(const SInt64 *)values count:(NSUInteger)count;
- (PBParkMembersChangedNotifyParkChangesBuilder *)clearAddedMember;

- (PBAppendableArray *)removedMember;
- (SInt64)removedMemberAtIndex:(NSUInteger)index;
- (PBParkMembersChangedNotifyParkChangesBuilder *)addRemovedMember:(SInt64)value;
- (PBParkMembersChangedNotifyParkChangesBuilder *)setRemovedMemberArray:(NSArray *)array;
- (PBParkMembersChangedNotifyParkChangesBuilder *)setRemovedMemberValues:(const SInt64 *)values count:(NSUInteger)count;
- (PBParkMembersChangedNotifyParkChangesBuilder *)clearRemovedMember;
@end

@interface PBParkMembersChangedNotifyBuilder : PBGeneratedMessageBuilder {
@private
  PBParkMembersChangedNotify* result;
}

- (PBParkMembersChangedNotify*) defaultInstance;

- (PBParkMembersChangedNotifyBuilder*) clear;
- (PBParkMembersChangedNotifyBuilder*) clone;

- (PBParkMembersChangedNotify*) build;
- (PBParkMembersChangedNotify*) buildPartial;

- (PBParkMembersChangedNotifyBuilder*) mergeFrom:(PBParkMembersChangedNotify*) other;
- (PBParkMembersChangedNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBParkMembersChangedNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)parkChanges;
- (PBParkMembersChangedNotifyParkChanges*)parkChangesAtIndex:(NSUInteger)index;
- (PBParkMembersChangedNotifyBuilder *)addParkChanges:(PBParkMembersChangedNotifyParkChanges*)value;
- (PBParkMembersChangedNotifyBuilder *)setParkChangesArray:(NSArray *)array;
- (PBParkMembersChangedNotifyBuilder *)clearParkChanges;
@end

@interface PBUserParks : PBGeneratedMessage {
@private
  PBAppendableArray * parkIdArray;
}
@property (readonly, strong) PBArray * parkId;
- (SInt64)parkIdAtIndex:(NSUInteger)index;

+ (PBUserParks*) defaultInstance;
- (PBUserParks*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBUserParksBuilder*) builder;
+ (PBUserParksBuilder*) builder;
+ (PBUserParksBuilder*) builderWithPrototype:(PBUserParks*) prototype;
- (PBUserParksBuilder*) toBuilder;

+ (PBUserParks*) parseFromData:(NSData*) data;
+ (PBUserParks*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserParks*) parseFromInputStream:(NSInputStream*) input;
+ (PBUserParks*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUserParks*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBUserParks*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBUserParksBuilder : PBGeneratedMessageBuilder {
@private
  PBUserParks* result;
}

- (PBUserParks*) defaultInstance;

- (PBUserParksBuilder*) clear;
- (PBUserParksBuilder*) clone;

- (PBUserParks*) build;
- (PBUserParks*) buildPartial;

- (PBUserParksBuilder*) mergeFrom:(PBUserParks*) other;
- (PBUserParksBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBUserParksBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)parkId;
- (SInt64)parkIdAtIndex:(NSUInteger)index;
- (PBUserParksBuilder *)addParkId:(SInt64)value;
- (PBUserParksBuilder *)setParkIdArray:(NSArray *)array;
- (PBUserParksBuilder *)setParkIdValues:(const SInt64 *)values count:(NSUInteger)count;
- (PBUserParksBuilder *)clearParkId;
@end

@interface PBFetchUserParksReq : PBGeneratedMessage {
@private
  BOOL hasPassportId_:1;
  SInt64 passportId;
}
- (BOOL) hasPassportId;
@property (readonly) SInt64 passportId;

+ (PBFetchUserParksReq*) defaultInstance;
- (PBFetchUserParksReq*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchUserParksReqBuilder*) builder;
+ (PBFetchUserParksReqBuilder*) builder;
+ (PBFetchUserParksReqBuilder*) builderWithPrototype:(PBFetchUserParksReq*) prototype;
- (PBFetchUserParksReqBuilder*) toBuilder;

+ (PBFetchUserParksReq*) parseFromData:(NSData*) data;
+ (PBFetchUserParksReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchUserParksReq*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchUserParksReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchUserParksReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchUserParksReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchUserParksReqBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchUserParksReq* result;
}

- (PBFetchUserParksReq*) defaultInstance;

- (PBFetchUserParksReqBuilder*) clear;
- (PBFetchUserParksReqBuilder*) clone;

- (PBFetchUserParksReq*) build;
- (PBFetchUserParksReq*) buildPartial;

- (PBFetchUserParksReqBuilder*) mergeFrom:(PBFetchUserParksReq*) other;
- (PBFetchUserParksReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchUserParksReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPassportId;
- (SInt64) passportId;
- (PBFetchUserParksReqBuilder*) setPassportId:(SInt64) value;
- (PBFetchUserParksReqBuilder*) clearPassportId;
@end

@interface PBFetchUserParksResp : PBGeneratedMessage {
@private
  PBAppendableArray * parkIdsArray;
}
@property (readonly, strong) PBArray * parkIds;
- (SInt64)parkIdsAtIndex:(NSUInteger)index;

+ (PBFetchUserParksResp*) defaultInstance;
- (PBFetchUserParksResp*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBFetchUserParksRespBuilder*) builder;
+ (PBFetchUserParksRespBuilder*) builder;
+ (PBFetchUserParksRespBuilder*) builderWithPrototype:(PBFetchUserParksResp*) prototype;
- (PBFetchUserParksRespBuilder*) toBuilder;

+ (PBFetchUserParksResp*) parseFromData:(NSData*) data;
+ (PBFetchUserParksResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchUserParksResp*) parseFromInputStream:(NSInputStream*) input;
+ (PBFetchUserParksResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBFetchUserParksResp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBFetchUserParksResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBFetchUserParksRespBuilder : PBGeneratedMessageBuilder {
@private
  PBFetchUserParksResp* result;
}

- (PBFetchUserParksResp*) defaultInstance;

- (PBFetchUserParksRespBuilder*) clear;
- (PBFetchUserParksRespBuilder*) clone;

- (PBFetchUserParksResp*) build;
- (PBFetchUserParksResp*) buildPartial;

- (PBFetchUserParksRespBuilder*) mergeFrom:(PBFetchUserParksResp*) other;
- (PBFetchUserParksRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBFetchUserParksRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (PBAppendableArray *)parkIds;
- (SInt64)parkIdsAtIndex:(NSUInteger)index;
- (PBFetchUserParksRespBuilder *)addParkIds:(SInt64)value;
- (PBFetchUserParksRespBuilder *)setParkIdsArray:(NSArray *)array;
- (PBFetchUserParksRespBuilder *)setParkIdsValues:(const SInt64 *)values count:(NSUInteger)count;
- (PBFetchUserParksRespBuilder *)clearParkIds;
@end


// @@protoc_insertion_point(global_scope)
