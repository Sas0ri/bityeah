// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Group.pb.h"
// @@protoc_insertion_point(imports)

@implementation GroupRoot
static id<PBExtensionField> GroupRoot_fetchGroupReq = nil;
static id<PBExtensionField> GroupRoot_fetchGroupResp = nil;
static id<PBExtensionField> GroupRoot_fetchGroupAndMembersReq = nil;
static id<PBExtensionField> GroupRoot_fetchGroupAndMembersResp = nil;
static id<PBExtensionField> GroupRoot_fetchGroupAndMembersByPassportIdReq = nil;
static id<PBExtensionField> GroupRoot_fetchGroupAndMembersByPassportIdResp = nil;
static id<PBExtensionField> GroupRoot_fetchChangedGroupReq = nil;
static id<PBExtensionField> GroupRoot_fetchChangedGroupResp = nil;
static id<PBExtensionField> GroupRoot_groupChangedNotify = nil;
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [GroupRoot class]) {
    GroupRoot_fetchGroupReq =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[PBFrame class]
                                       fieldNumber:300
                                      defaultValue:[PBFetchGroupReq defaultInstance]
                               messageOrGroupClass:[PBFetchGroupReq class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    GroupRoot_fetchGroupResp =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[PBFrame class]
                                       fieldNumber:301
                                      defaultValue:[PBFetchGroupResp defaultInstance]
                               messageOrGroupClass:[PBFetchGroupResp class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    GroupRoot_fetchGroupAndMembersReq =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[PBFrame class]
                                       fieldNumber:302
                                      defaultValue:[PBFetchGroupAndMembersReq defaultInstance]
                               messageOrGroupClass:[PBFetchGroupAndMembersReq class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    GroupRoot_fetchGroupAndMembersResp =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[PBFrame class]
                                       fieldNumber:303
                                      defaultValue:[PBFetchGroupAndMembersResp defaultInstance]
                               messageOrGroupClass:[PBFetchGroupAndMembersResp class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    GroupRoot_fetchGroupAndMembersByPassportIdReq =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[PBFrame class]
                                       fieldNumber:304
                                      defaultValue:[PBFetchGroupAndMembersByPassportIdReq defaultInstance]
                               messageOrGroupClass:[PBFetchGroupAndMembersByPassportIdReq class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    GroupRoot_fetchGroupAndMembersByPassportIdResp =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[PBFrame class]
                                       fieldNumber:305
                                      defaultValue:[PBFetchGroupAndMembersByPassportIdResp defaultInstance]
                               messageOrGroupClass:[PBFetchGroupAndMembersByPassportIdResp class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    GroupRoot_fetchChangedGroupReq =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[PBFrame class]
                                       fieldNumber:306
                                      defaultValue:[PBFetchChangedGroupReq defaultInstance]
                               messageOrGroupClass:[PBFetchChangedGroupReq class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    GroupRoot_fetchChangedGroupResp =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[PBFrame class]
                                       fieldNumber:307
                                      defaultValue:[PBFetchChangedGroupResp defaultInstance]
                               messageOrGroupClass:[PBFetchChangedGroupResp class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    GroupRoot_groupChangedNotify =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[PBFrame class]
                                       fieldNumber:350
                                      defaultValue:[PBGroupChangedNotify defaultInstance]
                               messageOrGroupClass:[PBGroupChangedNotify class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [FrameRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
  [registry addExtension:GroupRoot_fetchGroupReq];
  [registry addExtension:GroupRoot_fetchGroupResp];
  [registry addExtension:GroupRoot_fetchGroupAndMembersReq];
  [registry addExtension:GroupRoot_fetchGroupAndMembersResp];
  [registry addExtension:GroupRoot_fetchGroupAndMembersByPassportIdReq];
  [registry addExtension:GroupRoot_fetchGroupAndMembersByPassportIdResp];
  [registry addExtension:GroupRoot_fetchChangedGroupReq];
  [registry addExtension:GroupRoot_fetchChangedGroupResp];
  [registry addExtension:GroupRoot_groupChangedNotify];
}
+ (id<PBExtensionField>) fetchGroupReq {
  return GroupRoot_fetchGroupReq;
}
+ (id<PBExtensionField>) fetchGroupResp {
  return GroupRoot_fetchGroupResp;
}
+ (id<PBExtensionField>) fetchGroupAndMembersReq {
  return GroupRoot_fetchGroupAndMembersReq;
}
+ (id<PBExtensionField>) fetchGroupAndMembersResp {
  return GroupRoot_fetchGroupAndMembersResp;
}
+ (id<PBExtensionField>) fetchGroupAndMembersByPassportIdReq {
  return GroupRoot_fetchGroupAndMembersByPassportIdReq;
}
+ (id<PBExtensionField>) fetchGroupAndMembersByPassportIdResp {
  return GroupRoot_fetchGroupAndMembersByPassportIdResp;
}
+ (id<PBExtensionField>) fetchChangedGroupReq {
  return GroupRoot_fetchChangedGroupReq;
}
+ (id<PBExtensionField>) fetchChangedGroupResp {
  return GroupRoot_fetchChangedGroupResp;
}
+ (id<PBExtensionField>) groupChangedNotify {
  return GroupRoot_groupChangedNotify;
}
@end

@interface PBGroup ()
@property SInt64 id;
@property (strong) NSString* name;
@property PBGroupType type;
@property SInt64 corporationId;
@property (strong) NSString* logo;
@property SInt64 createdAt;
@property SInt64 updatedAt;
@end

@implementation PBGroup

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value_ {
  hasType_ = !!value_;
}
@synthesize type;
- (BOOL) hasCorporationId {
  return !!hasCorporationId_;
}
- (void) setHasCorporationId:(BOOL) value_ {
  hasCorporationId_ = !!value_;
}
@synthesize corporationId;
- (BOOL) hasLogo {
  return !!hasLogo_;
}
- (void) setHasLogo:(BOOL) value_ {
  hasLogo_ = !!value_;
}
@synthesize logo;
- (BOOL) hasCreatedAt {
  return !!hasCreatedAt_;
}
- (void) setHasCreatedAt:(BOOL) value_ {
  hasCreatedAt_ = !!value_;
}
@synthesize createdAt;
- (BOOL) hasUpdatedAt {
  return !!hasUpdatedAt_;
}
- (void) setHasUpdatedAt:(BOOL) value_ {
  hasUpdatedAt_ = !!value_;
}
@synthesize updatedAt;
- (id) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.name = @"";
    self.type = PBGroupTypeTypeNormal;
    self.corporationId = 0L;
    self.logo = @"";
    self.createdAt = 0L;
    self.updatedAt = 0L;
  }
  return self;
}
static PBGroup* defaultPBGroupInstance = nil;
+ (void) initialize {
  if (self == [PBGroup class]) {
    defaultPBGroupInstance = [[PBGroup alloc] init];
  }
}
+ (PBGroup*) defaultInstance {
  return defaultPBGroupInstance;
}
- (PBGroup*) defaultInstance {
  return defaultPBGroupInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeSInt64:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasType) {
    [output writeEnum:3 value:self.type];
  }
  if (self.hasCorporationId) {
    [output writeSInt64:4 value:self.corporationId];
  }
  if (self.hasLogo) {
    [output writeString:5 value:self.logo];
  }
  if (self.hasCreatedAt) {
    [output writeSInt64:6 value:self.createdAt];
  }
  if (self.hasUpdatedAt) {
    [output writeSInt64:7 value:self.updatedAt];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeSInt64Size(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasType) {
    size_ += computeEnumSize(3, self.type);
  }
  if (self.hasCorporationId) {
    size_ += computeSInt64Size(4, self.corporationId);
  }
  if (self.hasLogo) {
    size_ += computeStringSize(5, self.logo);
  }
  if (self.hasCreatedAt) {
    size_ += computeSInt64Size(6, self.createdAt);
  }
  if (self.hasUpdatedAt) {
    size_ += computeSInt64Size(7, self.updatedAt);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBGroup*) parseFromData:(NSData*) data {
  return (PBGroup*)[[[PBGroup builder] mergeFromData:data] build];
}
+ (PBGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroup*)[[[PBGroup builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBGroup*) parseFromInputStream:(NSInputStream*) input {
  return (PBGroup*)[[[PBGroup builder] mergeFromInputStream:input] build];
}
+ (PBGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroup*)[[[PBGroup builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBGroup*)[[[PBGroup builder] mergeFromCodedInputStream:input] build];
}
+ (PBGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroup*)[[[PBGroup builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGroupBuilder*) builder {
  return [[PBGroupBuilder alloc] init];
}
+ (PBGroupBuilder*) builderWithPrototype:(PBGroup*) prototype {
  return [[PBGroup builder] mergeFrom:prototype];
}
- (PBGroupBuilder*) builder {
  return [PBGroup builder];
}
- (PBGroupBuilder*) toBuilder {
  return [PBGroup builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  if (self.hasCorporationId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"corporationId", [NSNumber numberWithLongLong:self.corporationId]];
  }
  if (self.hasLogo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"logo", self.logo];
  }
  if (self.hasCreatedAt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createdAt", [NSNumber numberWithLongLong:self.createdAt]];
  }
  if (self.hasUpdatedAt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updatedAt", [NSNumber numberWithLongLong:self.updatedAt]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBGroup class]]) {
    return NO;
  }
  PBGroup *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasCorporationId == otherMessage.hasCorporationId &&
      (!self.hasCorporationId || self.corporationId == otherMessage.corporationId) &&
      self.hasLogo == otherMessage.hasLogo &&
      (!self.hasLogo || [self.logo isEqual:otherMessage.logo]) &&
      self.hasCreatedAt == otherMessage.hasCreatedAt &&
      (!self.hasCreatedAt || self.createdAt == otherMessage.createdAt) &&
      self.hasUpdatedAt == otherMessage.hasUpdatedAt &&
      (!self.hasUpdatedAt || self.updatedAt == otherMessage.updatedAt) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  if (self.hasCorporationId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.corporationId] hash];
  }
  if (self.hasLogo) {
    hashCode = hashCode * 31 + [self.logo hash];
  }
  if (self.hasCreatedAt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createdAt] hash];
  }
  if (self.hasUpdatedAt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.updatedAt] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL PBGroupTypeIsValidValue(PBGroupType value) {
  switch (value) {
    case PBGroupTypeTypeNormal:
    case PBGroupTypeTypeSuper:
    case PBGroupTypeTypeOrg:
    case PBGroupTypeTypeCorp:
      return YES;
    default:
      return NO;
  }
}
@interface PBGroupBuilder()
@property (strong) PBGroup* result;
@end

@implementation PBGroupBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBGroup alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBGroupBuilder*) clear {
  self.result = [[PBGroup alloc] init];
  return self;
}
- (PBGroupBuilder*) clone {
  return [PBGroup builderWithPrototype:result];
}
- (PBGroup*) defaultInstance {
  return [PBGroup defaultInstance];
}
- (PBGroup*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBGroup*) buildPartial {
  PBGroup* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBGroupBuilder*) mergeFrom:(PBGroup*) other {
  if (other == [PBGroup defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasCorporationId) {
    [self setCorporationId:other.corporationId];
  }
  if (other.hasLogo) {
    [self setLogo:other.logo];
  }
  if (other.hasCreatedAt) {
    [self setCreatedAt:other.createdAt];
  }
  if (other.hasUpdatedAt) {
    [self setUpdatedAt:other.updatedAt];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readSInt64]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        PBGroupType value = (PBGroupType)[input readEnum];
        if (PBGroupTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        [self setCorporationId:[input readSInt64]];
        break;
      }
      case 42: {
        [self setLogo:[input readString]];
        break;
      }
      case 48: {
        [self setCreatedAt:[input readSInt64]];
        break;
      }
      case 56: {
        [self setUpdatedAt:[input readSInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (SInt64) id {
  return result.id;
}
- (PBGroupBuilder*) setId:(SInt64) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (PBGroupBuilder*) clearId {
  result.hasId = NO;
  result.id = 0L;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (PBGroupBuilder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (PBGroupBuilder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (PBGroupType) type {
  return result.type;
}
- (PBGroupBuilder*) setType:(PBGroupType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (PBGroupBuilder*) clearType {
  result.hasType = NO;
  result.type = PBGroupTypeTypeNormal;
  return self;
}
- (BOOL) hasCorporationId {
  return result.hasCorporationId;
}
- (SInt64) corporationId {
  return result.corporationId;
}
- (PBGroupBuilder*) setCorporationId:(SInt64) value {
  result.hasCorporationId = YES;
  result.corporationId = value;
  return self;
}
- (PBGroupBuilder*) clearCorporationId {
  result.hasCorporationId = NO;
  result.corporationId = 0L;
  return self;
}
- (BOOL) hasLogo {
  return result.hasLogo;
}
- (NSString*) logo {
  return result.logo;
}
- (PBGroupBuilder*) setLogo:(NSString*) value {
  result.hasLogo = YES;
  result.logo = value;
  return self;
}
- (PBGroupBuilder*) clearLogo {
  result.hasLogo = NO;
  result.logo = @"";
  return self;
}
- (BOOL) hasCreatedAt {
  return result.hasCreatedAt;
}
- (SInt64) createdAt {
  return result.createdAt;
}
- (PBGroupBuilder*) setCreatedAt:(SInt64) value {
  result.hasCreatedAt = YES;
  result.createdAt = value;
  return self;
}
- (PBGroupBuilder*) clearCreatedAt {
  result.hasCreatedAt = NO;
  result.createdAt = 0L;
  return self;
}
- (BOOL) hasUpdatedAt {
  return result.hasUpdatedAt;
}
- (SInt64) updatedAt {
  return result.updatedAt;
}
- (PBGroupBuilder*) setUpdatedAt:(SInt64) value {
  result.hasUpdatedAt = YES;
  result.updatedAt = value;
  return self;
}
- (PBGroupBuilder*) clearUpdatedAt {
  result.hasUpdatedAt = NO;
  result.updatedAt = 0L;
  return self;
}
@end

@interface PBGroupMember ()
@property SInt64 id;
@property SInt64 passportId;
@property SInt64 groupId;
@property (strong) NSString* name;
@property PBGroupMemberPermission permission;
@property PBGroupMemberStatus status;
@property SInt64 createdAt;
@property SInt64 updatedAt;
@end

@implementation PBGroupMember

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasPassportId {
  return !!hasPassportId_;
}
- (void) setHasPassportId:(BOOL) value_ {
  hasPassportId_ = !!value_;
}
@synthesize passportId;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) value_ {
  hasGroupId_ = !!value_;
}
@synthesize groupId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasPermission {
  return !!hasPermission_;
}
- (void) setHasPermission:(BOOL) value_ {
  hasPermission_ = !!value_;
}
@synthesize permission;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value_ {
  hasStatus_ = !!value_;
}
@synthesize status;
- (BOOL) hasCreatedAt {
  return !!hasCreatedAt_;
}
- (void) setHasCreatedAt:(BOOL) value_ {
  hasCreatedAt_ = !!value_;
}
@synthesize createdAt;
- (BOOL) hasUpdatedAt {
  return !!hasUpdatedAt_;
}
- (void) setHasUpdatedAt:(BOOL) value_ {
  hasUpdatedAt_ = !!value_;
}
@synthesize updatedAt;
- (id) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.passportId = 0L;
    self.groupId = 0L;
    self.name = @"";
    self.permission = PBGroupMemberPermissionPermissionNormal;
    self.status = PBGroupMemberStatusStatusCommon;
    self.createdAt = 0L;
    self.updatedAt = 0L;
  }
  return self;
}
static PBGroupMember* defaultPBGroupMemberInstance = nil;
+ (void) initialize {
  if (self == [PBGroupMember class]) {
    defaultPBGroupMemberInstance = [[PBGroupMember alloc] init];
  }
}
+ (PBGroupMember*) defaultInstance {
  return defaultPBGroupMemberInstance;
}
- (PBGroupMember*) defaultInstance {
  return defaultPBGroupMemberInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeSInt64:1 value:self.id];
  }
  if (self.hasPassportId) {
    [output writeSInt64:2 value:self.passportId];
  }
  if (self.hasGroupId) {
    [output writeSInt64:3 value:self.groupId];
  }
  if (self.hasName) {
    [output writeString:4 value:self.name];
  }
  if (self.hasPermission) {
    [output writeEnum:5 value:self.permission];
  }
  if (self.hasStatus) {
    [output writeEnum:6 value:self.status];
  }
  if (self.hasCreatedAt) {
    [output writeSInt64:7 value:self.createdAt];
  }
  if (self.hasUpdatedAt) {
    [output writeSInt64:8 value:self.updatedAt];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeSInt64Size(1, self.id);
  }
  if (self.hasPassportId) {
    size_ += computeSInt64Size(2, self.passportId);
  }
  if (self.hasGroupId) {
    size_ += computeSInt64Size(3, self.groupId);
  }
  if (self.hasName) {
    size_ += computeStringSize(4, self.name);
  }
  if (self.hasPermission) {
    size_ += computeEnumSize(5, self.permission);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(6, self.status);
  }
  if (self.hasCreatedAt) {
    size_ += computeSInt64Size(7, self.createdAt);
  }
  if (self.hasUpdatedAt) {
    size_ += computeSInt64Size(8, self.updatedAt);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBGroupMember*) parseFromData:(NSData*) data {
  return (PBGroupMember*)[[[PBGroupMember builder] mergeFromData:data] build];
}
+ (PBGroupMember*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroupMember*)[[[PBGroupMember builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBGroupMember*) parseFromInputStream:(NSInputStream*) input {
  return (PBGroupMember*)[[[PBGroupMember builder] mergeFromInputStream:input] build];
}
+ (PBGroupMember*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroupMember*)[[[PBGroupMember builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGroupMember*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBGroupMember*)[[[PBGroupMember builder] mergeFromCodedInputStream:input] build];
}
+ (PBGroupMember*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroupMember*)[[[PBGroupMember builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGroupMemberBuilder*) builder {
  return [[PBGroupMemberBuilder alloc] init];
}
+ (PBGroupMemberBuilder*) builderWithPrototype:(PBGroupMember*) prototype {
  return [[PBGroupMember builder] mergeFrom:prototype];
}
- (PBGroupMemberBuilder*) builder {
  return [PBGroupMember builder];
}
- (PBGroupMemberBuilder*) toBuilder {
  return [PBGroupMember builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasPassportId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"passportId", [NSNumber numberWithLongLong:self.passportId]];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", [NSNumber numberWithLongLong:self.groupId]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasPermission) {
    [output appendFormat:@"%@%@: %@\n", indent, @"permission", [NSNumber numberWithInteger:self.permission]];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasCreatedAt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createdAt", [NSNumber numberWithLongLong:self.createdAt]];
  }
  if (self.hasUpdatedAt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updatedAt", [NSNumber numberWithLongLong:self.updatedAt]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBGroupMember class]]) {
    return NO;
  }
  PBGroupMember *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasPassportId == otherMessage.hasPassportId &&
      (!self.hasPassportId || self.passportId == otherMessage.passportId) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || self.groupId == otherMessage.groupId) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasPermission == otherMessage.hasPermission &&
      (!self.hasPermission || self.permission == otherMessage.permission) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasCreatedAt == otherMessage.hasCreatedAt &&
      (!self.hasCreatedAt || self.createdAt == otherMessage.createdAt) &&
      self.hasUpdatedAt == otherMessage.hasUpdatedAt &&
      (!self.hasUpdatedAt || self.updatedAt == otherMessage.updatedAt) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasPassportId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.passportId] hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupId] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasPermission) {
    hashCode = hashCode * 31 + self.permission;
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasCreatedAt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createdAt] hash];
  }
  if (self.hasUpdatedAt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.updatedAt] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL PBGroupMemberPermissionIsValidValue(PBGroupMemberPermission value) {
  switch (value) {
    case PBGroupMemberPermissionPermissionNormal:
    case PBGroupMemberPermissionPermissionAdmin:
    case PBGroupMemberPermissionPermissionOwner:
      return YES;
    default:
      return NO;
  }
}
BOOL PBGroupMemberStatusIsValidValue(PBGroupMemberStatus value) {
  switch (value) {
    case PBGroupMemberStatusStatusCommon:
    case PBGroupMemberStatusStatusDeleted:
      return YES;
    default:
      return NO;
  }
}
@interface PBGroupMemberBuilder()
@property (strong) PBGroupMember* result;
@end

@implementation PBGroupMemberBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBGroupMember alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBGroupMemberBuilder*) clear {
  self.result = [[PBGroupMember alloc] init];
  return self;
}
- (PBGroupMemberBuilder*) clone {
  return [PBGroupMember builderWithPrototype:result];
}
- (PBGroupMember*) defaultInstance {
  return [PBGroupMember defaultInstance];
}
- (PBGroupMember*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBGroupMember*) buildPartial {
  PBGroupMember* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBGroupMemberBuilder*) mergeFrom:(PBGroupMember*) other {
  if (other == [PBGroupMember defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasPassportId) {
    [self setPassportId:other.passportId];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasPermission) {
    [self setPermission:other.permission];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasCreatedAt) {
    [self setCreatedAt:other.createdAt];
  }
  if (other.hasUpdatedAt) {
    [self setUpdatedAt:other.updatedAt];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBGroupMemberBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBGroupMemberBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readSInt64]];
        break;
      }
      case 16: {
        [self setPassportId:[input readSInt64]];
        break;
      }
      case 24: {
        [self setGroupId:[input readSInt64]];
        break;
      }
      case 34: {
        [self setName:[input readString]];
        break;
      }
      case 40: {
        PBGroupMemberPermission value = (PBGroupMemberPermission)[input readEnum];
        if (PBGroupMemberPermissionIsValidValue(value)) {
          [self setPermission:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
      case 48: {
        PBGroupMemberStatus value = (PBGroupMemberStatus)[input readEnum];
        if (PBGroupMemberStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:6 value:value];
        }
        break;
      }
      case 56: {
        [self setCreatedAt:[input readSInt64]];
        break;
      }
      case 64: {
        [self setUpdatedAt:[input readSInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (SInt64) id {
  return result.id;
}
- (PBGroupMemberBuilder*) setId:(SInt64) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (PBGroupMemberBuilder*) clearId {
  result.hasId = NO;
  result.id = 0L;
  return self;
}
- (BOOL) hasPassportId {
  return result.hasPassportId;
}
- (SInt64) passportId {
  return result.passportId;
}
- (PBGroupMemberBuilder*) setPassportId:(SInt64) value {
  result.hasPassportId = YES;
  result.passportId = value;
  return self;
}
- (PBGroupMemberBuilder*) clearPassportId {
  result.hasPassportId = NO;
  result.passportId = 0L;
  return self;
}
- (BOOL) hasGroupId {
  return result.hasGroupId;
}
- (SInt64) groupId {
  return result.groupId;
}
- (PBGroupMemberBuilder*) setGroupId:(SInt64) value {
  result.hasGroupId = YES;
  result.groupId = value;
  return self;
}
- (PBGroupMemberBuilder*) clearGroupId {
  result.hasGroupId = NO;
  result.groupId = 0L;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (PBGroupMemberBuilder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (PBGroupMemberBuilder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasPermission {
  return result.hasPermission;
}
- (PBGroupMemberPermission) permission {
  return result.permission;
}
- (PBGroupMemberBuilder*) setPermission:(PBGroupMemberPermission) value {
  result.hasPermission = YES;
  result.permission = value;
  return self;
}
- (PBGroupMemberBuilder*) clearPermission {
  result.hasPermission = NO;
  result.permission = PBGroupMemberPermissionPermissionNormal;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (PBGroupMemberStatus) status {
  return result.status;
}
- (PBGroupMemberBuilder*) setStatus:(PBGroupMemberStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (PBGroupMemberBuilder*) clearStatus {
  result.hasStatus = NO;
  result.status = PBGroupMemberStatusStatusCommon;
  return self;
}
- (BOOL) hasCreatedAt {
  return result.hasCreatedAt;
}
- (SInt64) createdAt {
  return result.createdAt;
}
- (PBGroupMemberBuilder*) setCreatedAt:(SInt64) value {
  result.hasCreatedAt = YES;
  result.createdAt = value;
  return self;
}
- (PBGroupMemberBuilder*) clearCreatedAt {
  result.hasCreatedAt = NO;
  result.createdAt = 0L;
  return self;
}
- (BOOL) hasUpdatedAt {
  return result.hasUpdatedAt;
}
- (SInt64) updatedAt {
  return result.updatedAt;
}
- (PBGroupMemberBuilder*) setUpdatedAt:(SInt64) value {
  result.hasUpdatedAt = YES;
  result.updatedAt = value;
  return self;
}
- (PBGroupMemberBuilder*) clearUpdatedAt {
  result.hasUpdatedAt = NO;
  result.updatedAt = 0L;
  return self;
}
@end

@interface PBFetchGroupReq ()
@property (strong) PBAppendableArray * groupIdsArray;
@property (strong) PBAppendableArray * groupMemberIdsArray;
@end

@implementation PBFetchGroupReq

@synthesize groupIdsArray;
@dynamic groupIds;
@synthesize groupMemberIdsArray;
@dynamic groupMemberIds;
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static PBFetchGroupReq* defaultPBFetchGroupReqInstance = nil;
+ (void) initialize {
  if (self == [PBFetchGroupReq class]) {
    defaultPBFetchGroupReqInstance = [[PBFetchGroupReq alloc] init];
  }
}
+ (PBFetchGroupReq*) defaultInstance {
  return defaultPBFetchGroupReqInstance;
}
- (PBFetchGroupReq*) defaultInstance {
  return defaultPBFetchGroupReqInstance;
}
- (PBArray *)groupIds {
  return groupIdsArray;
}
- (SInt64)groupIdsAtIndex:(NSUInteger)index {
  return [groupIdsArray int64AtIndex:index];
}
- (PBArray *)groupMemberIds {
  return groupMemberIdsArray;
}
- (SInt64)groupMemberIdsAtIndex:(NSUInteger)index {
  return [groupMemberIdsArray int64AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger groupIdsArrayCount = self.groupIdsArray.count;
  if (groupIdsArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.groupIdsArray.data;
    for (NSUInteger i = 0; i < groupIdsArrayCount; ++i) {
      [output writeSInt64:1 value:values[i]];
    }
  }
  const NSUInteger groupMemberIdsArrayCount = self.groupMemberIdsArray.count;
  if (groupMemberIdsArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.groupMemberIdsArray.data;
    for (NSUInteger i = 0; i < groupMemberIdsArrayCount; ++i) {
      [output writeSInt64:2 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.groupIdsArray.count;
    const SInt64 *values = (const SInt64 *)self.groupIdsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeSInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.groupMemberIdsArray.count;
    const SInt64 *values = (const SInt64 *)self.groupMemberIdsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeSInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBFetchGroupReq*) parseFromData:(NSData*) data {
  return (PBFetchGroupReq*)[[[PBFetchGroupReq builder] mergeFromData:data] build];
}
+ (PBFetchGroupReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchGroupReq*)[[[PBFetchGroupReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBFetchGroupReq*) parseFromInputStream:(NSInputStream*) input {
  return (PBFetchGroupReq*)[[[PBFetchGroupReq builder] mergeFromInputStream:input] build];
}
+ (PBFetchGroupReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchGroupReq*)[[[PBFetchGroupReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchGroupReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBFetchGroupReq*)[[[PBFetchGroupReq builder] mergeFromCodedInputStream:input] build];
}
+ (PBFetchGroupReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchGroupReq*)[[[PBFetchGroupReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchGroupReqBuilder*) builder {
  return [[PBFetchGroupReqBuilder alloc] init];
}
+ (PBFetchGroupReqBuilder*) builderWithPrototype:(PBFetchGroupReq*) prototype {
  return [[PBFetchGroupReq builder] mergeFrom:prototype];
}
- (PBFetchGroupReqBuilder*) builder {
  return [PBFetchGroupReq builder];
}
- (PBFetchGroupReqBuilder*) toBuilder {
  return [PBFetchGroupReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.groupIdsArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupIds", obj];
  }];
  [self.groupMemberIdsArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupMemberIds", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBFetchGroupReq class]]) {
    return NO;
  }
  PBFetchGroupReq *otherMessage = other;
  return
      [self.groupIdsArray isEqualToArray:otherMessage.groupIdsArray] &&
      [self.groupMemberIdsArray isEqualToArray:otherMessage.groupMemberIdsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.groupIdsArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  [self.groupMemberIdsArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBFetchGroupReqBuilder()
@property (strong) PBFetchGroupReq* result;
@end

@implementation PBFetchGroupReqBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBFetchGroupReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBFetchGroupReqBuilder*) clear {
  self.result = [[PBFetchGroupReq alloc] init];
  return self;
}
- (PBFetchGroupReqBuilder*) clone {
  return [PBFetchGroupReq builderWithPrototype:result];
}
- (PBFetchGroupReq*) defaultInstance {
  return [PBFetchGroupReq defaultInstance];
}
- (PBFetchGroupReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBFetchGroupReq*) buildPartial {
  PBFetchGroupReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBFetchGroupReqBuilder*) mergeFrom:(PBFetchGroupReq*) other {
  if (other == [PBFetchGroupReq defaultInstance]) {
    return self;
  }
  if (other.groupIdsArray.count > 0) {
    if (result.groupIdsArray == nil) {
      result.groupIdsArray = [other.groupIdsArray copy];
    } else {
      [result.groupIdsArray appendArray:other.groupIdsArray];
    }
  }
  if (other.groupMemberIdsArray.count > 0) {
    if (result.groupMemberIdsArray == nil) {
      result.groupMemberIdsArray = [other.groupMemberIdsArray copy];
    } else {
      [result.groupMemberIdsArray appendArray:other.groupMemberIdsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBFetchGroupReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBFetchGroupReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self addGroupIds:[input readSInt64]];
        break;
      }
      case 16: {
        [self addGroupMemberIds:[input readSInt64]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)groupIds {
  return result.groupIdsArray;
}
- (SInt64)groupIdsAtIndex:(NSUInteger)index {
  return [result groupIdsAtIndex:index];
}
- (PBFetchGroupReqBuilder *)addGroupIds:(SInt64)value {
  if (result.groupIdsArray == nil) {
    result.groupIdsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [result.groupIdsArray addInt64:value];
  return self;
}
- (PBFetchGroupReqBuilder *)setGroupIdsArray:(NSArray *)array {
  result.groupIdsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (PBFetchGroupReqBuilder *)setGroupIdsValues:(const SInt64 *)values count:(NSUInteger)count {
  result.groupIdsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (PBFetchGroupReqBuilder *)clearGroupIds {
  result.groupIdsArray = nil;
  return self;
}
- (PBAppendableArray *)groupMemberIds {
  return result.groupMemberIdsArray;
}
- (SInt64)groupMemberIdsAtIndex:(NSUInteger)index {
  return [result groupMemberIdsAtIndex:index];
}
- (PBFetchGroupReqBuilder *)addGroupMemberIds:(SInt64)value {
  if (result.groupMemberIdsArray == nil) {
    result.groupMemberIdsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [result.groupMemberIdsArray addInt64:value];
  return self;
}
- (PBFetchGroupReqBuilder *)setGroupMemberIdsArray:(NSArray *)array {
  result.groupMemberIdsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (PBFetchGroupReqBuilder *)setGroupMemberIdsValues:(const SInt64 *)values count:(NSUInteger)count {
  result.groupMemberIdsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (PBFetchGroupReqBuilder *)clearGroupMemberIds {
  result.groupMemberIdsArray = nil;
  return self;
}
@end

@interface PBFetchGroupResp ()
@property (strong) NSMutableArray * groupsArray;
@property (strong) NSMutableArray * groupMembersArray;
@end

@implementation PBFetchGroupResp

@synthesize groupsArray;
@dynamic groups;
@synthesize groupMembersArray;
@dynamic groupMembers;
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static PBFetchGroupResp* defaultPBFetchGroupRespInstance = nil;
+ (void) initialize {
  if (self == [PBFetchGroupResp class]) {
    defaultPBFetchGroupRespInstance = [[PBFetchGroupResp alloc] init];
  }
}
+ (PBFetchGroupResp*) defaultInstance {
  return defaultPBFetchGroupRespInstance;
}
- (PBFetchGroupResp*) defaultInstance {
  return defaultPBFetchGroupRespInstance;
}
- (NSArray *)groups {
  return groupsArray;
}
- (PBGroup*)groupsAtIndex:(NSUInteger)index {
  return [groupsArray objectAtIndex:index];
}
- (NSArray *)groupMembers {
  return groupMembersArray;
}
- (PBGroupMember*)groupMembersAtIndex:(NSUInteger)index {
  return [groupMembersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.groupsArray enumerateObjectsUsingBlock:^(PBGroup *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.groupMembersArray enumerateObjectsUsingBlock:^(PBGroupMember *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.groupsArray enumerateObjectsUsingBlock:^(PBGroup *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  [self.groupMembersArray enumerateObjectsUsingBlock:^(PBGroupMember *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBFetchGroupResp*) parseFromData:(NSData*) data {
  return (PBFetchGroupResp*)[[[PBFetchGroupResp builder] mergeFromData:data] build];
}
+ (PBFetchGroupResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchGroupResp*)[[[PBFetchGroupResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBFetchGroupResp*) parseFromInputStream:(NSInputStream*) input {
  return (PBFetchGroupResp*)[[[PBFetchGroupResp builder] mergeFromInputStream:input] build];
}
+ (PBFetchGroupResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchGroupResp*)[[[PBFetchGroupResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchGroupResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBFetchGroupResp*)[[[PBFetchGroupResp builder] mergeFromCodedInputStream:input] build];
}
+ (PBFetchGroupResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchGroupResp*)[[[PBFetchGroupResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchGroupRespBuilder*) builder {
  return [[PBFetchGroupRespBuilder alloc] init];
}
+ (PBFetchGroupRespBuilder*) builderWithPrototype:(PBFetchGroupResp*) prototype {
  return [[PBFetchGroupResp builder] mergeFrom:prototype];
}
- (PBFetchGroupRespBuilder*) builder {
  return [PBFetchGroupResp builder];
}
- (PBFetchGroupRespBuilder*) toBuilder {
  return [PBFetchGroupResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.groupsArray enumerateObjectsUsingBlock:^(PBGroup *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"groups"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.groupMembersArray enumerateObjectsUsingBlock:^(PBGroupMember *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"groupMembers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBFetchGroupResp class]]) {
    return NO;
  }
  PBFetchGroupResp *otherMessage = other;
  return
      [self.groupsArray isEqualToArray:otherMessage.groupsArray] &&
      [self.groupMembersArray isEqualToArray:otherMessage.groupMembersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.groupsArray enumerateObjectsUsingBlock:^(PBGroup *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.groupMembersArray enumerateObjectsUsingBlock:^(PBGroupMember *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBFetchGroupRespBuilder()
@property (strong) PBFetchGroupResp* result;
@end

@implementation PBFetchGroupRespBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBFetchGroupResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBFetchGroupRespBuilder*) clear {
  self.result = [[PBFetchGroupResp alloc] init];
  return self;
}
- (PBFetchGroupRespBuilder*) clone {
  return [PBFetchGroupResp builderWithPrototype:result];
}
- (PBFetchGroupResp*) defaultInstance {
  return [PBFetchGroupResp defaultInstance];
}
- (PBFetchGroupResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBFetchGroupResp*) buildPartial {
  PBFetchGroupResp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBFetchGroupRespBuilder*) mergeFrom:(PBFetchGroupResp*) other {
  if (other == [PBFetchGroupResp defaultInstance]) {
    return self;
  }
  if (other.groupsArray.count > 0) {
    if (result.groupsArray == nil) {
      result.groupsArray = [[NSMutableArray alloc] initWithArray:other.groupsArray];
    } else {
      [result.groupsArray addObjectsFromArray:other.groupsArray];
    }
  }
  if (other.groupMembersArray.count > 0) {
    if (result.groupMembersArray == nil) {
      result.groupMembersArray = [[NSMutableArray alloc] initWithArray:other.groupMembersArray];
    } else {
      [result.groupMembersArray addObjectsFromArray:other.groupMembersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBFetchGroupRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBFetchGroupRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PBGroupBuilder* subBuilder = [PBGroup builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroups:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PBGroupMemberBuilder* subBuilder = [PBGroupMember builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroupMembers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)groups {
  return result.groupsArray;
}
- (PBGroup*)groupsAtIndex:(NSUInteger)index {
  return [result groupsAtIndex:index];
}
- (PBFetchGroupRespBuilder *)addGroups:(PBGroup*)value {
  if (result.groupsArray == nil) {
    result.groupsArray = [[NSMutableArray alloc]init];
  }
  [result.groupsArray addObject:value];
  return self;
}
- (PBFetchGroupRespBuilder *)setGroupsArray:(NSArray *)array {
  result.groupsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBFetchGroupRespBuilder *)clearGroups {
  result.groupsArray = nil;
  return self;
}
- (NSMutableArray *)groupMembers {
  return result.groupMembersArray;
}
- (PBGroupMember*)groupMembersAtIndex:(NSUInteger)index {
  return [result groupMembersAtIndex:index];
}
- (PBFetchGroupRespBuilder *)addGroupMembers:(PBGroupMember*)value {
  if (result.groupMembersArray == nil) {
    result.groupMembersArray = [[NSMutableArray alloc]init];
  }
  [result.groupMembersArray addObject:value];
  return self;
}
- (PBFetchGroupRespBuilder *)setGroupMembersArray:(NSArray *)array {
  result.groupMembersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBFetchGroupRespBuilder *)clearGroupMembers {
  result.groupMembersArray = nil;
  return self;
}
@end

@interface PBFetchGroupAndMembersByPassportIdReq ()
@property SInt64 passportId;
@end

@implementation PBFetchGroupAndMembersByPassportIdReq

- (BOOL) hasPassportId {
  return !!hasPassportId_;
}
- (void) setHasPassportId:(BOOL) value_ {
  hasPassportId_ = !!value_;
}
@synthesize passportId;
- (id) init {
  if ((self = [super init])) {
    self.passportId = 0L;
  }
  return self;
}
static PBFetchGroupAndMembersByPassportIdReq* defaultPBFetchGroupAndMembersByPassportIdReqInstance = nil;
+ (void) initialize {
  if (self == [PBFetchGroupAndMembersByPassportIdReq class]) {
    defaultPBFetchGroupAndMembersByPassportIdReqInstance = [[PBFetchGroupAndMembersByPassportIdReq alloc] init];
  }
}
+ (PBFetchGroupAndMembersByPassportIdReq*) defaultInstance {
  return defaultPBFetchGroupAndMembersByPassportIdReqInstance;
}
- (PBFetchGroupAndMembersByPassportIdReq*) defaultInstance {
  return defaultPBFetchGroupAndMembersByPassportIdReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPassportId) {
    [output writeSInt64:1 value:self.passportId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPassportId) {
    size_ += computeSInt64Size(1, self.passportId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBFetchGroupAndMembersByPassportIdReq*) parseFromData:(NSData*) data {
  return (PBFetchGroupAndMembersByPassportIdReq*)[[[PBFetchGroupAndMembersByPassportIdReq builder] mergeFromData:data] build];
}
+ (PBFetchGroupAndMembersByPassportIdReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchGroupAndMembersByPassportIdReq*)[[[PBFetchGroupAndMembersByPassportIdReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBFetchGroupAndMembersByPassportIdReq*) parseFromInputStream:(NSInputStream*) input {
  return (PBFetchGroupAndMembersByPassportIdReq*)[[[PBFetchGroupAndMembersByPassportIdReq builder] mergeFromInputStream:input] build];
}
+ (PBFetchGroupAndMembersByPassportIdReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchGroupAndMembersByPassportIdReq*)[[[PBFetchGroupAndMembersByPassportIdReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchGroupAndMembersByPassportIdReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBFetchGroupAndMembersByPassportIdReq*)[[[PBFetchGroupAndMembersByPassportIdReq builder] mergeFromCodedInputStream:input] build];
}
+ (PBFetchGroupAndMembersByPassportIdReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchGroupAndMembersByPassportIdReq*)[[[PBFetchGroupAndMembersByPassportIdReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchGroupAndMembersByPassportIdReqBuilder*) builder {
  return [[PBFetchGroupAndMembersByPassportIdReqBuilder alloc] init];
}
+ (PBFetchGroupAndMembersByPassportIdReqBuilder*) builderWithPrototype:(PBFetchGroupAndMembersByPassportIdReq*) prototype {
  return [[PBFetchGroupAndMembersByPassportIdReq builder] mergeFrom:prototype];
}
- (PBFetchGroupAndMembersByPassportIdReqBuilder*) builder {
  return [PBFetchGroupAndMembersByPassportIdReq builder];
}
- (PBFetchGroupAndMembersByPassportIdReqBuilder*) toBuilder {
  return [PBFetchGroupAndMembersByPassportIdReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPassportId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"passportId", [NSNumber numberWithLongLong:self.passportId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBFetchGroupAndMembersByPassportIdReq class]]) {
    return NO;
  }
  PBFetchGroupAndMembersByPassportIdReq *otherMessage = other;
  return
      self.hasPassportId == otherMessage.hasPassportId &&
      (!self.hasPassportId || self.passportId == otherMessage.passportId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPassportId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.passportId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBFetchGroupAndMembersByPassportIdReqBuilder()
@property (strong) PBFetchGroupAndMembersByPassportIdReq* result;
@end

@implementation PBFetchGroupAndMembersByPassportIdReqBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBFetchGroupAndMembersByPassportIdReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBFetchGroupAndMembersByPassportIdReqBuilder*) clear {
  self.result = [[PBFetchGroupAndMembersByPassportIdReq alloc] init];
  return self;
}
- (PBFetchGroupAndMembersByPassportIdReqBuilder*) clone {
  return [PBFetchGroupAndMembersByPassportIdReq builderWithPrototype:result];
}
- (PBFetchGroupAndMembersByPassportIdReq*) defaultInstance {
  return [PBFetchGroupAndMembersByPassportIdReq defaultInstance];
}
- (PBFetchGroupAndMembersByPassportIdReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBFetchGroupAndMembersByPassportIdReq*) buildPartial {
  PBFetchGroupAndMembersByPassportIdReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBFetchGroupAndMembersByPassportIdReqBuilder*) mergeFrom:(PBFetchGroupAndMembersByPassportIdReq*) other {
  if (other == [PBFetchGroupAndMembersByPassportIdReq defaultInstance]) {
    return self;
  }
  if (other.hasPassportId) {
    [self setPassportId:other.passportId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBFetchGroupAndMembersByPassportIdReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBFetchGroupAndMembersByPassportIdReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPassportId:[input readSInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasPassportId {
  return result.hasPassportId;
}
- (SInt64) passportId {
  return result.passportId;
}
- (PBFetchGroupAndMembersByPassportIdReqBuilder*) setPassportId:(SInt64) value {
  result.hasPassportId = YES;
  result.passportId = value;
  return self;
}
- (PBFetchGroupAndMembersByPassportIdReqBuilder*) clearPassportId {
  result.hasPassportId = NO;
  result.passportId = 0L;
  return self;
}
@end

@interface PBFetchGroupAndMembersByPassportIdResp ()
@property (strong) NSMutableArray * groupsArray;
@property (strong) NSMutableArray * groupMembersArray;
@end

@implementation PBFetchGroupAndMembersByPassportIdResp

@synthesize groupsArray;
@dynamic groups;
@synthesize groupMembersArray;
@dynamic groupMembers;
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static PBFetchGroupAndMembersByPassportIdResp* defaultPBFetchGroupAndMembersByPassportIdRespInstance = nil;
+ (void) initialize {
  if (self == [PBFetchGroupAndMembersByPassportIdResp class]) {
    defaultPBFetchGroupAndMembersByPassportIdRespInstance = [[PBFetchGroupAndMembersByPassportIdResp alloc] init];
  }
}
+ (PBFetchGroupAndMembersByPassportIdResp*) defaultInstance {
  return defaultPBFetchGroupAndMembersByPassportIdRespInstance;
}
- (PBFetchGroupAndMembersByPassportIdResp*) defaultInstance {
  return defaultPBFetchGroupAndMembersByPassportIdRespInstance;
}
- (NSArray *)groups {
  return groupsArray;
}
- (PBGroup*)groupsAtIndex:(NSUInteger)index {
  return [groupsArray objectAtIndex:index];
}
- (NSArray *)groupMembers {
  return groupMembersArray;
}
- (PBGroupMember*)groupMembersAtIndex:(NSUInteger)index {
  return [groupMembersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.groupsArray enumerateObjectsUsingBlock:^(PBGroup *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.groupMembersArray enumerateObjectsUsingBlock:^(PBGroupMember *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.groupsArray enumerateObjectsUsingBlock:^(PBGroup *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  [self.groupMembersArray enumerateObjectsUsingBlock:^(PBGroupMember *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBFetchGroupAndMembersByPassportIdResp*) parseFromData:(NSData*) data {
  return (PBFetchGroupAndMembersByPassportIdResp*)[[[PBFetchGroupAndMembersByPassportIdResp builder] mergeFromData:data] build];
}
+ (PBFetchGroupAndMembersByPassportIdResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchGroupAndMembersByPassportIdResp*)[[[PBFetchGroupAndMembersByPassportIdResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBFetchGroupAndMembersByPassportIdResp*) parseFromInputStream:(NSInputStream*) input {
  return (PBFetchGroupAndMembersByPassportIdResp*)[[[PBFetchGroupAndMembersByPassportIdResp builder] mergeFromInputStream:input] build];
}
+ (PBFetchGroupAndMembersByPassportIdResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchGroupAndMembersByPassportIdResp*)[[[PBFetchGroupAndMembersByPassportIdResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchGroupAndMembersByPassportIdResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBFetchGroupAndMembersByPassportIdResp*)[[[PBFetchGroupAndMembersByPassportIdResp builder] mergeFromCodedInputStream:input] build];
}
+ (PBFetchGroupAndMembersByPassportIdResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchGroupAndMembersByPassportIdResp*)[[[PBFetchGroupAndMembersByPassportIdResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchGroupAndMembersByPassportIdRespBuilder*) builder {
  return [[PBFetchGroupAndMembersByPassportIdRespBuilder alloc] init];
}
+ (PBFetchGroupAndMembersByPassportIdRespBuilder*) builderWithPrototype:(PBFetchGroupAndMembersByPassportIdResp*) prototype {
  return [[PBFetchGroupAndMembersByPassportIdResp builder] mergeFrom:prototype];
}
- (PBFetchGroupAndMembersByPassportIdRespBuilder*) builder {
  return [PBFetchGroupAndMembersByPassportIdResp builder];
}
- (PBFetchGroupAndMembersByPassportIdRespBuilder*) toBuilder {
  return [PBFetchGroupAndMembersByPassportIdResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.groupsArray enumerateObjectsUsingBlock:^(PBGroup *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"groups"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.groupMembersArray enumerateObjectsUsingBlock:^(PBGroupMember *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"groupMembers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBFetchGroupAndMembersByPassportIdResp class]]) {
    return NO;
  }
  PBFetchGroupAndMembersByPassportIdResp *otherMessage = other;
  return
      [self.groupsArray isEqualToArray:otherMessage.groupsArray] &&
      [self.groupMembersArray isEqualToArray:otherMessage.groupMembersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.groupsArray enumerateObjectsUsingBlock:^(PBGroup *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.groupMembersArray enumerateObjectsUsingBlock:^(PBGroupMember *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBFetchGroupAndMembersByPassportIdRespBuilder()
@property (strong) PBFetchGroupAndMembersByPassportIdResp* result;
@end

@implementation PBFetchGroupAndMembersByPassportIdRespBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBFetchGroupAndMembersByPassportIdResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBFetchGroupAndMembersByPassportIdRespBuilder*) clear {
  self.result = [[PBFetchGroupAndMembersByPassportIdResp alloc] init];
  return self;
}
- (PBFetchGroupAndMembersByPassportIdRespBuilder*) clone {
  return [PBFetchGroupAndMembersByPassportIdResp builderWithPrototype:result];
}
- (PBFetchGroupAndMembersByPassportIdResp*) defaultInstance {
  return [PBFetchGroupAndMembersByPassportIdResp defaultInstance];
}
- (PBFetchGroupAndMembersByPassportIdResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBFetchGroupAndMembersByPassportIdResp*) buildPartial {
  PBFetchGroupAndMembersByPassportIdResp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBFetchGroupAndMembersByPassportIdRespBuilder*) mergeFrom:(PBFetchGroupAndMembersByPassportIdResp*) other {
  if (other == [PBFetchGroupAndMembersByPassportIdResp defaultInstance]) {
    return self;
  }
  if (other.groupsArray.count > 0) {
    if (result.groupsArray == nil) {
      result.groupsArray = [[NSMutableArray alloc] initWithArray:other.groupsArray];
    } else {
      [result.groupsArray addObjectsFromArray:other.groupsArray];
    }
  }
  if (other.groupMembersArray.count > 0) {
    if (result.groupMembersArray == nil) {
      result.groupMembersArray = [[NSMutableArray alloc] initWithArray:other.groupMembersArray];
    } else {
      [result.groupMembersArray addObjectsFromArray:other.groupMembersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBFetchGroupAndMembersByPassportIdRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBFetchGroupAndMembersByPassportIdRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PBGroupBuilder* subBuilder = [PBGroup builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroups:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PBGroupMemberBuilder* subBuilder = [PBGroupMember builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroupMembers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)groups {
  return result.groupsArray;
}
- (PBGroup*)groupsAtIndex:(NSUInteger)index {
  return [result groupsAtIndex:index];
}
- (PBFetchGroupAndMembersByPassportIdRespBuilder *)addGroups:(PBGroup*)value {
  if (result.groupsArray == nil) {
    result.groupsArray = [[NSMutableArray alloc]init];
  }
  [result.groupsArray addObject:value];
  return self;
}
- (PBFetchGroupAndMembersByPassportIdRespBuilder *)setGroupsArray:(NSArray *)array {
  result.groupsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBFetchGroupAndMembersByPassportIdRespBuilder *)clearGroups {
  result.groupsArray = nil;
  return self;
}
- (NSMutableArray *)groupMembers {
  return result.groupMembersArray;
}
- (PBGroupMember*)groupMembersAtIndex:(NSUInteger)index {
  return [result groupMembersAtIndex:index];
}
- (PBFetchGroupAndMembersByPassportIdRespBuilder *)addGroupMembers:(PBGroupMember*)value {
  if (result.groupMembersArray == nil) {
    result.groupMembersArray = [[NSMutableArray alloc]init];
  }
  [result.groupMembersArray addObject:value];
  return self;
}
- (PBFetchGroupAndMembersByPassportIdRespBuilder *)setGroupMembersArray:(NSArray *)array {
  result.groupMembersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBFetchGroupAndMembersByPassportIdRespBuilder *)clearGroupMembers {
  result.groupMembersArray = nil;
  return self;
}
@end

@interface PBFetchGroupAndMembersReq ()
@property (strong) PBAppendableArray * groupIdsArray;
@end

@implementation PBFetchGroupAndMembersReq

@synthesize groupIdsArray;
@dynamic groupIds;
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static PBFetchGroupAndMembersReq* defaultPBFetchGroupAndMembersReqInstance = nil;
+ (void) initialize {
  if (self == [PBFetchGroupAndMembersReq class]) {
    defaultPBFetchGroupAndMembersReqInstance = [[PBFetchGroupAndMembersReq alloc] init];
  }
}
+ (PBFetchGroupAndMembersReq*) defaultInstance {
  return defaultPBFetchGroupAndMembersReqInstance;
}
- (PBFetchGroupAndMembersReq*) defaultInstance {
  return defaultPBFetchGroupAndMembersReqInstance;
}
- (PBArray *)groupIds {
  return groupIdsArray;
}
- (SInt64)groupIdsAtIndex:(NSUInteger)index {
  return [groupIdsArray int64AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger groupIdsArrayCount = self.groupIdsArray.count;
  if (groupIdsArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.groupIdsArray.data;
    for (NSUInteger i = 0; i < groupIdsArrayCount; ++i) {
      [output writeSInt64:1 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.groupIdsArray.count;
    const SInt64 *values = (const SInt64 *)self.groupIdsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeSInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBFetchGroupAndMembersReq*) parseFromData:(NSData*) data {
  return (PBFetchGroupAndMembersReq*)[[[PBFetchGroupAndMembersReq builder] mergeFromData:data] build];
}
+ (PBFetchGroupAndMembersReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchGroupAndMembersReq*)[[[PBFetchGroupAndMembersReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBFetchGroupAndMembersReq*) parseFromInputStream:(NSInputStream*) input {
  return (PBFetchGroupAndMembersReq*)[[[PBFetchGroupAndMembersReq builder] mergeFromInputStream:input] build];
}
+ (PBFetchGroupAndMembersReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchGroupAndMembersReq*)[[[PBFetchGroupAndMembersReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchGroupAndMembersReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBFetchGroupAndMembersReq*)[[[PBFetchGroupAndMembersReq builder] mergeFromCodedInputStream:input] build];
}
+ (PBFetchGroupAndMembersReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchGroupAndMembersReq*)[[[PBFetchGroupAndMembersReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchGroupAndMembersReqBuilder*) builder {
  return [[PBFetchGroupAndMembersReqBuilder alloc] init];
}
+ (PBFetchGroupAndMembersReqBuilder*) builderWithPrototype:(PBFetchGroupAndMembersReq*) prototype {
  return [[PBFetchGroupAndMembersReq builder] mergeFrom:prototype];
}
- (PBFetchGroupAndMembersReqBuilder*) builder {
  return [PBFetchGroupAndMembersReq builder];
}
- (PBFetchGroupAndMembersReqBuilder*) toBuilder {
  return [PBFetchGroupAndMembersReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.groupIdsArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupIds", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBFetchGroupAndMembersReq class]]) {
    return NO;
  }
  PBFetchGroupAndMembersReq *otherMessage = other;
  return
      [self.groupIdsArray isEqualToArray:otherMessage.groupIdsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.groupIdsArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBFetchGroupAndMembersReqBuilder()
@property (strong) PBFetchGroupAndMembersReq* result;
@end

@implementation PBFetchGroupAndMembersReqBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBFetchGroupAndMembersReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBFetchGroupAndMembersReqBuilder*) clear {
  self.result = [[PBFetchGroupAndMembersReq alloc] init];
  return self;
}
- (PBFetchGroupAndMembersReqBuilder*) clone {
  return [PBFetchGroupAndMembersReq builderWithPrototype:result];
}
- (PBFetchGroupAndMembersReq*) defaultInstance {
  return [PBFetchGroupAndMembersReq defaultInstance];
}
- (PBFetchGroupAndMembersReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBFetchGroupAndMembersReq*) buildPartial {
  PBFetchGroupAndMembersReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBFetchGroupAndMembersReqBuilder*) mergeFrom:(PBFetchGroupAndMembersReq*) other {
  if (other == [PBFetchGroupAndMembersReq defaultInstance]) {
    return self;
  }
  if (other.groupIdsArray.count > 0) {
    if (result.groupIdsArray == nil) {
      result.groupIdsArray = [other.groupIdsArray copy];
    } else {
      [result.groupIdsArray appendArray:other.groupIdsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBFetchGroupAndMembersReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBFetchGroupAndMembersReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self addGroupIds:[input readSInt64]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)groupIds {
  return result.groupIdsArray;
}
- (SInt64)groupIdsAtIndex:(NSUInteger)index {
  return [result groupIdsAtIndex:index];
}
- (PBFetchGroupAndMembersReqBuilder *)addGroupIds:(SInt64)value {
  if (result.groupIdsArray == nil) {
    result.groupIdsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [result.groupIdsArray addInt64:value];
  return self;
}
- (PBFetchGroupAndMembersReqBuilder *)setGroupIdsArray:(NSArray *)array {
  result.groupIdsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (PBFetchGroupAndMembersReqBuilder *)setGroupIdsValues:(const SInt64 *)values count:(NSUInteger)count {
  result.groupIdsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (PBFetchGroupAndMembersReqBuilder *)clearGroupIds {
  result.groupIdsArray = nil;
  return self;
}
@end

@interface PBFetchGroupAndMembersResp ()
@property (strong) NSMutableArray * groupsArray;
@property (strong) NSMutableArray * groupMembersArray;
@end

@implementation PBFetchGroupAndMembersResp

@synthesize groupsArray;
@dynamic groups;
@synthesize groupMembersArray;
@dynamic groupMembers;
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static PBFetchGroupAndMembersResp* defaultPBFetchGroupAndMembersRespInstance = nil;
+ (void) initialize {
  if (self == [PBFetchGroupAndMembersResp class]) {
    defaultPBFetchGroupAndMembersRespInstance = [[PBFetchGroupAndMembersResp alloc] init];
  }
}
+ (PBFetchGroupAndMembersResp*) defaultInstance {
  return defaultPBFetchGroupAndMembersRespInstance;
}
- (PBFetchGroupAndMembersResp*) defaultInstance {
  return defaultPBFetchGroupAndMembersRespInstance;
}
- (NSArray *)groups {
  return groupsArray;
}
- (PBGroup*)groupsAtIndex:(NSUInteger)index {
  return [groupsArray objectAtIndex:index];
}
- (NSArray *)groupMembers {
  return groupMembersArray;
}
- (PBGroupMember*)groupMembersAtIndex:(NSUInteger)index {
  return [groupMembersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.groupsArray enumerateObjectsUsingBlock:^(PBGroup *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.groupMembersArray enumerateObjectsUsingBlock:^(PBGroupMember *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.groupsArray enumerateObjectsUsingBlock:^(PBGroup *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  [self.groupMembersArray enumerateObjectsUsingBlock:^(PBGroupMember *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBFetchGroupAndMembersResp*) parseFromData:(NSData*) data {
  return (PBFetchGroupAndMembersResp*)[[[PBFetchGroupAndMembersResp builder] mergeFromData:data] build];
}
+ (PBFetchGroupAndMembersResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchGroupAndMembersResp*)[[[PBFetchGroupAndMembersResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBFetchGroupAndMembersResp*) parseFromInputStream:(NSInputStream*) input {
  return (PBFetchGroupAndMembersResp*)[[[PBFetchGroupAndMembersResp builder] mergeFromInputStream:input] build];
}
+ (PBFetchGroupAndMembersResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchGroupAndMembersResp*)[[[PBFetchGroupAndMembersResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchGroupAndMembersResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBFetchGroupAndMembersResp*)[[[PBFetchGroupAndMembersResp builder] mergeFromCodedInputStream:input] build];
}
+ (PBFetchGroupAndMembersResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchGroupAndMembersResp*)[[[PBFetchGroupAndMembersResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchGroupAndMembersRespBuilder*) builder {
  return [[PBFetchGroupAndMembersRespBuilder alloc] init];
}
+ (PBFetchGroupAndMembersRespBuilder*) builderWithPrototype:(PBFetchGroupAndMembersResp*) prototype {
  return [[PBFetchGroupAndMembersResp builder] mergeFrom:prototype];
}
- (PBFetchGroupAndMembersRespBuilder*) builder {
  return [PBFetchGroupAndMembersResp builder];
}
- (PBFetchGroupAndMembersRespBuilder*) toBuilder {
  return [PBFetchGroupAndMembersResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.groupsArray enumerateObjectsUsingBlock:^(PBGroup *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"groups"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.groupMembersArray enumerateObjectsUsingBlock:^(PBGroupMember *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"groupMembers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBFetchGroupAndMembersResp class]]) {
    return NO;
  }
  PBFetchGroupAndMembersResp *otherMessage = other;
  return
      [self.groupsArray isEqualToArray:otherMessage.groupsArray] &&
      [self.groupMembersArray isEqualToArray:otherMessage.groupMembersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.groupsArray enumerateObjectsUsingBlock:^(PBGroup *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.groupMembersArray enumerateObjectsUsingBlock:^(PBGroupMember *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBFetchGroupAndMembersRespBuilder()
@property (strong) PBFetchGroupAndMembersResp* result;
@end

@implementation PBFetchGroupAndMembersRespBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBFetchGroupAndMembersResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBFetchGroupAndMembersRespBuilder*) clear {
  self.result = [[PBFetchGroupAndMembersResp alloc] init];
  return self;
}
- (PBFetchGroupAndMembersRespBuilder*) clone {
  return [PBFetchGroupAndMembersResp builderWithPrototype:result];
}
- (PBFetchGroupAndMembersResp*) defaultInstance {
  return [PBFetchGroupAndMembersResp defaultInstance];
}
- (PBFetchGroupAndMembersResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBFetchGroupAndMembersResp*) buildPartial {
  PBFetchGroupAndMembersResp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBFetchGroupAndMembersRespBuilder*) mergeFrom:(PBFetchGroupAndMembersResp*) other {
  if (other == [PBFetchGroupAndMembersResp defaultInstance]) {
    return self;
  }
  if (other.groupsArray.count > 0) {
    if (result.groupsArray == nil) {
      result.groupsArray = [[NSMutableArray alloc] initWithArray:other.groupsArray];
    } else {
      [result.groupsArray addObjectsFromArray:other.groupsArray];
    }
  }
  if (other.groupMembersArray.count > 0) {
    if (result.groupMembersArray == nil) {
      result.groupMembersArray = [[NSMutableArray alloc] initWithArray:other.groupMembersArray];
    } else {
      [result.groupMembersArray addObjectsFromArray:other.groupMembersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBFetchGroupAndMembersRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBFetchGroupAndMembersRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PBGroupBuilder* subBuilder = [PBGroup builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroups:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PBGroupMemberBuilder* subBuilder = [PBGroupMember builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroupMembers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)groups {
  return result.groupsArray;
}
- (PBGroup*)groupsAtIndex:(NSUInteger)index {
  return [result groupsAtIndex:index];
}
- (PBFetchGroupAndMembersRespBuilder *)addGroups:(PBGroup*)value {
  if (result.groupsArray == nil) {
    result.groupsArray = [[NSMutableArray alloc]init];
  }
  [result.groupsArray addObject:value];
  return self;
}
- (PBFetchGroupAndMembersRespBuilder *)setGroupsArray:(NSArray *)array {
  result.groupsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBFetchGroupAndMembersRespBuilder *)clearGroups {
  result.groupsArray = nil;
  return self;
}
- (NSMutableArray *)groupMembers {
  return result.groupMembersArray;
}
- (PBGroupMember*)groupMembersAtIndex:(NSUInteger)index {
  return [result groupMembersAtIndex:index];
}
- (PBFetchGroupAndMembersRespBuilder *)addGroupMembers:(PBGroupMember*)value {
  if (result.groupMembersArray == nil) {
    result.groupMembersArray = [[NSMutableArray alloc]init];
  }
  [result.groupMembersArray addObject:value];
  return self;
}
- (PBFetchGroupAndMembersRespBuilder *)setGroupMembersArray:(NSArray *)array {
  result.groupMembersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBFetchGroupAndMembersRespBuilder *)clearGroupMembers {
  result.groupMembersArray = nil;
  return self;
}
@end

@interface PBFetchChangedGroupReq ()
@property SInt64 myPassportId;
@property SInt64 maxUpdatedAt;
@end

@implementation PBFetchChangedGroupReq

- (BOOL) hasMyPassportId {
  return !!hasMyPassportId_;
}
- (void) setHasMyPassportId:(BOOL) value_ {
  hasMyPassportId_ = !!value_;
}
@synthesize myPassportId;
- (BOOL) hasMaxUpdatedAt {
  return !!hasMaxUpdatedAt_;
}
- (void) setHasMaxUpdatedAt:(BOOL) value_ {
  hasMaxUpdatedAt_ = !!value_;
}
@synthesize maxUpdatedAt;
- (id) init {
  if ((self = [super init])) {
    self.myPassportId = 0L;
    self.maxUpdatedAt = 0L;
  }
  return self;
}
static PBFetchChangedGroupReq* defaultPBFetchChangedGroupReqInstance = nil;
+ (void) initialize {
  if (self == [PBFetchChangedGroupReq class]) {
    defaultPBFetchChangedGroupReqInstance = [[PBFetchChangedGroupReq alloc] init];
  }
}
+ (PBFetchChangedGroupReq*) defaultInstance {
  return defaultPBFetchChangedGroupReqInstance;
}
- (PBFetchChangedGroupReq*) defaultInstance {
  return defaultPBFetchChangedGroupReqInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMyPassportId) {
    [output writeSInt64:1 value:self.myPassportId];
  }
  if (self.hasMaxUpdatedAt) {
    [output writeSInt64:2 value:self.maxUpdatedAt];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMyPassportId) {
    size_ += computeSInt64Size(1, self.myPassportId);
  }
  if (self.hasMaxUpdatedAt) {
    size_ += computeSInt64Size(2, self.maxUpdatedAt);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBFetchChangedGroupReq*) parseFromData:(NSData*) data {
  return (PBFetchChangedGroupReq*)[[[PBFetchChangedGroupReq builder] mergeFromData:data] build];
}
+ (PBFetchChangedGroupReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchChangedGroupReq*)[[[PBFetchChangedGroupReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBFetchChangedGroupReq*) parseFromInputStream:(NSInputStream*) input {
  return (PBFetchChangedGroupReq*)[[[PBFetchChangedGroupReq builder] mergeFromInputStream:input] build];
}
+ (PBFetchChangedGroupReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchChangedGroupReq*)[[[PBFetchChangedGroupReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchChangedGroupReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBFetchChangedGroupReq*)[[[PBFetchChangedGroupReq builder] mergeFromCodedInputStream:input] build];
}
+ (PBFetchChangedGroupReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchChangedGroupReq*)[[[PBFetchChangedGroupReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchChangedGroupReqBuilder*) builder {
  return [[PBFetchChangedGroupReqBuilder alloc] init];
}
+ (PBFetchChangedGroupReqBuilder*) builderWithPrototype:(PBFetchChangedGroupReq*) prototype {
  return [[PBFetchChangedGroupReq builder] mergeFrom:prototype];
}
- (PBFetchChangedGroupReqBuilder*) builder {
  return [PBFetchChangedGroupReq builder];
}
- (PBFetchChangedGroupReqBuilder*) toBuilder {
  return [PBFetchChangedGroupReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMyPassportId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"myPassportId", [NSNumber numberWithLongLong:self.myPassportId]];
  }
  if (self.hasMaxUpdatedAt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxUpdatedAt", [NSNumber numberWithLongLong:self.maxUpdatedAt]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBFetchChangedGroupReq class]]) {
    return NO;
  }
  PBFetchChangedGroupReq *otherMessage = other;
  return
      self.hasMyPassportId == otherMessage.hasMyPassportId &&
      (!self.hasMyPassportId || self.myPassportId == otherMessage.myPassportId) &&
      self.hasMaxUpdatedAt == otherMessage.hasMaxUpdatedAt &&
      (!self.hasMaxUpdatedAt || self.maxUpdatedAt == otherMessage.maxUpdatedAt) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMyPassportId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.myPassportId] hash];
  }
  if (self.hasMaxUpdatedAt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxUpdatedAt] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBFetchChangedGroupReqBuilder()
@property (strong) PBFetchChangedGroupReq* result;
@end

@implementation PBFetchChangedGroupReqBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBFetchChangedGroupReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBFetchChangedGroupReqBuilder*) clear {
  self.result = [[PBFetchChangedGroupReq alloc] init];
  return self;
}
- (PBFetchChangedGroupReqBuilder*) clone {
  return [PBFetchChangedGroupReq builderWithPrototype:result];
}
- (PBFetchChangedGroupReq*) defaultInstance {
  return [PBFetchChangedGroupReq defaultInstance];
}
- (PBFetchChangedGroupReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBFetchChangedGroupReq*) buildPartial {
  PBFetchChangedGroupReq* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBFetchChangedGroupReqBuilder*) mergeFrom:(PBFetchChangedGroupReq*) other {
  if (other == [PBFetchChangedGroupReq defaultInstance]) {
    return self;
  }
  if (other.hasMyPassportId) {
    [self setMyPassportId:other.myPassportId];
  }
  if (other.hasMaxUpdatedAt) {
    [self setMaxUpdatedAt:other.maxUpdatedAt];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBFetchChangedGroupReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBFetchChangedGroupReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMyPassportId:[input readSInt64]];
        break;
      }
      case 16: {
        [self setMaxUpdatedAt:[input readSInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasMyPassportId {
  return result.hasMyPassportId;
}
- (SInt64) myPassportId {
  return result.myPassportId;
}
- (PBFetchChangedGroupReqBuilder*) setMyPassportId:(SInt64) value {
  result.hasMyPassportId = YES;
  result.myPassportId = value;
  return self;
}
- (PBFetchChangedGroupReqBuilder*) clearMyPassportId {
  result.hasMyPassportId = NO;
  result.myPassportId = 0L;
  return self;
}
- (BOOL) hasMaxUpdatedAt {
  return result.hasMaxUpdatedAt;
}
- (SInt64) maxUpdatedAt {
  return result.maxUpdatedAt;
}
- (PBFetchChangedGroupReqBuilder*) setMaxUpdatedAt:(SInt64) value {
  result.hasMaxUpdatedAt = YES;
  result.maxUpdatedAt = value;
  return self;
}
- (PBFetchChangedGroupReqBuilder*) clearMaxUpdatedAt {
  result.hasMaxUpdatedAt = NO;
  result.maxUpdatedAt = 0L;
  return self;
}
@end

@interface PBFetchChangedGroupResp ()
@property (strong) NSMutableArray * groupsArray;
@property (strong) NSMutableArray * groupMembersArray;
@end

@implementation PBFetchChangedGroupResp

@synthesize groupsArray;
@dynamic groups;
@synthesize groupMembersArray;
@dynamic groupMembers;
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static PBFetchChangedGroupResp* defaultPBFetchChangedGroupRespInstance = nil;
+ (void) initialize {
  if (self == [PBFetchChangedGroupResp class]) {
    defaultPBFetchChangedGroupRespInstance = [[PBFetchChangedGroupResp alloc] init];
  }
}
+ (PBFetchChangedGroupResp*) defaultInstance {
  return defaultPBFetchChangedGroupRespInstance;
}
- (PBFetchChangedGroupResp*) defaultInstance {
  return defaultPBFetchChangedGroupRespInstance;
}
- (NSArray *)groups {
  return groupsArray;
}
- (PBGroup*)groupsAtIndex:(NSUInteger)index {
  return [groupsArray objectAtIndex:index];
}
- (NSArray *)groupMembers {
  return groupMembersArray;
}
- (PBGroupMember*)groupMembersAtIndex:(NSUInteger)index {
  return [groupMembersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.groupsArray enumerateObjectsUsingBlock:^(PBGroup *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.groupMembersArray enumerateObjectsUsingBlock:^(PBGroupMember *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.groupsArray enumerateObjectsUsingBlock:^(PBGroup *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  [self.groupMembersArray enumerateObjectsUsingBlock:^(PBGroupMember *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBFetchChangedGroupResp*) parseFromData:(NSData*) data {
  return (PBFetchChangedGroupResp*)[[[PBFetchChangedGroupResp builder] mergeFromData:data] build];
}
+ (PBFetchChangedGroupResp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchChangedGroupResp*)[[[PBFetchChangedGroupResp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBFetchChangedGroupResp*) parseFromInputStream:(NSInputStream*) input {
  return (PBFetchChangedGroupResp*)[[[PBFetchChangedGroupResp builder] mergeFromInputStream:input] build];
}
+ (PBFetchChangedGroupResp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchChangedGroupResp*)[[[PBFetchChangedGroupResp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchChangedGroupResp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBFetchChangedGroupResp*)[[[PBFetchChangedGroupResp builder] mergeFromCodedInputStream:input] build];
}
+ (PBFetchChangedGroupResp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBFetchChangedGroupResp*)[[[PBFetchChangedGroupResp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBFetchChangedGroupRespBuilder*) builder {
  return [[PBFetchChangedGroupRespBuilder alloc] init];
}
+ (PBFetchChangedGroupRespBuilder*) builderWithPrototype:(PBFetchChangedGroupResp*) prototype {
  return [[PBFetchChangedGroupResp builder] mergeFrom:prototype];
}
- (PBFetchChangedGroupRespBuilder*) builder {
  return [PBFetchChangedGroupResp builder];
}
- (PBFetchChangedGroupRespBuilder*) toBuilder {
  return [PBFetchChangedGroupResp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.groupsArray enumerateObjectsUsingBlock:^(PBGroup *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"groups"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.groupMembersArray enumerateObjectsUsingBlock:^(PBGroupMember *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"groupMembers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBFetchChangedGroupResp class]]) {
    return NO;
  }
  PBFetchChangedGroupResp *otherMessage = other;
  return
      [self.groupsArray isEqualToArray:otherMessage.groupsArray] &&
      [self.groupMembersArray isEqualToArray:otherMessage.groupMembersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.groupsArray enumerateObjectsUsingBlock:^(PBGroup *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.groupMembersArray enumerateObjectsUsingBlock:^(PBGroupMember *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBFetchChangedGroupRespBuilder()
@property (strong) PBFetchChangedGroupResp* result;
@end

@implementation PBFetchChangedGroupRespBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBFetchChangedGroupResp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBFetchChangedGroupRespBuilder*) clear {
  self.result = [[PBFetchChangedGroupResp alloc] init];
  return self;
}
- (PBFetchChangedGroupRespBuilder*) clone {
  return [PBFetchChangedGroupResp builderWithPrototype:result];
}
- (PBFetchChangedGroupResp*) defaultInstance {
  return [PBFetchChangedGroupResp defaultInstance];
}
- (PBFetchChangedGroupResp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBFetchChangedGroupResp*) buildPartial {
  PBFetchChangedGroupResp* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBFetchChangedGroupRespBuilder*) mergeFrom:(PBFetchChangedGroupResp*) other {
  if (other == [PBFetchChangedGroupResp defaultInstance]) {
    return self;
  }
  if (other.groupsArray.count > 0) {
    if (result.groupsArray == nil) {
      result.groupsArray = [[NSMutableArray alloc] initWithArray:other.groupsArray];
    } else {
      [result.groupsArray addObjectsFromArray:other.groupsArray];
    }
  }
  if (other.groupMembersArray.count > 0) {
    if (result.groupMembersArray == nil) {
      result.groupMembersArray = [[NSMutableArray alloc] initWithArray:other.groupMembersArray];
    } else {
      [result.groupMembersArray addObjectsFromArray:other.groupMembersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBFetchChangedGroupRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBFetchChangedGroupRespBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PBGroupBuilder* subBuilder = [PBGroup builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroups:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PBGroupMemberBuilder* subBuilder = [PBGroupMember builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroupMembers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)groups {
  return result.groupsArray;
}
- (PBGroup*)groupsAtIndex:(NSUInteger)index {
  return [result groupsAtIndex:index];
}
- (PBFetchChangedGroupRespBuilder *)addGroups:(PBGroup*)value {
  if (result.groupsArray == nil) {
    result.groupsArray = [[NSMutableArray alloc]init];
  }
  [result.groupsArray addObject:value];
  return self;
}
- (PBFetchChangedGroupRespBuilder *)setGroupsArray:(NSArray *)array {
  result.groupsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBFetchChangedGroupRespBuilder *)clearGroups {
  result.groupsArray = nil;
  return self;
}
- (NSMutableArray *)groupMembers {
  return result.groupMembersArray;
}
- (PBGroupMember*)groupMembersAtIndex:(NSUInteger)index {
  return [result groupMembersAtIndex:index];
}
- (PBFetchChangedGroupRespBuilder *)addGroupMembers:(PBGroupMember*)value {
  if (result.groupMembersArray == nil) {
    result.groupMembersArray = [[NSMutableArray alloc]init];
  }
  [result.groupMembersArray addObject:value];
  return self;
}
- (PBFetchChangedGroupRespBuilder *)setGroupMembersArray:(NSArray *)array {
  result.groupMembersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBFetchChangedGroupRespBuilder *)clearGroupMembers {
  result.groupMembersArray = nil;
  return self;
}
@end

@interface PBGroupChangedNotify ()
@property (strong) NSMutableArray * groupsArray;
@property (strong) NSMutableArray * groupMembersArray;
@end

@implementation PBGroupChangedNotify

@synthesize groupsArray;
@dynamic groups;
@synthesize groupMembersArray;
@dynamic groupMembers;
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static PBGroupChangedNotify* defaultPBGroupChangedNotifyInstance = nil;
+ (void) initialize {
  if (self == [PBGroupChangedNotify class]) {
    defaultPBGroupChangedNotifyInstance = [[PBGroupChangedNotify alloc] init];
  }
}
+ (PBGroupChangedNotify*) defaultInstance {
  return defaultPBGroupChangedNotifyInstance;
}
- (PBGroupChangedNotify*) defaultInstance {
  return defaultPBGroupChangedNotifyInstance;
}
- (NSArray *)groups {
  return groupsArray;
}
- (PBGroup*)groupsAtIndex:(NSUInteger)index {
  return [groupsArray objectAtIndex:index];
}
- (NSArray *)groupMembers {
  return groupMembersArray;
}
- (PBGroupMember*)groupMembersAtIndex:(NSUInteger)index {
  return [groupMembersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.groupsArray enumerateObjectsUsingBlock:^(PBGroup *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.groupMembersArray enumerateObjectsUsingBlock:^(PBGroupMember *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.groupsArray enumerateObjectsUsingBlock:^(PBGroup *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  [self.groupMembersArray enumerateObjectsUsingBlock:^(PBGroupMember *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBGroupChangedNotify*) parseFromData:(NSData*) data {
  return (PBGroupChangedNotify*)[[[PBGroupChangedNotify builder] mergeFromData:data] build];
}
+ (PBGroupChangedNotify*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroupChangedNotify*)[[[PBGroupChangedNotify builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBGroupChangedNotify*) parseFromInputStream:(NSInputStream*) input {
  return (PBGroupChangedNotify*)[[[PBGroupChangedNotify builder] mergeFromInputStream:input] build];
}
+ (PBGroupChangedNotify*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroupChangedNotify*)[[[PBGroupChangedNotify builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGroupChangedNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBGroupChangedNotify*)[[[PBGroupChangedNotify builder] mergeFromCodedInputStream:input] build];
}
+ (PBGroupChangedNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBGroupChangedNotify*)[[[PBGroupChangedNotify builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBGroupChangedNotifyBuilder*) builder {
  return [[PBGroupChangedNotifyBuilder alloc] init];
}
+ (PBGroupChangedNotifyBuilder*) builderWithPrototype:(PBGroupChangedNotify*) prototype {
  return [[PBGroupChangedNotify builder] mergeFrom:prototype];
}
- (PBGroupChangedNotifyBuilder*) builder {
  return [PBGroupChangedNotify builder];
}
- (PBGroupChangedNotifyBuilder*) toBuilder {
  return [PBGroupChangedNotify builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.groupsArray enumerateObjectsUsingBlock:^(PBGroup *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"groups"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.groupMembersArray enumerateObjectsUsingBlock:^(PBGroupMember *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"groupMembers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBGroupChangedNotify class]]) {
    return NO;
  }
  PBGroupChangedNotify *otherMessage = other;
  return
      [self.groupsArray isEqualToArray:otherMessage.groupsArray] &&
      [self.groupMembersArray isEqualToArray:otherMessage.groupMembersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.groupsArray enumerateObjectsUsingBlock:^(PBGroup *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.groupMembersArray enumerateObjectsUsingBlock:^(PBGroupMember *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBGroupChangedNotifyBuilder()
@property (strong) PBGroupChangedNotify* result;
@end

@implementation PBGroupChangedNotifyBuilder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[PBGroupChangedNotify alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBGroupChangedNotifyBuilder*) clear {
  self.result = [[PBGroupChangedNotify alloc] init];
  return self;
}
- (PBGroupChangedNotifyBuilder*) clone {
  return [PBGroupChangedNotify builderWithPrototype:result];
}
- (PBGroupChangedNotify*) defaultInstance {
  return [PBGroupChangedNotify defaultInstance];
}
- (PBGroupChangedNotify*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBGroupChangedNotify*) buildPartial {
  PBGroupChangedNotify* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (PBGroupChangedNotifyBuilder*) mergeFrom:(PBGroupChangedNotify*) other {
  if (other == [PBGroupChangedNotify defaultInstance]) {
    return self;
  }
  if (other.groupsArray.count > 0) {
    if (result.groupsArray == nil) {
      result.groupsArray = [[NSMutableArray alloc] initWithArray:other.groupsArray];
    } else {
      [result.groupsArray addObjectsFromArray:other.groupsArray];
    }
  }
  if (other.groupMembersArray.count > 0) {
    if (result.groupMembersArray == nil) {
      result.groupMembersArray = [[NSMutableArray alloc] initWithArray:other.groupMembersArray];
    } else {
      [result.groupMembersArray addObjectsFromArray:other.groupMembersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBGroupChangedNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBGroupChangedNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PBGroupBuilder* subBuilder = [PBGroup builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroups:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PBGroupMemberBuilder* subBuilder = [PBGroupMember builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroupMembers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)groups {
  return result.groupsArray;
}
- (PBGroup*)groupsAtIndex:(NSUInteger)index {
  return [result groupsAtIndex:index];
}
- (PBGroupChangedNotifyBuilder *)addGroups:(PBGroup*)value {
  if (result.groupsArray == nil) {
    result.groupsArray = [[NSMutableArray alloc]init];
  }
  [result.groupsArray addObject:value];
  return self;
}
- (PBGroupChangedNotifyBuilder *)setGroupsArray:(NSArray *)array {
  result.groupsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBGroupChangedNotifyBuilder *)clearGroups {
  result.groupsArray = nil;
  return self;
}
- (NSMutableArray *)groupMembers {
  return result.groupMembersArray;
}
- (PBGroupMember*)groupMembersAtIndex:(NSUInteger)index {
  return [result groupMembersAtIndex:index];
}
- (PBGroupChangedNotifyBuilder *)addGroupMembers:(PBGroupMember*)value {
  if (result.groupMembersArray == nil) {
    result.groupMembersArray = [[NSMutableArray alloc]init];
  }
  [result.groupMembersArray addObject:value];
  return self;
}
- (PBGroupChangedNotifyBuilder *)setGroupMembersArray:(NSArray *)array {
  result.groupMembersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (PBGroupChangedNotifyBuilder *)clearGroupMembers {
  result.groupMembersArray = nil;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
